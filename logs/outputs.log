=== Project run started at: 2025-04-28 15:21:16 ===

### [Step 1/19] Running: scripts_fv/packages.R ###


> # =====================================
> # Install missing R packages safely
> # =====================================
> 
> # ----- 1. Normal CRAN packages -----
> 
> packages <- c(
+   "dplyr", "ade4", "tidyr", "adegenet", "readr", "tidyverse", "reldist", "ape",
+   "ggdendro", "ggpubr", "phylogram", "phytools", "dendextend", "geosphere", "vegan", "e1071",
+   "Hmisc", "REAT", "ggplot2", "gridExtra", "stringr", "conflicted", "graph4lg", "TreeDist",
+   "corrplot", "geiger", "car", "caper", "nlme", "Publish", "geomorph",
+   "cowplot", "GGally", "png", "grid", "factoextra", "cluster", "NbClust", "fpc", "PlotTools",
+   "wesanderson", "magick", "picante", "Biodem", "SDPDmod", "surface"
+ )

> # Excluded manually:
> # - "surface" → Special/archived install.
> # - "BiocManager" → Installer utility.
> 
> # Log files
> log_skipped <- "skipped_packages.log"

> log_installed <- "installed_packages.log"

> log_failed <- "failed_packages.log"

> log_errors <- "error_messages.log"

> # Safely clear old logs
> safe_remove <- function(file) if (file.exists(file)) file.remove(file)

> invisible(lapply(c(log_skipped, log_installed, log_failed, log_errors), safe_remove))

> # Installed packages snapshot
> installed <- rownames(installed.packages())

> # Helper function to install missing packages only
> install_if_needed <- function(pkg) {
+   if (pkg %in% installed) {
+     write(pkg, file = log_skipped, append = TRUE)
+   } else {
+     message("Installing: ", pkg)
+     tryCatch({
+       install.packages(pkg) # Force binary where available
+       installed <<- rownames(installed.packages()) # Refresh full list
+       if (pkg %in% installed) {
+         write(pkg, file = log_installed, append = TRUE)
+       } else {
+         write(pkg, file = log_failed, append = TRUE)
+       }
+     }, error = function(e) {
+       write(pkg, file = log_failed, append = TRUE)
+       write(paste(pkg, ":", e$message), file = log_errors, append = TRUE)
+     })
+   }
+ }

> # Install missing CRAN packages
> invisible(lapply(packages, install_if_needed))

> # Test if packages load
> invisible(lapply(packages, function(pkg) {
+   message("Trying to load: ", pkg)
+   tryCatch({
+     library(pkg, character.only = TRUE)
+   }, error = function(e) {
+     message("❌ Failed to load ", pkg, ": ", e$message)
+   })
+ }))
Trying to load: dplyr
Trying to load: ade4
Trying to load: tidyr
Trying to load: adegenet
Trying to load: readr
Trying to load: tidyverse
Trying to load: reldist
Trying to load: ape
Trying to load: ggdendro
Trying to load: ggpubr
Trying to load: phylogram
Trying to load: phytools
Trying to load: dendextend
Trying to load: geosphere
Trying to load: vegan
Trying to load: e1071
Trying to load: Hmisc
Trying to load: REAT
Trying to load: ggplot2
Trying to load: gridExtra
Trying to load: stringr
Trying to load: conflicted
Trying to load: graph4lg
Trying to load: TreeDist
Trying to load: corrplot
Trying to load: geiger
Trying to load: car
Trying to load: caper
Trying to load: nlme
Trying to load: Publish
Trying to load: geomorph
Trying to load: cowplot
Trying to load: GGally
Trying to load: png
Trying to load: grid
Trying to load: factoextra
Trying to load: cluster
Trying to load: NbClust
Trying to load: fpc
Trying to load: PlotTools
Trying to load: wesanderson
Trying to load: magick
Trying to load: picante
⚠️ Warning in script: scripts_fv/packages.R

### [Step 2/19] Running: scripts_fv/1.1.SurAdmin_de_datos.R ###


> ######################Limpieza de la base de datos########################
> ##########################################################################
> 
> #Instalación de paquetes
> library(dplyr)

> library(ade4)

> library(tidyr)

> #Abrir y explorar bases de datos
> primera<- read.csv("scripts_fv/Datos/all_tabulated.csv", sep=",", header=TRUE, fill = T)

> segunda<- read.csv("scripts_fv/Datos/Muestras Fondecyt 11160402 Alelos - RACK 1.csv", sep =",", header = TRUE, fill = TRUE)

> # Renombrar la primera columna y crear variable de alelos
> primera <- primera %>%
+   rename(Sample.Name = X) %>% 
+   mutate(Alleles = rep(1:2, length.out = nrow(primera)))

> # Eliminar columna X.1 y reemplazar -9 y datos vacíos por NA
> primera <- primera %>%
+   dplyr::select(-X.1) %>%
+   mutate(across(c(D3S1358, TH01, D21S11, D18S51, Penta.E, D5S818, D13S317, D7S820, D16S539, CSF1PO, Penta.D, vWA, D8S1179, TPOX, FGA), ~ na_if(., -9)))

> segunda <- segunda %>%
+   mutate(across(c(Allele.1, Allele.2), ~ na_if(., "")))

> ################Unificar las bases de datos######################
> #Transformar columnas en filas
> 
> X <- segunda %>%
+   pivot_wider(names_from = Marker, values_from = c(Allele.1, Allele.2))

> x1 <- X[1:17] %>% mutate(Alleles = 1)

> x2 <- X[18:33]

> x3 <- X[1]

> x4 <- cbind(x2, x3) %>% mutate(Alleles = 2)

> # Renombrar columnas de alelos de manera eficiente
> new_names <- c("D3S1358", "TH01", "D21S11", "D18S51", "Penta.E", "D5S818", "D13S317", "D7S820", 
+                "D16S539", "CSF1PO", "Penta.D", "AMEL", "vWA", "D8S1179", "TPOX", "FGA")

> colnames(x1)[2:17] <- new_names

> colnames(x4)[1:16] <- new_names

> # Unir las bases de datos x1 y x4
> union_df <- bind_rows(x1, x4)

> colnames(union_df)
 [1] "Sample.Name" "D3S1358"     "TH01"        "D21S11"      "D18S51"      "Penta.E"     "D5S818"     
 [8] "D13S317"     "D7S820"      "D16S539"     "CSF1PO"      "Penta.D"     "AMEL"        "vWA"        
[15] "D8S1179"     "TPOX"        "FGA"         "Alleles"    

> # Valores raros (OL)
> # Cambiar "OL" a NA en todas las columnas de marcadores
> union_df <- union_df %>%
+   mutate(across(c("D3S1358", "TH01", "D21S11", "D18S51", "Penta.E", 
+                   "D5S818", "D13S317", "D7S820", "D16S539", "CSF1PO", 
+                   "Penta.D", "vWA", "D8S1179", "TPOX", "FGA"), ~ ifelse(. == "OL", NA, .)))

> # Cambiar tipos de datos a factor y numérico donde corresponda
> union_df <- union_df %>%
+   mutate(across(c("D3S1358", "TH01", "D21S11", "D18S51", "Penta.E", 
+                   "D5S818", "D13S317", "D7S820", "D16S539", "CSF1PO", 
+                   "Penta.D", "vWA", "D8S1179", "TPOX", "FGA"), ~ as.numeric(as.character(.))))

> #TODO: REVISAR. Me salen 2 warnings al correr la línea 50:
> ## RESOLUCION: Para evitar esto, mejor generar los NA que corresponan antes. CORREGIDO
> 
> # Fusionar ambas bases de datos
> mi.final <- merge(union_df, primera, all = TRUE)

> # Eliminar columna AMEL
> mi.final <- mi.final %>%
+   dplyr::select(-AMEL)

> #Borrar otras bases 
> primera <- NULL

> segunda <- NULL 

> X <- NULL 

> x1 <- NULL 

> x2 <- NULL

> x3 <- NULL

> x4 <- NULL

> union_df <- NULL

> rm(primera, segunda, union_df, X, x1, x2, x3, x4)

> # Convertir columnas a clase numérica, excepto "Sample.Name" y "Alleles"
> mi.final[ , 2:16] <- lapply(mi.final[ , 2:16], function(x) as.numeric(as.character(x)))

> # Agregar variable 'community' basado en los patrones de 'Sample.Name'
> mi.final <- mi.final %>%
+   mutate(community = case_when(
+     grepl("^DV", Sample.Name) ~ "EL_Divisadero",
+     grepl("^BZ", Sample.Name) ~ "BARRAZA",
+     grepl("^EA", Sample.Name) ~ "EL_ALTAR",
+     grepl("^MQ", Sample.Name) ~ "MANQUEHUA",
+     grepl("^PQ", Sample.Name) ~ "PUNITAQUI",
+     grepl("^RP", Sample.Name) ~ "RINCONADA_DE_PUNITAQUI",
+     grepl("^CA", Sample.Name) ~ "CANELILLA_OVALLE",
+     grepl("^CB", Sample.Name) ~ "CANELA_BAJA",
+     grepl("^(CL|CR)", Sample.Name) ~ "LA_CALERA",
+     grepl("^ES", Sample.Name) ~ "EL_ESPINAL",
+     grepl("^GG", Sample.Name) ~ "GUALLIGUAICA",
+     grepl("^HT", Sample.Name) ~ "HUENTELAUQUEN",
+     grepl("^LG", Sample.Name) ~ "CASTILLO_MAL_PASO",
+     grepl("^MP", Sample.Name) ~ "MONTE_PATRIA",
+     grepl("^VP", Sample.Name) ~ "LA_POLVADA",
+     TRUE ~ "OTHER"
+   ))

> # Filtrar los casos donde 'community' no es 'OTHER' ni NA
> mi.final <- mi.final %>%
+   dplyr::filter(!community %in% c('OTHER', NA))

> # Renombrar 'Sample.Name' a 'Ind' y 'community' a 'Pop'
> mi.final <- mi.final %>%
+   rename(Ind = Sample.Name, Pop = community)

> mi.final<-data.frame(mi.final)

> # Verificar el resultado final
> View(mi.final)

> # Transformación de datos
> mi.final_wide <- mi.final %>%
+   mutate(row_num = Alleles) %>%
+   pivot_wider(
+     names_from = row_num,
+     values_from = -c(Ind, Pop),
+     names_sep = "_"
+   )

> colnames(mi.final_wide)
 [1] "Ind"       "Pop"       "D3S1358_1" "D3S1358_2" "TH01_1"    "TH01_2"    "D21S11_1"  "D21S11_2"  "D18S51_1" 
[10] "D18S51_2"  "Penta.E_1" "Penta.E_2" "D5S818_1"  "D5S818_2"  "D13S317_1" "D13S317_2" "D7S820_1"  "D7S820_2" 
[19] "D16S539_1" "D16S539_2" "CSF1PO_1"  "CSF1PO_2"  "Penta.D_1" "Penta.D_2" "vWA_1"     "vWA_2"     "D8S1179_1"
[28] "D8S1179_2" "TPOX_1"    "TPOX_2"    "FGA_1"     "FGA_2"     "Alleles_1" "Alleles_2" "row_num_1" "row_num_2"

> #Quitar las últimas 4 columnas
> STRv2 <-data.frame(mi.final_wide%>% dplyr::select(-tail(names(.), 4)))

> colnames(STRv2)
 [1] "Ind"       "Pop"       "D3S1358_1" "D3S1358_2" "TH01_1"    "TH01_2"    "D21S11_1"  "D21S11_2"  "D18S51_1" 
[10] "D18S51_2"  "Penta.E_1" "Penta.E_2" "D5S818_1"  "D5S818_2"  "D13S317_1" "D13S317_2" "D7S820_1"  "D7S820_2" 
[19] "D16S539_1" "D16S539_2" "CSF1PO_1"  "CSF1PO_2"  "Penta.D_1" "Penta.D_2" "vWA_1"     "vWA_2"     "D8S1179_1"
[28] "D8S1179_2" "TPOX_1"    "TPOX_2"    "FGA_1"     "FGA_2"    

> STRv2
      Ind              Pop D3S1358_1 D3S1358_2 TH01_1 TH01_2 D21S11_1 D21S11_2 D18S51_1 D18S51_2 Penta.E_1
1   BZ001          BARRAZA        15        16    9.3    9.3     32.2     33.2       14       15         7
2   BZ002          BARRAZA        15        17    6.0    8.0     29.0     29.0       14       14        10
3   BZ004          BARRAZA        15        16    7.0    9.0     29.0     30.0       12       21        17
4   BZ005          BARRAZA        15        16    7.0    7.0     28.0     29.0       13       16        17
5   BZ006          BARRAZA        16        17    6.0    7.0     29.0     33.2       15       19        11
6   BZ008          BARRAZA        15        16    6.0    7.0     28.0     31.2       14       15        13
7   BZ011          BARRAZA        15        18    7.0    8.0     29.0     30.0       13       15        11
8   BZ013          BARRAZA        15        18    8.0    9.0     29.0     32.2       18       18        12
9   BZ015          BARRAZA        15        15    8.0    9.3     29.0     31.0       12       14         8
10  BZ016          BARRAZA        17        18    7.0    7.0     28.0     29.0       13       15        11
11  BZ017          BARRAZA        15        18    6.0    7.0     29.0     33.2       13       14        17
12 BZ018b          BARRAZA        15        15    7.0    9.3     30.0     30.0       14       16         7
13  BZ020          BARRAZA        15        18    7.0    8.0     30.0     32.2       12       22        12
14  BZ021          BARRAZA        15        17    7.0    9.3     29.0     30.0       13       17        14
15  BZ023          BARRAZA        NA        NA     NA     NA       NA       NA       NA       NA        NA
16  BZ024          BARRAZA        15        16    9.3    9.3     27.0     32.2       14       16        13
17  BZ025          BARRAZA        15        16    6.0    7.0     29.0     30.0       15       15        11
18  BZ026          BARRAZA        14        15    9.3    9.3     30.0     31.0       12       14        11
19  BZ027          BARRAZA        15        18    7.0    9.3     30.0     31.0       13       15        18
20  BZ028          BARRAZA        14        18    6.0    7.0     30.0     30.0       14       19         7
21  BZ030          BARRAZA        14        16    6.0    9.3     30.0     32.2       14       15        12
22  BZ032          BARRAZA        14        15    7.0    7.0     29.0     32.2       12       15        13
23  BZ033          BARRAZA        15        17    6.0    9.3     28.0     32.2       11       14         7
24  BZ034          BARRAZA        15        16    7.0    9.3     29.0     32.2       15       17         7
25  BZ035          BARRAZA        15        16    6.0    7.0     31.0     31.2       18       18        15
26  BZ036          BARRAZA        16        18    7.0    9.3     29.0     32.2       13       17         7
27  BZ037          BARRAZA        15        18    6.0    9.3     30.0     30.0       14       18        11
28  BZ040          BARRAZA        16        16    6.0    9.3     30.0     30.0       14       20        15
29  BZ041          BARRAZA        15        17    6.0    9.3     28.0     30.0       10       13        11
30  CA002 CANELILLA_OVALLE        16        18    6.0    9.3     31.2     31.2       13       17        13
31  CA005 CANELILLA_OVALLE        15        15    7.0    9.0     30.0     32.2       13       15        12
   Penta.E_2 D5S818_1 D5S818_2 D13S317_1 D13S317_2 D7S820_1 D7S820_2 D16S539_1 D16S539_2 CSF1PO_1 CSF1PO_2
1         20        9        9        10        13        8       11         9        12       10       11
2         14       11       11        13        14       11       11        10        12       11       12
3         19        9       11        11        13       10       12         9        12       12       12
4         18       11       11         8        13       11       14        10        11       12       12
5         12       10       11         9        12       11       12         9        12       12       12
6         17       11       11        12        13       10       12        10        12       12       13
7         20       12       13         9        12       10       11        10        10       10       11
8         22       12       12        11        11       10       12         9         9       12       12
9         11       11       13         8        14       12       13        10        10       12       12
10        12       11       12         9        12       11       12         9        10       11       11
11        17       12       12         9        12       10       12        10        12       11       12
12        19        7       10        10        12       11       12         9        13       11       11
13        12       10       11         9        11       11       12         9        11       10       12
14        15        9       11        11        11        7       11         9         9       10       11
15        NA       NA       NA        NA        NA       NA       NA        NA        NA       NA       NA
16        18       11       12         9        12       10       10        12        13       11       12
17        19       11       11        12        13        9       10        10        12       11       12
18        13       11       11        11        14       10       12        10        11       10       12
19        21       11       13        10        13       11       11        10        11       10       11
20        15        7       11         8        13       11       11        12        13       12       12
21        12        7       10        12        14        8        9        11        12       10       12
22        18       11       12        11        14        9       11        10        12       10       12
23        13        9       11         9        12        9       10         9        12       11       12
24        12       12       12        10        14        9       11        10        13       10       12
25        17        9       11        11        13       11       12         9        11       12       12
26        17       11       11        12        13       11       12        12        12       11       11
27        16        9       13         9        11       10       10        10        11       10       11
28        18       11       12         9        12        8       10         9        10       10       11
29        16       12       12        11        13       11       11         9         9       10       11
30        15       11       12        13        14       10       11        12        12       11       12
31        14       11       12        10        12       11       11        12        13       11       11
   Penta.D_1 Penta.D_2 vWA_1 vWA_2 D8S1179_1 D8S1179_2 TPOX_1 TPOX_2 FGA_1 FGA_2
1         12        13    16    19        11        11     11     12    22  24.0
2         12        13    17    18        12        13      8     11    22  22.0
3         13        14    16    16        12        15      8     12    26  26.0
4          7         9    17    17        13        13      8     11    19  24.0
5         10        12    18    19        10        14      8      8    24  24.0
6         10        13    17    17        10        15      8     11    21  23.0
7         10        13    15    15        10        15     11     12    20  26.0
8         10        10    16    17        13        13      8     11    21  27.0
9         10        11    16    19        11        13      8      8    21  22.0
10         9        10    15    18        13        15     11     12    23  26.0
11        11        13    15    15        13        14      8     12    20  23.0
12        10        12    16    17        13        13      8     11    24  24.0
13         7         9    16    17        10        15      8      8    18  25.0
14        10        12    15    19        12        12      9     11    21  26.0
15        NA        NA    NA    NA        NA        NA     NA     NA    NA    NA
16        10        11    16    19        12        13      8      8    24  25.0
17         9        13    17    17        11        13     11     12    20  21.0
18        10        15    16    19        15        15      8     11    22  26.0
19         9        12    16    19        13        14     10     11    21  24.0
20        10        13    15    17        12        13      8      8    20  24.0
21        12        13    16    17        14        15      8      9    20  23.0
22         9        10    17    17        12        15      8      8    20  25.0
23         9        10    16    19        12        13      8     11    25  26.0
24         9        11    16    17        13        13     11     11    21  26.0
25         9         9    18    19        13        13      9     11    21  27.0
26        13        13    17    17        12        14      8     11    24  24.0
27         9        10    15    18        13        13      8     11    21  25.0
28        10        12    17    17        12        14      8      9    24  25.0
29        12        13    16    16        14        16      8     12    23  23.2
30        10        11    14    16        13        13      8     11    26  27.0
31        10        11    17    19        11        12      8      8    22  29.0
 [ reached 'max' / getOption("max.print") -- omitted 439 rows ]

> #Guardar en STRv.2
> names(STRv2) <- gsub("_1|_2", "", names(STRv2))

> write.csv(STRv2, "scripts_fv/Datos/STRV2.csv", row.names = FALSE)

### [Step 3/19] Running: scripts_fv/1.2.Formatos_FV.R ###


> ##########################################################################################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth inheritance and land tenure norms in agropastoralist communities.############
> ##########################################################################################################################################################
> 
> 
> #### OBJETIVO 3 ####
> ### To build a phylogenetic tree showing relationships between communities based on the distributions of genetic microsatellite markers within and between communities.###
> 
> ## Cargar paquetes y librerias
> library(adegenet)

> library(readr)

> library(tidyverse)

> ## Cargar bases de datos ##
> STR <- read.csv("scripts_fv/Datos/STR.csv", sep = ",")

> STR <- STR[STR$ind != "BZ023", ]

> STR$pop <- gsub(" ", "_", STR$pop)

> colnames(STR) <- gsub("\\.1$", " ", colnames(STR))

> write.table(STR, file = "scripts_fv/Datos/STR1.txt", sep = "\t", row.names = FALSE, col.names = TRUE, quote = FALSE)

> STR [, 3:ncol(STR)] <- lapply(STR[, 3:ncol(STR)], function(x) sprintf("%02d", x))

> locis <- colnames(STR[,3:32])

> locis_unicos <- unique(trimws(locis))

> pop<-STR$pop

> STR_alelos_slash  <- read_delim("scripts_fv/Datos/STR_ceros.csv",";", escape_double = FALSE, trim_ws = TRUE)
indexing STR_ceros.csv [==================================================================] 968.53MB/s, eta:  0s                                                                                                                Rows: 478 Columns: 31
── Column specification ────────────────────────────────────────────────────────────────────────────────────────
Delimiter: ";"
chr (31): ID, D3S1358.1, D3S1358.2, TH01.1, TH01.2, D21S11.1, D21S11.2, D18S51.1, D18S51.2, Penta_E.1, Penta...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.

> STR_alelos_slash <- STR_alelos_slash[STR_alelos_slash$ID != "BZ023", ]

> STR_alelos_slash <- STR_alelos_slash %>% 
+   unite( D3S1358, D3S1358.1, D3S1358.2, sep = "/", remove = TRUE) %>% 
+   unite(TH01, TH01.1, TH01.2, sep = "/", remove = TRUE) %>% 
+   unite(D21S11, D21S11.1, D21S11.2, sep = "/", remove = TRUE) %>% 
+   unite(D18S51, D18S51.1, D18S51.2, sep = "/", remove = TRUE) %>% 
+   unite(Penta_E, Penta_E.1, Penta_E.2, sep = "/", remove = TRUE) %>%
+   unite(D5S818, D5S818.1, D5S818.2, sep = "/", remove = TRUE) %>% 
+   unite(D13S317, D13S317.1, D13S317.2, sep = "/", remove = TRUE) %>% 
+   unite(D7S820, D7S820.1, D7S820.2, sep = "/", remove = TRUE) %>% 
+   unite(D16S539, D16S539.1, D16S539.2, sep = "/", remove = TRUE) %>% 
+   unite(CSF1PO, CSF1PO.1, CSF1PO.2, sep = "/", remove = TRUE) %>% 
+   unite(Penta_D, Penta_D.1, Penta_D.2, sep = "/", remove = TRUE) %>% 
+   unite(vWA, vWA.1, vWA.2, sep = "/", remove = TRUE) %>% 
+   unite(D8S1179, D8S1179.1, D8S1179.2, sep = "/", remove = TRUE) %>% 
+   unite(TPOX, TPOX.1, TPOX.2, sep = "/", remove = TRUE) %>% 
+   unite(FGA, FGA.1, FGA.2, sep = "/", remove = TRUE)

> STR_alelos_slash <- STR_alelos_slash[ !(STR_alelos_slash$ID %in% c("AS", "DS", "JG", "MR", "NM", "VG", "WW182", "pos_ctrl")), ] # Quitar controles

> STR_alelos_slash<-as.data.frame(STR_alelos_slash)

> row.names(STR_alelos_slash) <- STR_alelos_slash$ID 

> STR_alelos_slash[1] <- NULL

> STR_genind <-df2genind(STR_alelos_slash,sep = "/",ncode = 3,ind.names = row.names(STR_alelos_slash),loc.names = colnames(STR_alelos_slash),pop = pop,ploidy = 2,NA.char = "000")

> #TODO: REVISAR. La última línea me arroja un Warning:
> #Warning message:
> #  In df2genind(STR_alelos_slash, sep = "/", ncode = 3, ind.names = row.names(STR_alelos_slash),  :
> #                 Individuals with no scored loci have been removed
> # RESOLUCION: BZ023 tiene solo ceros. Fue removido con anterioridad.
> 

### [Step 4/19] Running: scripts_fv/OBJETIVO_1.1.Surnames.R ###


> ##########################################################################################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth inheritance and land tenure norms in agropastoralist communities.############
> ##########################################################################################################################################################
> 
> #### OBJETIVO 1 ####
> ###  To build a phylogenetic tree showing relationships between communities based on the distributions of surnames within and between communities. ###
> 
> ## Cargar DATOS ##
> comuneros <- read.csv("scripts_fv/Datos/commoners.csv")

> comuneros$community <- gsub(" ", "_", comuneros$community)

> comuneros$community[grepl("LA_RINCONADA_DE_PUNITAQUI" , comuneros$community)] <- "RINCONADA_DE_PUNITAQUI"

> ## Cargar paquetes y librerias ##
> library(Biodem)

> library(reldist)

> library(dplyr)

> library(ape)

> library(ggdendro)

> library(ggpubr)

> library(phylogram)

> library(phytools)

> ##Metodo por cluster jerarquico de una matriz pairwise. Hedrick's standarized kinship coef.##
> 
> ##1. TODAS LAS COMUNIDADES
> surname_distance_matrix <- function(comuneros,
+                                     group_by_col="community") {
+   # cross tabulate
+   surnames_freq <- table(comuneros$surname_father,
+                          comuneros[[group_by_col]])
+   # generates Hedrick (1971) kinship matrix
+   # there are other methods (i.e. lasker, uri)
+   hedkin <- hedrick(surnames_freq)
+   # hedrick returns values of similarity
+   # transform them into values of dissimilarity (distance)
+   as.dist(1-hedkin)
+   #as.dist(1-hedkin) #IMPORTANT: This is likely wrong. We figured out a better way.
+   #as.dist(Biodem::Fst(hedkin, sum(colSums(surnames_freq) )))
+ }

> #TODO: REVISAR. Arriba hay una nota (muuuy antigua) que sugiere que el método es incorrecto.
> # Deberíamos revisarlo
> # RESOLUCION: NO CAMBIARLO AHORA, SI NO HASTA ARREGLAR TODOS LOS OTROS SCRIPTS
> #=======
> 
> 
> ## REVISIÓN: Me di cuenta que (1-hedkin)  no parece tener sentido, al menos teórico. ¿Qué se intenta hacer con este paso? ¿Para qué se está invirtiendo la escala?
> # Alternativas: 
> # (1)Usar simplemente as.dist(hedkin). ¿Por qué no se optó por esto?
> # (2)Usar sqrt(1 - hedkin).
> # (3)Si lo que se busca es normalizar hedkin_normalizado <- hedkin / max(hedkin) y luego distancia <- as.dist(hedkin_normalizado)
> # (4) Si se quiere si o si invertir la escala: distancia <- as.dist(sqrt(1 - (hedkin / max(hedkin))) 
> #(5) as.dist(Biodem::Fst(hedkin, sum(colSums(surnames_freq) )))
> surname_matrix <- surname_distance_matrix(comuneros)

> hclust_default_method <- "average"

> surname_clustering <- function(comuneros,
+                                hclust_method=hclust_default_method,
+                                group_by_col="community") {
+   comuneros %>%
+     surname_distance_matrix(group_by_col) %>%
+     # hierarchical clustering of the distance matrix
+     hclust(method=hclust_method)
+ }

> hc_total <- surname_clustering(comuneros)

> plot(hc_total)

> y_total <- ape::as.phylo(hc_total) #Phylo format

> #Personalizar ?rboles
> 
> plot(hc_total) #Dendrograma

> ddata <- dendro_data(hc_total, type = "rectangle")

> p <- ggplot(segment(ddata)) + 
+   geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) + 
+   coord_flip() +
+   scale_y_reverse(expand = c(0.2, 0))+
+   ggdendro::theme_dendro()

> p

> ##2. COOMUNIDADES MUESTREADAS
> # Seleccionar los datos que se necesitan
> STR <- read.csv("scripts_fv/Datos/STR.csv", sep = ",")

> STR$pop <- gsub(" ", "_", STR$pop)

> selected_communities <- unique(STR$pop)

> STR2 <- STR

> STR2$pop[STR2$pop %in% c("GUALLIGUAICA", "LA_POLVADA")] <- "PUCLARO"

> selected_communities2<- unique(STR2$pop)

> comuneros2 <- comuneros

> comuneros2$community[comuneros2$community %in% c("GUALLIGUAICA", "LA_POLVADA")] <- "PUCLARO"

> # Funcion de creacion de matriz y arbol (SIN PUCLARO)
> surnames <- comuneros %>% dplyr::filter(community %in% selected_communities)

> surnames$community <- factor(surnames$community, levels = selected_communities)

> surname_distance_muestra <- function(surnames,
+                                     group_by_col="community") {
+   # cross tabulate
+   surnames_freq <- table(surnames$surname_father,
+                          surnames[[group_by_col]])
+   # generates Hedrick (1971) kinship matrix
+   # there are other methods (i.e. lasker, uri)
+   hedkin <- hedrick(surnames_freq)
+   # hedrick returns values of similarity
+   # transform them into values of dissimilarity (distance)
+   as.dist(1-hedkin) #IMPORTANT: This is likely wrong. We figured out a better way.
+   #as.dist(Biodem::Fst(hedkin, sum(colSums(surnames_freq) )))
+ }

> #=======
> #TODO: REVISAR. Es la misma nota que hay arriba respecto al método de conversión de matriz de similitud a matriz de distnacia.
> # Deberíamos revisarlo
> #=======
> 
> surname_matrix_muestra <- surname_distance_muestra(surnames)

> hc <-hclust(surname_matrix_muestra,method = "average")

> hd <- as.dendrogram(hc)

> hy <- ape::as.phylo(hc) #Phylo format

> is.rooted(hy)
[1] TRUE

> plotTree(hy)

> #### Guardar dendrogramas
> write.dendrogram(as.dendrogram(hc_total), file = "Figures/Apellidos.phy", edges = FALSE) #Guardar dendrograma archivo phy

> write.nexus(y_total, file = "Figures/Apellidos.nex", translate = TRUE) #Guardar archivo nexus desde phy

> write.dendrogram(hd,file = "Figures/Apellidos_muestra.phy", edges = FALSE) #Guardar dendrograma archivo phy

> write.nexus(hy, file = "Figures/Apellidos_muestra.nex", translate = TRUE) #Guardar archivo nexus desde phy

### [Step 5/19] Running: scripts_fv/OBJETIVO_1.2.Manteltest.R ###


> ##########################################################################################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth inheritance and land tenure norms in agropastoralist communities.############
> ##########################################################################################################################################################
> 
> #### OBJETIVO 1 ####
> ###  To build a phylogenetic tree showing relationships between communities based on the distributions of surnames within and between communities. ###
> 
> ## Cargar paquetes y librerias ##
> library(dendextend)

> library(dplyr)

> library(geosphere)

> library(vegan)

> ### Cargar DATOS geogr?ficos ###
> 
> #coordenadas <- read.csv("scripts_fv/Datos/coordenadas.csv", header = T)
> #coordenadas$community <- gsub(" ", "_", coordenadas$community)
> #coordenadas$community[grepl("LA_RINCONADA_DE_PUNITAQUI" , coordenadas$community)] <- "RINCONADA_DE_PUNITAQUI"
> 
> #=======
> #TODO: REVISAR. Las lineas 15,16 y 17 arrojan error por un problema de codificación de caracteres.
> # Arreglé manualmente, pero seguro que se va a revertir cuando se abra desde el equipo con el problema.
> # Vamos a tener que resolverlo, o seguirá pasando.
> # RESOLUCIÓN: SOLUCIONADO AL DECLARAR CODIFICACIÓN DE CARACTÉRES EXPLÍCITA UTF-8
> #=======
> 
> ##--##
> 
> coordenadas <- read.csv("scripts_fv/Datos/coordenadas.csv", header = T, fileEncoding = "UTF-8-BOM")

> coordenadas$community <- gsub(" ", "_", coordenadas$community)

> coordenadas$community[grepl("LA_RINCONADA_DE_PUNITAQUI" , coordenadas$community)] <- "RINCONADA_DE_PUNITAQUI"

> #=======
> #TODO: REVISAR. Las lineas 15,16 y 17 arrojan error por un problema de codificación de caracteres.
> # Arreglé manualmente, pero seguro que se va a revertir cuando se abra desde el equipo con el problema.
> # Vamos a tener que resolverlo, o seguirá pasando.
> # RESOLUCIÓN: SOLUCIONADO AL DECLARAR CODIFICACIÓN DE CARACTÉRES EXPLÍCITA UTF-8
> #=======
> ## REVISION: Encontré el error! Era un problema de marca de orden de bytes (BOM) en sistemas Windows. Lo agregué a la lectura del archivo csv, no debería seguir ocurriendo.
> 
> ##Test de Mantel##
> #1. Todas las comunidades # #Revisar la matriz de distancia de apellidos
> rownames(coordenadas) <- coordenadas$community

> colnames(coordenadas)<- c("community","lon","lat","org_name")

> my_points_t <- dplyr::select(coordenadas, lon, lat)

> rownames(my_points_t) <- coordenadas$community

> common_communities <- unique(comuneros$community)

> geo_total <- distm (my_points_t, fun = distGeo )

> rownames(geo_total) <- as.factor(rownames(my_points_t))

> colnames(geo_total) <- as.factor(rownames(my_points_t))

> geo_total <- as.matrix(geo_total)

> geo_total
                                    AGUA_FRIA_ALTA AGUA_FRIA_BAJA    ALCONES ALGARROBAL_Y_DESPENSA
AGUA_FRIA_ALTA                               0.000       5188.525  79922.346            185712.203
AGUA_FRIA_BAJA                            5188.525          0.000  84860.225            190685.130
ALCONES                                  79922.346      84860.225      0.000            128967.829
ALGARROBAL_Y_DESPENSA                   185712.203     190685.130 128967.829                 0.000
ALGARROBO_DE_HORNILLOS                   40012.263      44776.428  40394.081            158020.568
                                    ALGARROBO_DE_HORNILLOS ALHUEMILLA_LAS_PALMAS ALVAREZ_DE_VALLE_HERMOSO
AGUA_FRIA_ALTA                                   40012.263             33607.705                43570.431
AGUA_FRIA_BAJA                                   44776.428             38132.663                47269.521
ALCONES                                          40394.081             47766.302                73329.329
ALGARROBAL_Y_DESPENSA                           158020.568            165218.346               149605.787
ALGARROBO_DE_HORNILLOS                               0.000              7680.518                48997.170
                                    ANGOSTURA_DE_GALVEZ   ATELCURA  ATUHUAICO BAÑADOS_DE_HUANTA    BARRAZA
AGUA_FRIA_ALTA                                18203.731  10559.413  84831.981        206978.965  89989.456
AGUA_FRIA_BAJA                                19424.227   7566.171  89624.316        211862.290  95043.125
ALCONES                                       74332.500  89688.045  58740.210        152681.047  12478.819
ALGARROBAL_Y_DESPENSA                        190035.916 191364.663 101847.565         23901.770 117120.071
ALGARROBO_DE_HORNILLOS                        34527.771  50186.369  65204.054        180773.140  51355.634
                                    BLAS_Y_BULRREME BUENOS_AIRES_DE_PUNILLA CABRA_CORRAL CALDERA_Y_DAMAS
AGUA_FRIA_ALTA                           115521.055              105355.621     9927.426      131485.185
AGUA_FRIA_BAJA                           120610.389              110364.073     5312.459      136667.203
ALCONES                                   61049.478               25865.581    89848.879       64059.502
ALGARROBAL_Y_DESPENSA                     71501.562              111862.920   193825.574       66071.671
ALGARROBO_DE_HORNILLOS                    86540.383               66178.838    49902.986       97838.046
                                    CANELA_ALTA CANELA_BAJA CANELILLA_CANELA CANELILLA_OVALLE    CARCAMO
AGUA_FRIA_ALTA                         22194.05    24671.97         8338.079       105764.616  74777.521
AGUA_FRIA_BAJA                         27248.77    29607.51        13504.556       110915.200  79216.089
ALCONES                                62467.14    55259.50        72462.999        48169.760  66333.117
ALGARROBAL_Y_DESPENSA                 163538.94   166539.07       177508.636        83386.157 115342.628
ALGARROBO_DE_HORNILLOS                 26794.72    15585.59        33189.406        74825.548  62695.189
                                    CARQUINDAÑO CARRIZAL_Y_LAGUNA_DE_SERON CARRIZO,_MENDOZA_Y_ROMERO
AGUA_FRIA_ALTA                         5012.783                 144473.804                123032.050
AGUA_FRIA_BAJA                         9093.980                 149511.526                128086.918
ALCONES                               75894.622                  88266.624                 69286.820
ALGARROBAL_Y_DESPENSA                184115.995                  41959.536                 63355.892
ALGARROBO_DE_HORNILLOS                35717.052                 116061.837                 94796.883
                                    CASTILLO_MAL_PASO CERRO_BLANCO CERRO_BLANCO_Y_GIGANTE CERRO_GIGANTE
AGUA_FRIA_ALTA                              64671.054    68186.357             146349.430    149283.081
AGUA_FRIA_BAJA                              69483.701    73324.285             151238.059    154160.667
ALCONES                                     52872.753    17547.026              97269.717    100271.435
ALGARROBAL_Y_DESPENSA                      121580.700   127299.489              40367.508     37799.382
ALGARROBO_DE_HORNILLOS                      47857.149    31895.757             121207.087    124275.683
                                    CHACARILLAS  CHALINGA CHANCHOQUI CHAPE_Y_CHACAY    CHELLES
AGUA_FRIA_ALTA                        73409.777  49925.10 179941.349      131536.02  75333.098
AGUA_FRIA_BAJA                        78248.055  48282.55 184831.055      136367.26  80086.780
ALCONES                               53216.840 118248.89 127203.384       87402.21  56868.309
ALGARROBAL_Y_DESPENSA                112780.191 196052.81  11209.317       55860.81 111487.226
ALGARROBO_DE_HORNILLOS                54385.618  83490.98 154022.397      108003.55  57743.062
                                    CHILECITO_Y_CHUAPA COIPO_Y_CUYUNCAVI  COLLIGUAY CORDILLERA_DE_CARRIZAL
AGUA_FRIA_ALTA                               98288.090         97182.785  95867.603              98246.401
AGUA_FRIA_BAJA                              103001.136        101766.183 100254.331             101419.713
ALCONES                                      68603.619         72509.099  77762.944             105675.967
ALGARROBAL_Y_DESPENSA                        89710.790         92775.235  97479.217             121964.023
ALGARROBO_DE_HORNILLOS                       78848.942         80067.576  81916.306              98242.770
                                    CUARTO_CAJON CUESTA_EL_MANZANO     CUZCUZ DAIN_Y_CORTADERA   DE_ARAYA
AGUA_FRIA_ALTA                         66824.625         151040.01  20161.916       135434.649  81370.350
AGUA_FRIA_BAJA                         71880.776         156224.53  17295.817       140469.254  85564.472
ALCONES                                14557.980          81370.89  97663.359        80696.739  75198.628
ALGARROBAL_Y_DESPENSA                 132348.781          54695.43 194515.907        50769.659 112999.346
ALGARROBO_DE_HORNILLOS                 28681.630         116831.78  58873.226       107344.154  71792.287
                                     DE_ORREGO DIAZ_Y_OCARANZA   DOS_RIOS EL_ALMENDRO   EL_ALTAR   EL_ATAJO
AGUA_FRIA_ALTA                       36461.727       46156.344  99048.200    5561.075  79686.743 156113.434
AGUA_FRIA_BAJA                       40654.142       50662.374 103848.870   10644.753  84808.550 160995.714
ALCONES                              67322.892       61223.486  65603.609   74366.587  38526.135 106029.797
ALGARROBAL_Y_DESPENSA               152412.336      141492.688  87840.002  181064.380 107153.768  31182.010
ALGARROBO_DE_HORNILLOS               40184.235       40843.986  77903.031   34526.048  51770.878 130835.877
                                     EL_CHACAY   EL_CHIÑE  EL_CUYANO EL_DIVISADERO EL_DURAZNO EL_ESPINAL
AGUA_FRIA_ALTA                      206329.395   6390.026  83054.464     75170.398  87855.374  85139.459
AGUA_FRIA_BAJA                      211517.917  10644.409  87363.235     80279.495  92959.302  90263.186
ALCONES                             132897.562  77444.543  73133.709     38870.652  13867.710  14100.375
ALGARROBAL_Y_DESPENSA                60982.039 180195.737 109793.719    111331.961 115119.948 115534.436
ALGARROBO_DE_HORNILLOS              170799.436  38451.402  71666.513     48295.775  50008.811  47770.134
                                    EL_ESPINAL_DE_SAN_PEDRO  EL_ESPINO   EL_OLIVO  EL_PANGUE   EL_PEÑON
AGUA_FRIA_ALTA                                   128464.916  35891.322 110923.667   6359.730  89449.031
AGUA_FRIA_BAJA                                   133491.953  39295.847 116093.364   4490.379  94058.440
ALCONES                                           75370.403  75893.938  49235.121  83024.162  67462.751
ALGARROBAL_Y_DESPENSA                             57549.637 157765.573  80403.892 191374.180  99540.692
ALGARROBO_DE_HORNILLOS                           100786.390  47263.783  78734.099  42696.408  72655.817
                                    EL_PERAL_OJO_DE_AGUA EL_POTRERO EL_POTRERO_DE_HUATULAME EL_ROMERAL
AGUA_FRIA_ALTA                                107242.823   7759.082               81960.990 122102.635
AGUA_FRIA_BAJA                                112108.126   8446.795               86728.868 127008.612
ALCONES                                        27585.796  84042.195               58543.685  76689.182
ALGARROBAL_Y_DESPENSA                         120139.110 185129.315              104880.577  63971.549
ALGARROBO_DE_HORNILLOS                         67382.575  45018.937               63163.414  97463.602
                                       EL_TOME VALLECITO_Y_RIO_SECO ESTERO_DERECHO FERNANDEZ_ANGEL_Y_OTROS
AGUA_FRIA_ALTA                       85390.432            215087.01      161322.84                62670.49
AGUA_FRIA_BAJA                       90320.898            219580.26      165953.79                66198.67
ALCONES                              52879.125            173200.99      119959.61                80323.02
ALGARROBAL_Y_DESPENSA               100406.740             55535.96       39777.18               136715.52
ALGARROBO_DE_HORNILLOS               62699.552            194981.59      140266.72                64152.68
                                    FERNANDEZ_Y_VELIZ FERNANDO_ALVAREZ FLORES_Y_SAAVEDRA FUNDIDA_NORTE
AGUA_FRIA_ALTA                              56797.206        70150.347          53881.14    135979.313
AGUA_FRIA_BAJA                              60803.480        75177.915          57531.91    140980.505
ALCONES                                     70781.439        10857.051          75763.77     83038.775
ALGARROBAL_Y_DESPENSA                      135962.889       131238.189         141887.85     49821.350
ALGARROBO_DE_HORNILLOS                      54474.673        31505.296          56301.41    108702.506
                                    FUNDIDA_SUR GUALLIGUAICA HIGUERITAS_UNIDAS  HUAMPULLA      HUANA
AGUA_FRIA_ALTA                       133701.403   175096.155        122372.591 120814.055  94734.137
AGUA_FRIA_BAJA                       138692.571   180184.901        127559.105 125899.616  99685.026
ALCONES                               81678.937   113022.388         54681.586  65416.292  56217.575
ALGARROBAL_Y_DESPENSA                 52041.245    19984.878         74807.418  66266.612  91011.740
ALGARROBO_DE_HORNILLOS               106733.541   144741.040         88339.633  91755.483  70698.331
                                    HUAPILLAS_MOLLAQUITAS HUENTELAUQUEN HUINCHIGUALLEGO INGA_PICHASCA
AGUA_FRIA_ALTA                                 153483.541     16867.043       11725.818    125878.254
AGUA_FRIA_BAJA                                 158400.993     15051.585        8563.772    130846.685
ALCONES                                        102187.644     84653.218       86386.903     76536.381
ALGARROBAL_Y_DESPENSA                           32821.052    198154.639      196423.285     59838.725
ALGARROBO_DE_HORNILLOS                         127570.414     44556.401       45995.596     99712.336
                                    JARA_O_LAJA JARILLA_Y_AZOGUE JIMENEZ_Y_TAPIA  LA_CALERA LA_CAPILLA
AGUA_FRIA_ALTA                        79729.335       136610.235       50166.458  78323.742   8838.086
AGUA_FRIA_BAJA                        84714.537       141771.129       55023.770  83450.668   5176.718
ALCONES                               48068.717        71936.731       52587.448  12954.039  88555.823
ALGARROBAL_Y_DESPENSA                105983.718        57492.772      135786.450 120248.761 191709.714
ALGARROBO_DE_HORNILLOS                56296.321       104269.308       36706.045  41228.892  48800.986
                                     LA_CEBADA LA_CISTERNA   LA_COIPA LA_COLORADA_DE_AGUILERA_Y_SARMIENTO
AGUA_FRIA_ALTA                       60093.844   85745.295 111423.344                           46894.035
AGUA_FRIA_BAJA                       64730.447   89899.943 116556.809                           50839.764
ALCONES                              22798.462   78287.215  54148.261                           70338.015
ALGARROBAL_Y_DESPENSA               148982.717  110059.867  77120.867                          144895.219
ALGARROBO_DE_HORNILLOS               20244.234   76120.240  81021.018                           48480.317
                                    LA_HERRADURA  LA_HOYADA   LA_LEONA  LA_ORTIGA   LA_PLATA LA_POLVADA
AGUA_FRIA_ALTA                        164596.005 155860.472   7457.784 105819.318 191026.813 173085.484
AGUA_FRIA_BAJA                        169753.329 160702.289   3382.361 110136.119 195996.423 178192.479
ALCONES                                88035.224 107482.410  87356.032  85934.282 134086.134 109968.792
ALGARROBAL_Y_DESPENSA                  73366.494  32829.349 191480.066  90752.886   5330.049  23877.356
ALGARROBO_DE_HORNILLOS                127251.618 131360.126  47467.885  92014.102 163328.999 142215.032
                                    LA_SAUCERA LA_TRANQUITA LA_VERDIONA LAGUNA_VERDE
AGUA_FRIA_ALTA                       69353.283    93260.242  117666.058    75303.252
AGUA_FRIA_BAJA                       73917.171    97319.931  122854.583    79982.012
ALCONES                              61304.463    84689.670   48910.751    59423.559
ALGARROBAL_Y_DESPENSA               118997.018   105968.303   80574.459   112186.472
ALGARROBO_DE_HORNILLOS               56232.634    84008.579   83048.499    59133.593
                                    LAGUNILLAS_GALLEGUILLOS_DEL_VALLE LAS_BARRANCAS LAS_BATEAS LAS_CARDAS
AGUA_FRIA_ALTA                                             108250.173     10113.437  73427.876  75371.667
AGUA_FRIA_BAJA                                             113433.434      4925.206  78053.512  80335.915
ALCONES                                                     44283.831     89594.409  60561.389  48074.841
ALGARROBAL_Y_DESPENSA                                       84980.425    195394.874 114508.458 110349.217
ALGARROBO_DE_HORNILLOS                                      75024.358     49403.018  58513.981  53067.617
                                     LAS_DAMAS LAS_MINILLAS LAS_PAREDES LAS_ROJAS_DE_CUTUN  LAS_TAZAS
AGUA_FRIA_ALTA                       73347.653   123131.809    9547.929          176152.05   4568.853
AGUA_FRIA_BAJA                       78435.962   128140.318    4791.297          181324.34   7378.803
ALCONES                              11184.602    72188.505   87941.834          107268.61  80870.453
ALGARROBAL_Y_DESPENSA               126175.393    62682.149  195259.692           39614.16 183837.695
ALGARROBO_DE_HORNILLOS               35551.088    96112.786   47631.716          142635.62  41556.172
                                    LAS_TRANCAS_DE_PUCLARO LITIPAMPA  LO_MUÑOZ LOS_MAITENES_DE_SERON
AGUA_FRIA_ALTA                                  178774.022  50915.01  66554.88            143126.454
AGUA_FRIA_BAJA                                  183879.119  56061.95  61467.53            148016.587
ALCONES                                         115434.964  40853.71 146161.33             94455.184
ALGARROBAL_Y_DESPENSA                            21387.639 135693.05 246592.48             43471.163
ALGARROBO_DE_HORNILLOS                          147887.393  27431.87 105835.10            118048.947
                                    LORENZO_ARAYA LORENZO_PERALTA_DE_PUNILLA LOS_ALGODONES LOS_ANGELES
AGUA_FRIA_ALTA                          67786.893                 105613.131    170346.984  100950.718
AGUA_FRIA_BAJA                          72796.885                 110552.983    175464.759  105580.664
ALCONES                                 12660.905                  25692.951    106661.968   73179.907
ALGARROBAL_Y_DESPENSA                  133543.656                 116292.292     27074.196   88513.682
ALGARROBO_DE_HORNILLOS                  28985.414                  66017.177    139169.960   82742.677
                                    LOS_CERRILLOS LOS_CHOROS LOS_CLONQUIS LOS_HOYOS_Y_EL_EMPEDRADO
AGUA_FRIA_ALTA                           68666.34  247012.33   101646.367                91472.745
AGUA_FRIA_BAJA                           63487.74  252182.68   106048.033                94754.060
ALCONES                                 145910.72  170368.66    80830.276                99322.012
ALGARROBAL_Y_DESPENSA                   253011.15  101128.63    92287.800               122876.807
ALGARROBO_DE_HORNILLOS                  105641.24  209836.23    86960.358                91074.087
                                    LOS_LAVADEROS LOS_MAITENES LOS_MORALES  LOS_MOZOS  LOS_POZOS LOS_TAPIAS
AGUA_FRIA_ALTA                         153070.725   131221.954   71819.123  74482.352  72893.710  78999.724
AGUA_FRIA_BAJA                         157849.882   136292.589   76751.743  78737.411  77936.275  83822.111
ALCONES                                107509.462    74914.072   48936.443  70833.726   9108.115  55377.309
ALGARROBAL_Y_DESPENSA                   37805.361    55750.064  113957.403 117964.269 128722.842 107351.647
ALGARROBO_DE_HORNILLOS                 129781.340   102274.557   50868.495  65118.155  34380.729  59485.712
                                     LOS_TOMES LOS_TRIGOS  EL_MACANO MAJADA_BLANCA MANQUEHUA MAQUI_LOS_PALQUIS
AGUA_FRIA_ALTA                       12941.381  69338.478  77623.440    160906.716  64691.68         94489.524
AGUA_FRIA_BAJA                       14173.338  74437.701  81595.974    166079.960  69774.22         97965.889
ALCONES                              76201.100  14302.670  78435.530     85555.395  40774.82         97691.967
ALGARROBAL_Y_DESPENSA               189267.337 128540.526 119451.156     68451.593 121360.65        117249.545
ALGARROBO_DE_HORNILLOS               35913.188  31915.028  71424.181    124156.509  40517.00         91795.080
                                       MIALQUI MINCHA_NORTE MINCHA_SUR MONTE_PATRIA     MOVILO OLLA_DE_CALDERA
AGUA_FRIA_ALTA                       94622.008    11053.113  13774.797    104740.34  55698.808       212711.21
AGUA_FRIA_BAJA                       99384.368     7003.832   9053.720    109717.36  60114.199       217861.00
ALCONES                              64649.517    87738.895  91172.235     60717.52  62828.531       144753.15
ALGARROBAL_Y_DESPENSA                92597.940   196518.471 199472.183     80971.87 133154.983        43136.11
ALGARROBO_DE_HORNILLOS               74585.664    47354.269  50787.552     79380.40  48263.935       179967.91
                                         ORURO PEJERREYES PEÑABLANCA PIEDRA_LISA PIEDRA_LISA_O_MINA_NEGRA
AGUA_FRIA_ALTA                       95731.075  90000.898  67433.463   82266.150                80556.336
AGUA_FRIA_BAJA                      100745.224  93554.932  72263.829   86489.971                85144.412
ALCONES                              16525.418  93425.465  13385.517   74898.704                64160.966
ALGARROBAL_Y_DESPENSA               116314.961 118244.093 139902.375  111786.804               108162.662
ALGARROBO_DE_HORNILLOS               56648.612  86959.033  27519.219   72164.119                65202.395
                                    PIEDRAS_BLANCAS POTRERILLO_ALTO EL_POTRERO_ALTO PULPICA_ALTO PULPICA_BAJO
AGUA_FRIA_ALTA                           148893.060        87785.95      212340.996    86434.379    91196.114
AGUA_FRIA_BAJA                           153843.640        92960.40      217206.106    90838.991    95639.433
ALCONES                                   96648.750        34015.62      158449.426    72180.847    73519.477
ALGARROBAL_Y_DESPENSA                     36914.505       101770.18       29670.028   105356.054   100525.728
ALGARROBO_DE_HORNILLOS                   122402.606        56298.53      186402.576    73227.742    76871.206
                                     PUNITAQUI QUEBRADA_DE_COLLIGUACITO QUEBRADA_DE_PAIHUANO_Y_SAN_ANDRES
AGUA_FRIA_ALTA                       70501.575                93573.987                         187095.04
AGUA_FRIA_BAJA                       75686.539                97754.765                         191769.08
ALCONES                              28500.927                81928.530                         141658.98
ALGARROBAL_Y_DESPENSA               118824.411               103335.320                          30159.76
ALGARROBO_DE_HORNILLOS               39279.489                82719.843                         164772.81
                                    QUEBRADA_DE_TALCA QUEBRADA_DE_TULAHUEN QUEBRADA_HONDA QUEBRADA_LA_ARENA
AGUA_FRIA_ALTA                              160469.46            86569.501     211120.412         89594.585
AGUA_FRIA_BAJA                              165646.64            90573.777     216305.323         93889.584
ALCONES                                      91678.43            82201.609     136256.333         76774.254
ALGARROBAL_Y_DESPENSA                        46403.82           112051.814      70010.713        104458.263
ALGARROBO_DE_HORNILLOS                      126799.77            78764.325     174857.623         77606.912
                                    QUEBRADA_LAS_MINILLAS QUEBRADA_LAS_MOLLACAS QUEBRADA_LOS_LOROS QUITALLACO
AGUA_FRIA_ALTA                                  97097.393             89086.887          172179.23  148662.43
AGUA_FRIA_BAJA                                 101212.257             93263.929          177140.95  153841.16
ALCONES                                         85661.671             79505.592          116970.63   74297.57
ALGARROBAL_Y_DESPENSA                          101960.031            106976.757           13606.36   69494.40
ALGARROBO_DE_HORNILLOS                          86758.450             78768.094          144948.06  112288.09
                                     RAMADILLA      RAPEL RAPELCILLO RINCONADA_DE_PUNITAQUI RIO_COLORADO
AGUA_FRIA_ALTA                       99174.027 104400.544  79446.394              73243.339    115222.27
AGUA_FRIA_BAJA                      103181.606 108976.034  83778.305              78415.294    118574.10
ALCONES                              89525.607  77183.849  70928.850              19439.963    114529.54
ALGARROBAL_Y_DESPENSA               102771.175  86361.430 112582.771             120619.943    110710.74
ALGARROBO_DE_HORNILLOS               89997.594  86822.448  68226.318              38192.078    112108.78
                                    ROMERALCILLO     SALALA SAN_ISIDRO SAN_LORENZO      SOCOS TOTORALILLO
AGUA_FRIA_ALTA                        117878.903  89244.562 181711.064   70633.882  82333.568  159855.259
AGUA_FRIA_BAJA                        123054.427  94228.218 186731.679   75024.401  87390.104  165011.170
ALCONES                                53722.741   9705.675 122962.710   66230.157   7602.673   83304.235
ALGARROBAL_Y_DESPENSA                  75266.729 121589.292   7504.805  119681.094 121754.716   74316.440
ALGARROBO_DE_HORNILLOS                 85080.354  49959.900 153013.133   60003.643  43833.818  122493.331
                                    TUNGA_NORTE  TUNGA_SUR UCHUMI-DIAGUITAS VADO_HONDO VALDIVIA_DE_PUNILLA
AGUA_FRIA_ALTA                        15298.759  18917.166       174684.377  84975.755          103445.216
AGUA_FRIA_BAJA                        10928.269  13917.516       179609.413  89331.630          108385.207
ALCONES                               95080.562  98776.550       120896.348  72805.328           23525.106
ALGARROBAL_Y_DESPENSA                197051.491 202309.053        12397.293 107398.230          117181.140
ALGARROBO_DE_HORNILLOS                55303.144  58670.135       148166.231  72664.789           63854.117
                                      VARILLAR    VIVANCO YERBA_LOCA
AGUA_FRIA_ALTA                      189995.586  42979.359   8333.940
AGUA_FRIA_BAJA                      194894.419  47025.517  10738.086
ALCONES                             136135.375  68767.358  75955.000
ALGARROBAL_Y_DESPENSA                 9804.626 147514.935 186501.606
ALGARROBO_DE_HORNILLOS              163735.836  45047.960  35570.821
 [ reached getOption("max.print") -- omitted 173 rows ]

> #Matriz de distancia con datos de apellidos (si se corrio el script "OBJETIVO_1_Surnames.R" es la matriz surname_matrix)
> surname_matrix <- as.matrix(surname_matrix)

> #Intersecci?n entre ambas matrices
> # Encontrar los row.names en com?n
> common_rows <- intersect(row.names(surname_matrix), row.names(geo_total))

> #TODO: REVISAR. No existe el objeto 'geo_total'.
> # Error: object 'geo_total' not found
> # Como esto me impide seguir revisando, voy a correr la siguiente linea, que dejaré comentada:
> # common_rows <- row.names(surname_matrix)
> # Obviamente esto es "trampa". Hay que volver a revisar todo después.
> 
> # RESOLUCIÓN: HAY QUE CREAR EL OBJETO EN EL SCRIPT QUE SE CORRE PRIMERO
> 
> ## REVISIÓN: Agregué la creación de Geo_total. Este error se dió porque creé primero la versión 3.2 de Manteltest y no me dí cuenta que no estaba ese archivo creado en este script.
> 
> common_rows
  [1] "AGUA_FRIA_ALTA"                      "AGUA_FRIA_BAJA"                     
  [3] "ALCONES"                             "ALGARROBAL_Y_DESPENSA"              
  [5] "ALGARROBO_DE_HORNILLOS"              "ALHUEMILLA_LAS_PALMAS"              
  [7] "ALVAREZ_DE_VALLE_HERMOSO"            "ANGOSTURA_DE_GALVEZ"                
  [9] "ATELCURA"                            "ATUHUAICO"                          
 [11] "BARRAZA"                             "BLAS_Y_BULRREME"                    
 [13] "BUENOS_AIRES_DE_PUNILLA"             "CABRA_CORRAL"                       
 [15] "CALDERA_Y_DAMAS"                     "CANELA_ALTA"                        
 [17] "CANELA_BAJA"                         "CANELILLA_CANELA"                   
 [19] "CANELILLA_OVALLE"                    "CARCAMO"                            
 [21] "CARRIZAL_Y_LAGUNA_DE_SERON"          "CARRIZO,_MENDOZA_Y_ROMERO"          
 [23] "CASTILLO_MAL_PASO"                   "CERRO_BLANCO"                       
 [25] "CERRO_GIGANTE"                       "CHACARILLAS"                        
 [27] "CHALINGA"                            "CHANCHOQUI"                         
 [29] "CHAPE_Y_CHACAY"                      "CHELLES"                            
 [31] "CHILECITO_Y_CHUAPA"                  "COIPO_Y_CUYUNCAVI"                  
 [33] "COLLIGUAY"                           "CORDILLERA_DE_CARRIZAL"             
 [35] "CUARTO_CAJON"                        "CUESTA_EL_MANZANO"                  
 [37] "CUZCUZ"                              "DAIN_Y_CORTADERA"                   
 [39] "DE_ARAYA"                            "DE_ORREGO"                          
 [41] "DIAZ_Y_OCARANZA"                     "DOS_RIOS"                           
 [43] "EL_ALMENDRO"                         "EL_ALTAR"                           
 [45] "EL_ATAJO"                            "EL_CHACAY"                          
 [47] "EL_CUYANO"                           "EL_DIVISADERO"                      
 [49] "EL_DURAZNO"                          "EL_ESPINAL"                         
 [51] "EL_ESPINO"                           "EL_MACANO"                          
 [53] "EL_OLIVO"                            "EL_PANGUE"                          
 [55] "EL_PERAL_OJO_DE_AGUA"                "EL_POTRERO_ALTO"                    
 [57] "EL_POTRERO_DE_HUATULAME"             "EL_ROMERAL"                         
 [59] "EL_TOME"                             "ESTERO_DERECHO"                     
 [61] "FERNANDEZ_ANGEL_Y_OTROS"             "FERNANDEZ_Y_VELIZ"                  
 [63] "FERNANDO_ALVAREZ"                    "FLORES_Y_SAAVEDRA"                  
 [65] "FUNDIDA_NORTE"                       "FUNDIDA_SUR"                        
 [67] "GUALLIGUAICA"                        "HIGUERITAS_UNIDAS"                  
 [69] "HUAMPULLA"                           "HUANA"                              
 [71] "HUAPILLAS_MOLLAQUITAS"               "HUENTELAUQUEN"                      
 [73] "HUINCHIGUALLEGO"                     "INGA_PICHASCA"                      
 [75] "JARA_O_LAJA"                         "JARILLA_Y_AZOGUE"                   
 [77] "JIMENEZ_Y_TAPIA"                     "LA_CALERA"                          
 [79] "LA_CAPILLA"                          "LA_CEBADA"                          
 [81] "LA_CISTERNA"                         "LA_COIPA"                           
 [83] "LA_COLORADA_DE_AGUILERA_Y_SARMIENTO" "LA_HERRADURA"                       
 [85] "LA_HOYADA"                           "LA_LEONA"                           
 [87] "LA_ORTIGA"                           "LA_PLATA"                           
 [89] "LA_POLVADA"                          "LA_SAUCERA"                         
 [91] "LA_TRANQUITA"                        "LA_VERDIONA"                        
 [93] "LAGUNA_VERDE"                        "LAGUNILLAS_GALLEGUILLOS_DEL_VALLE"  
 [95] "LAS_BARRANCAS"                       "LAS_BATEAS"                         
 [97] "LAS_CARDAS"                          "LAS_DAMAS"                          
 [99] "LAS_MINILLAS"                        "LAS_PAREDES"                        
[101] "LAS_ROJAS_DE_CUTUN"                  "LAS_TAZAS"                          
[103] "LAS_TRANCAS_DE_PUCLARO"              "LITIPAMPA"                          
[105] "LORENZO_ARAYA"                       "LORENZO_PERALTA_DE_PUNILLA"         
[107] "LOS_ALGODONES"                       "LOS_ANGELES"                        
[109] "LOS_CERRILLOS"                       "LOS_CHOROS"                         
[111] "LOS_CLONQUIS"                        "LOS_HOYOS_Y_EL_EMPEDRADO"           
[113] "LOS_LAVADEROS"                       "LOS_MAITENES"                       
[115] "LOS_MAITENES_DE_SERON"               "LOS_MORALES"                        
[117] "LOS_MOZOS"                           "LOS_POZOS"                          
[119] "LOS_TAPIAS"                          "LOS_TOMES"                          
[121] "LOS_TRIGOS"                          "MAJADA_BLANCA"                      
[123] "MANQUEHUA"                           "MAQUI_LOS_PALQUIS"                  
[125] "MIALQUI"                             "MINCHA_NORTE"                       
[127] "MINCHA_SUR"                          "MONTE_PATRIA"                       
[129] "MOVILO"                              "OLLA_DE_CALDERA"                    
[131] "ORURO"                               "PEJERREYES"                         
[133] "PIEDRA_LISA"                         "PIEDRAS_BLANCAS"                    
[135] "POTRERILLO_ALTO"                     "PULPICA_ALTO"                       
[137] "PULPICA_BAJO"                        "PUNITAQUI"                          
[139] "QUEBRADA_DE_COLLIGUACITO"            "QUEBRADA_DE_PAIHUANO_Y_SAN_ANDRES"  
[141] "QUEBRADA_DE_TALCA"                   "QUEBRADA_DE_TULAHUEN"               
[143] "QUEBRADA_HONDA"                      "QUEBRADA_LA_ARENA"                  
[145] "QUEBRADA_LAS_MINILLAS"               "QUEBRADA_LAS_MOLLACAS"              
[147] "QUEBRADA_LOS_LOROS"                  "QUITALLACO"                         
[149] "RAMADILLA"                           "RAPEL"                              
[151] "RAPELCILLO"                          "RINCONADA_DE_PUNITAQUI"             
[153] "RIO_COLORADO"                        "ROMERALCILLO"                       
[155] "SALALA"                              "SAN_ISIDRO"                         
[157] "SAN_LORENZO"                         "SOCOS"                              
[159] "TOTORALILLO"                         "TUNGA_NORTE"                        
[161] "TUNGA_SUR"                           "UCHUMI-DIAGUITAS"                   
[163] "VADO_HONDO"                          "VALDIVIA_DE_PUNILLA"                
[165] "VALLECITO_Y_RIO_SECO"                "VARILLAR"                           
[167] "VIVANCO"                             "YERBA_LOCA"                         

> # Filtrar las matrices para que solo contengan las filas y columnas con row.names en com?n
> mat1_filtered <- surname_matrix[common_rows, common_rows]

> mat2_filtered <- geo_total[common_rows, common_rows]

> #=======
> #TODO: REVISAR. No existe el objeto 'geo_total'.
> # Ahora que leo todo lo que viene después es obvio que no puedo seguir revisando.
> #=======
> 
> # Identificar las filas/columnas que quedaron fuera en mat1
> rows_outside_mat1 <- setdiff(row.names(surname_matrix), common_rows)

> mat1_outside <- surname_matrix[rows_outside_mat1, rows_outside_mat1]

> # Identificar las filas/columnas que quedaron fuera en mat2
> rows_outside_mat2 <- setdiff(row.names(geo_total), common_rows)

> mat2_outside <- geo_total[rows_outside_mat2, rows_outside_mat2]

> # Mostrar las filas/columnas que quedaron fuera
> print("Filas/columnas que quedaron fuera de la matriz de apellidos:")
[1] "Filas/columnas que quedaron fuera de la matriz de apellidos:"

> print(mat1_outside) ## Quedan fuera Huascoaltinos y totoral
              HUASCOALTINOS   TOTORAL
HUASCOALTINOS     0.0000000 0.9328766
TOTORAL           0.9328766 0.0000000

> print("Filas/columnas que quedaron fuera de la matriz geográfica:")
[1] "Filas/columnas que quedaron fuera de la matriz geográfica:"

> print(mat2_outside)
                         BAÑADOS_DE_HUANTA CARQUINDAÑO CERRO_BLANCO_Y_GIGANTE   EL_CHIÑE
BAÑADOS_DE_HUANTA                     0.00  205644.121               60630.00 201286.723
CARQUINDAÑO                      205644.12       0.000              145031.57   8811.591
CERRO_BLANCO_Y_GIGANTE            60630.00  145031.572                   0.00 140670.019
EL_CHIÑE                         201286.72    8811.591              140670.02      0.000
EL_ESPINAL_DE_SAN_PEDRO           79988.91  126714.566               21918.29 123092.213
EL_PEÑON                         119087.57   88888.195               59188.66  83415.002
EL_POTRERO                       205949.26   12487.750              145389.82   6611.820
LO_MUÑOZ                         266300.02   70303.583              206350.97  70195.607
PEÑABLANCA                       163419.53   63223.024              106415.01  65396.360
PIEDRA_LISA_O_MINA_NEGRA         127929.74   80063.724               67857.59  74502.434
                         EL_ESPINAL_DE_SAN_PEDRO   EL_PEÑON EL_POTRERO  LO_MUÑOZ PEÑABLANCA
BAÑADOS_DE_HUANTA                       79988.91 119087.574  205949.26 266300.02  163419.53
CARQUINDAÑO                            126714.57  88888.195   12487.75  70303.58   63223.02
CERRO_BLANCO_Y_GIGANTE                  21918.29  59188.657  145389.82 206350.97  106415.01
EL_CHIÑE                               123092.21  83415.002    6611.82  70195.61   65396.36
EL_ESPINAL_DE_SAN_PEDRO                     0.00  46411.446  128250.11 190700.31   84739.21
EL_PEÑON                                46411.45      0.000   87524.41 147268.05   69570.91
EL_POTRERO                             128250.11  87524.406       0.00  64029.43   72007.61
LO_MUÑOZ                               190700.31 147268.048   64029.43      0.00  133335.28
PEÑABLANCA                              84739.21  69570.911   72007.61 133335.28       0.00
PIEDRA_LISA_O_MINA_NEGRA                54002.19   8937.776   78587.16 138506.59   64678.49
                         PIEDRA_LISA_O_MINA_NEGRA
BAÑADOS_DE_HUANTA                      127929.742
CARQUINDAÑO                             80063.724
CERRO_BLANCO_Y_GIGANTE                  67857.589
EL_CHIÑE                                74502.434
EL_ESPINAL_DE_SAN_PEDRO                 54002.189
EL_PEÑON                                 8937.776
EL_POTRERO                              78587.164
LO_MUÑOZ                               138506.585
PEÑABLANCA                              64678.490
PIEDRA_LISA_O_MINA_NEGRA                    0.000

> #Matrices de Distancias
> mat2_filtered<-as.dist(mat2_filtered)

> mat1_filtered <- as.dist(mat1_filtered)

> #Generar mantel
> set.seed(152)

> mantel.rtest(
+     mat2_filtered, # La primera de las dos matrices de disimilitud
+     mat1_filtered, # La segunda matriz
+     nrepet = iter
+   )
Monte-Carlo test
Call: mantelnoneuclid(m1 = m1, m2 = m2, nrepet = nrepet)

Observation: 0.2825564 

Based on 1000 replicates
Simulated p-value: 0.000999001 
Alternative hypothesis: greater 

     Std.Obs  Expectation     Variance 
8.9732964804 0.0015164976 0.0009809164 

> #2. Comunidades muestreadas #
> #Administración de datos
> selected_communities <- unique(STR$pop)

> my_points_t <- my_points_t %>% dplyr::filter(row.names(my_points_t) %in% selected_communities)

> geo_muestra <- distm (my_points_t, fun = distGeo )

> rownames(geo_muestra) <- as.factor(rownames(my_points_t))

> colnames(geo_muestra) <- as.factor(rownames(my_points_t))

> geo_muestra <- as.matrix(geo_muestra)

> geo_muestra
                          BARRAZA CANELA_BAJA CANELILLA_OVALLE CASTILLO_MAL_PASO  EL_ALTAR EL_DIVISADERO
BARRAZA                     0.000    65521.08         38228.26          53790.89 35235.601     37063.117
CANELA_BAJA             65521.082        0.00         84488.19          49389.16 59391.521     55234.211
CANELILLA_OVALLE        38228.258    84488.19             0.00          46883.88 26357.704     31016.046
CASTILLO_MAL_PASO       53790.890    49389.16         46883.88              0.00 22398.300     18367.753
EL_ALTAR                35235.601    59391.52         26357.70          22398.30     0.000      4672.036
EL_DIVISADERO           37063.117    55234.21         31016.05          18367.75  4672.036         0.000
EL_ESPINAL               7950.917    61035.97         34078.02          45876.49 27489.899     29145.854
GUALLIGUAICA           100834.007   154511.60         70085.61         112418.51 95492.103     99947.531
HUENTELAUQUEN           95896.115    32049.85        116503.51          78619.73 91146.788     86856.184
LA_CALERA               13282.972    54264.66         37587.82          41441.09 25591.907     26180.884
LA_POLVADA              97722.954   152234.41         67748.82         110821.43 93414.207     97915.150
MANQUEHUA               42135.670    45613.06         41690.33          12098.17 15334.870     10675.552
MONTE_PATRIA            52801.617    86182.56         17846.56          40977.16 27635.655     31202.228
PUNITAQUI               29167.768    48500.33         36027.97          24825.71 13238.135     11383.060
RINCONADA_DE_PUNITAQUI  20804.767    49822.98         37245.89          33850.09 19993.259     19614.568
                       EL_ESPINAL GUALLIGUAICA HUENTELAUQUEN  LA_CALERA LA_POLVADA MANQUEHUA MONTE_PATRIA
BARRAZA                  7950.917   100834.007      95896.12  13282.972  97722.954  42135.67     52801.62
CANELA_BAJA             61035.974   154511.597      32049.85  54264.662 152234.407  45613.06     86182.56
CANELILLA_OVALLE        34078.025    70085.613     116503.51  37587.821  67748.821  41690.33     17846.56
CASTILLO_MAL_PASO       45876.495   112418.506      78619.73  41441.092 110821.429  12098.17     40977.16
EL_ALTAR                27489.899    95492.103      91146.79  25591.907  93414.207  15334.87     27635.65
EL_DIVISADERO           29145.854    99947.531      86856.18  26180.884  97915.150  10675.55     31202.23
EL_ESPINAL                  0.000   100133.929      92194.92   6822.354  97220.464  34304.58     47002.95
GUALLIGUAICA           100133.929        0.000     186475.77 105399.278   3895.034 110410.77     71500.15
HUENTELAUQUEN           92194.918   186475.765          0.00  85542.739 184236.998  76830.36    117425.71
LA_CALERA                6822.354   105399.278      85542.74      0.000 102597.336  29499.82     48479.74
LA_POLVADA              97220.464     3895.034     184237.00 102597.336      0.000 108441.03     70024.64
MANQUEHUA               34304.580   110410.767      76830.36  29499.821 108441.026      0.00     40627.51
MONTE_PATRIA            47002.947    71500.155     117425.71  48479.740  70024.635  40627.51         0.00
PUNITAQUI               21371.012   106108.210      80542.63  16618.289 103770.019  12974.48     40619.96
RINCONADA_DE_PUNITAQUI  13476.653   106710.690      81636.12   7706.698 104111.755  21846.31     45438.60
                        PUNITAQUI RINCONADA_DE_PUNITAQUI
BARRAZA                 29167.768              20804.767
CANELA_BAJA             48500.333              49822.976
CANELILLA_OVALLE        36027.965              37245.892
CASTILLO_MAL_PASO       24825.710              33850.095
EL_ALTAR                13238.135              19993.259
EL_DIVISADERO           11383.060              19614.568
EL_ESPINAL              21371.012              13476.653
GUALLIGUAICA           106108.210             106710.690
HUENTELAUQUEN           80542.634              81636.119
LA_CALERA               16618.289               7706.698
LA_POLVADA             103770.019             104111.755
MANQUEHUA               12974.476              21846.306
MONTE_PATRIA            40619.960              45438.603
PUNITAQUI                   0.000               9119.051
RINCONADA_DE_PUNITAQUI   9119.051                  0.000

> #Crear una matriz de distancia con datos de apellidos de las comunidades muestreadas 
> surname_matrix_muestra
                       EL_DIVISADERO  EL_ALTAR MANQUEHUA PUNITAQUI RINCONADA_DE_PUNITAQUI   BARRAZA
EL_ALTAR                   0.6394561                                                               
MANQUEHUA                  0.5270033 0.5211648                                                     
PUNITAQUI                  0.6239492 0.5200219 0.4508029                                           
RINCONADA_DE_PUNITAQUI     0.6984764 0.5435365 0.5510045 0.4409524                                 
BARRAZA                    0.7269915 0.6921722 0.6577319 0.5266810              0.6679969          
CANELILLA_OVALLE           0.7949177 0.7112899 0.7149405 0.8315610              0.8129801 0.9246816
CANELA_BAJA                0.7946333 0.3989849 0.6268504 0.6470554              0.7266230 0.6850736
LA_CALERA                  0.7203128 0.7175465 0.5982259 0.5946726              0.6452046 0.6159566
EL_ESPINAL                 0.8122858 0.7850372 0.7292758 0.7147334              0.6617125 0.6773830
GUALLIGUAICA               0.9460301 0.9146856 0.8686474 0.8694248              0.9186818 0.9160002
HUENTELAUQUEN              0.6938979 0.7224691 0.5471690 0.7912974              0.7529813 0.7986905
CASTILLO_MAL_PASO          0.6818260 0.5827190 0.4052663 0.6804279              0.6956697 0.7995306
MONTE_PATRIA               0.8266250 0.7259555 0.6704053 0.7427140              0.8264483 0.8206300
LA_POLVADA                 0.9549146 0.9597871 0.9302839 0.9199888              0.8905126 0.9208244
                       CANELILLA_OVALLE CANELA_BAJA LA_CALERA EL_ESPINAL GUALLIGUAICA HUENTELAUQUEN
EL_ALTAR                                                                                           
MANQUEHUA                                                                                          
PUNITAQUI                                                                                          
RINCONADA_DE_PUNITAQUI                                                                             
BARRAZA                                                                                            
CANELILLA_OVALLE                                                                                   
CANELA_BAJA                   0.9037869                                                            
LA_CALERA                     0.6893568   0.7788822                                                
EL_ESPINAL                    0.8227061   0.8305944 0.5010996                                      
GUALLIGUAICA                  0.9289556   0.7948131 0.9551568  0.9034592                           
HUENTELAUQUEN                 0.7211099   0.8495283 0.6479454  0.6867261    0.8174901              
CASTILLO_MAL_PASO             0.6246591   0.6009669 0.6735648  0.7621643    0.8091610     0.6485945
MONTE_PATRIA                  0.7238130   0.7023125 0.7889567  0.9117430    0.8159288     0.8773425
LA_POLVADA                    0.9277754   0.9766940 0.8225314  0.7818016    0.8554056     0.9106425
                       CASTILLO_MAL_PASO MONTE_PATRIA
EL_ALTAR                                             
MANQUEHUA                                            
PUNITAQUI                                            
RINCONADA_DE_PUNITAQUI                               
BARRAZA                                              
CANELILLA_OVALLE                                     
CANELA_BAJA                                          
LA_CALERA                                            
EL_ESPINAL                                           
GUALLIGUAICA                                         
HUENTELAUQUEN                                        
CASTILLO_MAL_PASO                                    
MONTE_PATRIA                   0.7108045             
LA_POLVADA                     0.9162819    0.9578333

> surname_matrix_muestra <- as.matrix(surname_matrix_muestra)

> #Intersecci?n entre ambas matrices
> # Encontrar los row.names en com?n
> common_rows <- intersect(row.names(surname_matrix_muestra), row.names(geo_muestra))

> # Filtrar las matrices para que solo contengan las filas y columnas con row.names en com?n
> mat1_filtered <- surname_matrix_muestra[common_rows, common_rows]

> mat2_filtered <- geo_muestra[common_rows, common_rows]

> # Identificar las filas/columnas que quedaron fuera en mat1
> rows_outside_mat1 <- setdiff(row.names(surname_matrix_muestra), common_rows)

> mat1_outside <- surname_matrix_muestra[rows_outside_mat1, rows_outside_mat1]

> # Identificar las filas/columnas que quedaron fuera en mat2
> rows_outside_mat2 <- setdiff(row.names(geo_muestra), common_rows)

> mat2_outside <- geo_muestra[rows_outside_mat2, rows_outside_mat2]

> # Mostrar las filas/columnas que quedaron fuera #Esto deber?a generar una matriz de extensi?n 0x0
> print("Filas/columnas que quedaron fuera de mat1:")
[1] "Filas/columnas que quedaron fuera de mat1:"

> print(mat1_outside)
<0 x 0 matrix>

> print("Filas/columnas que quedaron fuera de mat2:")
[1] "Filas/columnas que quedaron fuera de mat2:"

> print(mat2_outside)
<0 x 0 matrix>

> #configurar como matrices de Distancias
> mat2_filtered<-as.dist(mat2_filtered)

> mat1_filtered <- as.dist(mat1_filtered)

> set.seed(152)

> #Generar mantel
> mantel.rtest(
+   mat2_filtered, # La primera de las dos matrices de disimilitud
+   mat1_filtered, # La segunda matriz
+   nrepet = iter
+ )
Monte-Carlo test
Call: mantelnoneuclid(m1 = m1, m2 = m2, nrepet = nrepet)

Observation: 0.5995645 

Based on 1000 replicates
Simulated p-value: 0.002997003 
Alternative hypothesis: greater 

     Std.Obs  Expectation     Variance 
 3.211566322 -0.001364254  0.035011617 

### [Step 6/19] Running: scripts_fv/OBJETIVO_2.1.Traitsv3.R ###


> ##########################################################################################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth inheritance and land tenure norms in agropastoralist communities.############
> ##########################################################################################################################################################
> 
> #### OBJETIVO 2 ####
> ### To estimate the traits of surnames' diversity, concentration of commoners' rights and inheritance's agnatic bias for each community based on the distributions of surnames within communities ###
> 
> ## Cargar paquetes y librerias ##
> library(cluster)

> library(dplyr)

> library(e1071)

> library(factoextra)

> library(fpc)

> library(ggplot2)

> library(Hmisc)

> library(NbClust)

> library(phytools)

> library(REAT)

> ##Calcular traits
> # Definir la funcion gini
> gini <- function (x, weights = rep(1, length = length(x))) {
+   ox <- order(x)
+   x <- x[ox]
+   weights <- weights[ox] / sum(weights)
+   p <- cumsum(weights)
+   nu <- cumsum(weights * x)
+   n <- length(nu)
+   nu <- nu / nu[n]
+   sum(nu[-1] * p[-n]) - sum(nu[-n] * p[-1])
+ }

> # Definir la funcion principal traits
> traits <- function(comuneros, group_by_cols = c("community","commune")) {
+   # Asegurarse de que group_by_cols es un vector
+   if (!is.vector(group_by_cols)) {
+     group_by_cols <- as.vector(group_by_cols)
+   }
+   
+   # Calcular los indices
+   result <- comuneros %>%
+     group_by(across(all_of(group_by_cols))) %>%
+     summarise(
+       N = n(),
+       S = n_distinct(surname_father) / N,
+       R = mean(rights, na.rm = TRUE),
+       G = gini(shares),
+       A = mean(sex == "M", na.rm = TRUE),
+       M = sum(rights < 1, na.rm = TRUE) / N,
+     )
+   
+   return(result)
+ }

> result <-traits(comuneros) 
`summarise()` has grouped output by 'community'. You can override using the `.groups` argument.

> #Editar tabla
> result[is.na(result)] <- 0

> result <- as.data.frame(result)

> head(result)
               community commune   N         S         R           G         A          M
1         AGUA_FRIA_ALTA  CANELA  71 0.4225352 0.9859155 0.041448692 0.6619718 0.04225352
2         AGUA_FRIA_BAJA  CANELA 180 0.2833333 1.0055556 0.005494168 0.6777778 0.00000000
3                ALCONES  OVALLE 248 0.2096774 0.7903226 0.296222710 0.4395161 0.31048387
4  ALGARROBAL_Y_DESPENSA  VICUÑA  14 0.5714286 1.0000000 0.000000000 0.5714286 0.00000000
5 ALGARROBO_DE_HORNILLOS  OVALLE  40 0.3750000 1.0000000 0.000000000 0.7250000 0.00000000
6  ALHUEMILLA_LAS_PALMAS  CANELA  46 0.3043478 1.0000000 0.000000000 0.8043478 0.00000000

> #Descripciones estadisticas de traits
> Hmisc::describe(result) #Descripciones generales
result 

 8  Variables      170  Observations
----------------------------------------------------------------------------------------------------------------
community 
       n  missing distinct 
     170        0      170 

lowest : AGUA_FRIA_ALTA         AGUA_FRIA_BAJA         ALCONES                ALGARROBAL_Y_DESPENSA  ALGARROBO_DE_HORNILLOS
highest: VALDIVIA_DE_PUNILLA    VALLECITO_Y_RIO_SECO   VARILLAR               VIVANCO                YERBA_LOCA            
----------------------------------------------------------------------------------------------------------------
commune 
       n  missing distinct 
     170        0       17 

lowest : ALTO DEL CARMEN ANDACOLLO       CANELA          COMBARBALA      COPIAPO        
highest: PAIHUANO        PUNITAQUI       RIO HURTADO     SALAMANCA       VICUÑA         
----------------------------------------------------------------------------------------------------------------
N 
       n  missing distinct     Info     Mean  pMedian      Gmd      .05      .10      .25      .50      .75 
     170        0       97        1    100.6       59    122.1    12.45    17.00    24.25    47.00    89.50 
     .90      .95 
  174.60   350.45 

lowest :    6   10   11   12   13, highest:  590  727  951 1062 1712
----------------------------------------------------------------------------------------------------------------
S 
       n  missing distinct     Info     Mean  pMedian      Gmd      .05      .10      .25      .50      .75 
     170        0      142        1   0.4329    0.423   0.1918   0.1697   0.2230   0.3150   0.4146   0.5257 
     .90      .95 
  0.6667   0.7474 

lowest : 0.0985915 0.1       0.106893  0.142373  0.147059 , highest: 0.818182  0.823529  0.833333  0.916667  1        
----------------------------------------------------------------------------------------------------------------
R 
       n  missing distinct     Info     Mean  pMedian      Gmd      .05      .10      .25      .50      .75 
     170        0      110    0.962   0.9376   0.9666   0.1821   0.5794   0.6895   0.8906   1.0000   1.0000 
     .90      .95 
  1.0526   1.1371 

lowest : 0.267726 0.3      0.303448 0.35098  0.363636, highest: 1.34615  1.38889  1.41667  1.48333  1.57143 
----------------------------------------------------------------------------------------------------------------
G 
       n  missing distinct     Info     Mean  pMedian      Gmd      .05      .10      .25      .50      .75 
     170        0      112    0.968   0.1278   0.1158   0.1569  0.00000  0.00000  0.00000  0.05991  0.23015 
     .90      .95 
 0.34042  0.41157 

lowest : 0           4.44089e-16 7.10543e-15 0.00381668  0.00549417 
highest: 0.503914    0.523969    0.536421    0.536441    0.599699   
----------------------------------------------------------------------------------------------------------------
A 
       n  missing distinct     Info     Mean  pMedian      Gmd      .05      .10      .25      .50      .75 
     170        0      136        1   0.6019   0.5982   0.1173   0.4486   0.4864   0.5335   0.5882   0.6667 
     .90      .95 
  0.7333   0.7604 

lowest : 0.272727 0.318182 0.37931  0.4      0.411765, highest: 0.833333 0.857143 0.875    0.9      1       
----------------------------------------------------------------------------------------------------------------
M 
       n  missing distinct     Info     Mean  pMedian      Gmd      .05      .10      .25      .50      .75 
     170        0       83    0.884   0.1313  0.09904   0.1845  0.00000  0.00000  0.00000  0.02346  0.20886 
     .90      .95 
 0.40054  0.49100 

lowest : 0         0.0166667 0.0216121 0.0253165 0.0305344, highest: 0.732704  0.811765  0.82069   0.822581  1        
----------------------------------------------------------------------------------------------------------------

> summary(result) #Mediana, rango
  community           commune                N                 S                 R                G          
 Length:170         Length:170         Min.   :   6.00   Min.   :0.09859   Min.   :0.2677   Min.   :0.00000  
 Class :character   Class :character   1st Qu.:  24.25   1st Qu.:0.31498   1st Qu.:0.8906   1st Qu.:0.00000  
 Mode  :character   Mode  :character   Median :  47.00   Median :0.41463   Median :1.0000   Median :0.05991  
                                       Mean   : 100.60   Mean   :0.43295   Mean   :0.9376   Mean   :0.12779  
                                       3rd Qu.:  89.50   3rd Qu.:0.52569   3rd Qu.:1.0000   3rd Qu.:0.23015  
                                       Max.   :1712.00   Max.   :1.00000   Max.   :1.5714   Max.   :0.59970  
       A                M          
 Min.   :0.2727   Min.   :0.00000  
 1st Qu.:0.5335   1st Qu.:0.00000  
 Median :0.5882   Median :0.02346  
 Mean   :0.6019   Mean   :0.13126  
 3rd Qu.:0.6667   3rd Qu.:0.20886  
 Max.   :1.0000   Max.   :1.00000  

> var(result$N) #Varianza
[1] 36139.91

> skewness(result$N) #Asimetria
[1] 5.329991

> #Normalidad
> #histogramas
> png(filename = "Figures/Traits_hist.png")

> par(mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))

> par(mfrow = c(2, 3)) 

> exclude_cols <- c("community", "commune", "R")

> include_cols <- setdiff(colnames(result), exclude_cols)

> for (col in include_cols) {
+   hist(result[[col]], breaks = 100, main = col, xlab = col)
+ }

> dev.off()
RStudioGD 
        2 

> par(mfrow=c(1,1))

> par(mar = c(0, 0, 0, 0), oma = c(0, 0, 0, 0))

> shapiro.test(result$N)

	Shapiro-Wilk normality test

data:  result$N
W = 0.42667, p-value < 2.2e-16


> shapiro.test(result$S)

	Shapiro-Wilk normality test

data:  result$S
W = 0.9733, p-value = 0.002311


> shapiro.test(result$R)

	Shapiro-Wilk normality test

data:  result$R
W = 0.8331, p-value = 1.156e-12


> shapiro.test(result$G)

	Shapiro-Wilk normality test

data:  result$G
W = 0.83139, p-value = 9.79e-13


> shapiro.test(result$A)

	Shapiro-Wilk normality test

data:  result$A
W = 0.97904, p-value = 0.01132


> shapiro.test(result$M)

	Shapiro-Wilk normality test

data:  result$M
W = 0.72, p-value < 2.2e-16


> #Ningún índice se distribuye de manera normal
> 
> #### G y M DATA TOTAL ####
> GM_df <- as.data.frame(dplyr::select(result,community, G,M))

> rownames(GM_df) <- GM_df$community

> GM_df <- GM_df[, -1]

> # Escalar los datos (opcional)
> GM_scaled <- scale(GM_df)

### [Step 7/19] Running: scripts_fv/OBJETIVO_2.2.Dendroplot.R ###


> ##########################################################################################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth inheritance and land tenure norms in agropastoralist communities.############
> ##########################################################################################################################################################
> 
> 
> ## ADVERTENCIA: NO CORRER LO SIGUIENTE SI QUIERE CORRER LOS SCRIPTS DEL OBJETIVO_5 ##
> 
> 
> #### OBJETIVO 2 ####
> ### To estimate the traits of surnames' diversity, concentration of commoners' rights and inheritance's agnatic bias for each community based on the distributions of surnames within communities ###
> 
> ## Cargar paquetes y librerias ##
> library(dendextend)

> library(ggplot2)

> library(gridExtra)

> library(stringr)

> library(conflicted)

> ##Conflict preference
> conflict_prefer("label","ggdendro")
[conflicted] Removing existing preference.
[conflicted] Will prefer ggdendro::label over any other package.

> conflict_prefer("theme_dendro","ggdendro")
[conflicted] Removing existing preference.
[conflicted] Will prefer ggdendro::theme_dendro over any other package.

> ## ADVERTENCIA: NO CORRER LO SIGUIENTE SI QUIERE CORRER LOS SCRIPTS DEL OBJETIVO_5 ##
> 
> #=======
> #TODO: REVISAR. ¿Por qué pasa esto? ¿Son conflictos de nombres?
> # Sería ideal arreglarlo.
> #=======
> 
> # Mostrar y escribir la tabla final 
> result_dendro<-result

> row.names(result_dendro) <-result_dendro$community

> result_dendro <- result_dendro%>%dplyr::select(-community)

> write.table(result_dendro, file='Figures/Tabla_indices.txt', sep = '\t', row.names = T, quote = FALSE)

> # Escribir la tabla de las comunidades muestreadas
> STR <- read.csv("scripts_fv/Datos/STR.csv", sep = ",")

> STR$pop <- gsub(" ", "_", STR$pop)

> selected_communities <- unique(STR$pop)

> result_dendro2 <- result_dendro %>% dplyr::filter(row.names(result_dendro) %in% selected_communities)

> STR$pop <- gsub(" ", "_", STR$pop)

> selected_communities <- unique(STR$pop)

> result_dendro$community <- row.names(result_dendro)

> result_dendro2 <- result_dendro %>% dplyr::filter(result_dendro$community %in% selected_communities)

> #TODO: REVISAR. La linea 42 me da un error. Creo que el error se debe a que no existe la variable "community" en results_dendro (están como nombres de fila)
> # Intenté esto:
> # result_dendro$community <- row.names(result_dendro)
> # Y corrí la linea 42 dspués. Parece que así funcionó.
> # Error in `dplyr::filter()`:
> #   ℹ In argument: `result_dendro$community %in%
> #   selected_communities`.
> # Caused by error:
> #   ! `..1` must be of size 170 or 1, not size 0.
> # > rlang::last_trace(drop = FALSE)
> # <error/rlang_error>
> #   Error in `dplyr::filter()`:
> #   ℹ In argument: `result_dendro$community %in%
> #   selected_communities`.
> # Caused by error:
> #   ! `..1` must be of size 170 or 1, not size 0.
> # ---
> #   Backtrace:
> #   ▆
> # 1. ├─result_dendro %>% ...
> # 2. ├─dplyr::filter(., result_dendro$community %in% selected_communities)
> # 3. ├─dplyr:::filter.data.frame(., result_dendro$community %in% selected_communities)
> # 4. │ └─dplyr:::filter_rows(.data, dots, by)
> # 5. │   └─dplyr:::filter_eval(...)
> # 6. │     ├─base::withCallingHandlers(...)
> # 7. │     └─mask$eval_all_filter(dots, env_filter)
> # 8. │       └─dplyr (local) eval()
> # 9. ├─dplyr:::dplyr_internal_error(...)
> # 10. │ └─rlang::abort(class = c(class, "dplyr:::internal_error"), dplyr_error_data = data)
> # 11. │   └─rlang:::signal_abort(cnd, .file)
> # 12. │     └─base::signalCondition(cnd)
> # 13. └─dplyr (local) `<fn>`(`<dpl:::__>`)
> # 14.   └─rlang::abort(message, class = error_class, parent = parent, call = error_call)
> #=======
> write.table(result_dendro, file='Figures/Tabla_indices.txt', sep = '\t', row.names = T, quote = FALSE)

> # Imprimir im?gen en png y en pdf
> png("Figures/Tabla_indices.png", height=4000, width=1500)

> p<-tableGrob(result_dendro)

> grid.arrange(p)

> dev.off()
RStudioGD 
        2 

> pdf("Figures/Tabla_indices.pdf", height=60, width=20)

> grid.table(result_dendro)

> dev.off()
RStudioGD 
        2 

> ## Traits y comunidades pdf anotados en un arbol
> dendroplot <- function(hc, save_as=NULL,
+                        group_by_col="community") {
+   # generate dendrogram from hclust data
+   hcd <- dendro_data(hc, type="rectangle")
+   # get rid of those factors
+   hcd$labels$label <- as.character(hcd$labels$label)
+   # traits
+   container <- if (group_by_col == "community") "commune"
+   else if (group_by_col == "commune") "province"
+   else if (group_by_col == "province") "region"
+   # Verificar si container es NULL
+   if (is.null(container)) {
+     stop("Container is NULL")
+   }
+   #tc <- traits(comuneros, c(group_by_col, container))
+   tc <- result_dendro
+   # vectors to obtain commune, S, R, G, A, cluster of communities
+   vector_of <- function(target_col) {
+     if (!target_col %in% colnames(tc)) {
+       stop(paste("Column", target_col, "is not found in traits data"))
+     }
+     v <- tc[[target_col]]
+     if (is.null(v)) {
+       stop(paste("Column", target_col, "is NULL in traits data"))
+     }
+     print(v)  # Agregado para depurar
+     names(v) <- tc[[group_by_col]]
+     v
+   }
+   location <- if (!is.null(container))
+     vector_of(container)
+   else NULL
+   N <- vector_of("N")
+   S <- vector_of("S")
+   A <- vector_of("A")
+   G <- vector_of("G")
+   M <- vector_of("M")
+   #cluster <- vector_of("cluster")
+   # useful coordinates
+   lastrow <- nrow(hcd$labels)
+   x0 <- hcd$labels$x[[lastrow]]
+   y0 <- hcd$labels$y[[lastrow]]
+   x1 <- x0 + 1 + 0.5 * lastrow / 170
+   ydiff <- if (is.null(container)) 0.4 else 0
+   # output to pdf
+   if (!is.null(save_as)) {
+     pdf(save_as,
+         width=8 + 4 * lastrow / 170,
+         height=1 + 40 * lastrow / 170)
+   }
+   size <- function(xs) {
+     xs * 1.3 / max(xs) + (1.7 + lastrow / 170)
+   }
+   # plot
+   p <- ggplot() +
+     geom_segment(data=segment(hcd),
+                  aes(x=x, y=y, xend=xend, yend=yend)) +
+     # because of the coord_flip at the end, x and y are flipped
+     geom_text(data=ggdendro::label(hcd),
+               aes(x=x, y=y, label=label, hjust=0),
+               nudge_y=0.01,
+               size=3) +
+     annotate("text", x=x1, y=y0-0.215, # y=y0-0.30,
+              label=str_to_title(group_by_col),
+              fontface="bold", size=4) +
+     (if (!is.null(container))
+       annotate("text", x=x1, y=y0-1.265, # y=y0-1.30,
+                label=str_to_title(container),
+                fontface="bold", size=4)) +
+     annotate("text", x=x1, y=y0-1.64+ydiff,
+              label="#", fontface="bold", size=4) +
+     annotate("text", x=x1, y=y0-1.86+ydiff,
+              label="S", fontface="bold", size=4) +
+     annotate("text", x=x1, y=y0-2.06+ydiff,
+              label="A", fontface="bold", size=4) +
+     annotate("text", x=x1, y=y0-2.26+ydiff,
+              label="G", fontface="bold", size=4) +
+     annotate("text", x=x1, y=y0-2.46+ydiff,
+              label="M", fontface="bold", size=4) +
+     #annotate("text", x=x1, y=y0-2.66+ydiff,
+     #         label="Cluster", fontface="bold", size=4) +
+     (if (!is.null(container))
+       geom_text(data=ggdendro::label(hcd),
+                 aes(x=x, y=y, hjust=0,
+                     label=location[label],
+                     colour=location[label]),
+                 nudge_y=1.1,
+                 size=3,
+                 show.legend=FALSE)) +
+     geom_text(data=ggdendro::label(hcd),
+               aes(x=x, y=y,
+                   label=N[label],
+                   size=size(N[label])),
+               nudge_y=1.6-ydiff,
+               hjust=0) +
+     geom_text(data=ggdendro::label(hcd),
+               aes(x=x, y=y,
+                   label=prettyNum(S[label], digits=3),
+                   size=size(S[label])),
+               nudge_y=1.8-ydiff,
+               hjust=0) +
+     geom_text(data=label(hcd),
+               aes(x=x, y=y,
+                   label=prettyNum(A[label], digits=3),
+                   size=size(A[label])),
+               nudge_y=2.0-ydiff,
+               hjust=0) +
+     geom_text(data=ggdendro::label(hcd),
+               aes(x=x, y=y,
+                   label=prettyNum(G[label], digits=3),
+                   size=size(G[label])),
+               nudge_y=2.2-ydiff,
+               hjust=0) +
+     geom_text(data=label(hcd),
+               aes(x=x, y=y,
+                   label=prettyNum(M[label], digits=3),
+                   size=size(M[label])),
+               nudge_y=2.4-ydiff,
+               hjust=0)  +
+     #geom_text(data=label(hcd),
+     #          aes(x=x, y=y,
+     #              label=prettyNum(cluster[label], digits=1),
+     #              size=size(cluster[label])),
+     #          nudge_y=2.6-ydiff,
+     #          hjust=0)  +
+     scale_size_identity() +
+     coord_flip() +
+     scale_y_reverse(expand=c(0, 0.6)) +
+     theme_dendro()
+   # save plot
+   if (!is.null(save_as)) {
+     # ggsave(save_as, width=12, height=60, units="cm")
+     print(p)
+     dev.off()
+   } else p
+ }

> surname_dendrogram <- function(comuneros, save_as=NULL,
+                                hclust_method=hclust_default_method,
+                                group_by_col="community") {
+   hc_total <- surname_clustering(comuneros, hclust_method, group_by_col)
+   dendroplot(hc_total, save_as, group_by_col)
+ }

> # Llamar a la funci?n surname_dendrogram
> surname_dendrogram(comuneros, save_as = "Figures/dendrograma_total.pdf")
  [1] "CANELA"          "CANELA"          "OVALLE"          "VICUÑA"          "OVALLE"         
  [6] "CANELA"          "COMBARBALA"      "CANELA"          "CANELA"          "MONTE PATRIA"   
 [11] "OVALLE"          "RIO HURTADO"     "OVALLE"          "CANELA"          "ANDACOLLO"      
 [16] "CANELA"          "CANELA"          "CANELA"          "OVALLE"          "MONTE PATRIA"   
 [21] "RIO HURTADO"     "RIO HURTADO"     "COMBARBALA"      "OVALLE"          "RIO HURTADO"    
 [26] "MONTE PATRIA"    "SALAMANCA"       "PAIHUANO"        "RIO HURTADO"     "MONTE PATRIA"   
 [31] "MONTE PATRIA"    "MONTE PATRIA"    "MONTE PATRIA"    "MONTE PATRIA"    "OVALLE"         
 [36] "COQUIMBO"        "ILLAPEL"         "RIO HURTADO"     "MONTE PATRIA"    "COMBARBALA"     
 [41] "COMBARBALA"      "MONTE PATRIA"    "CANELA"          "PUNITAQUI"       "RIO HURTADO"    
 [46] "LA SERENA"       "MONTE PATRIA"    "PUNITAQUI"       "OVALLE"          "OVALLE"         
 [51] "COMBARBALA"      "MONTE PATRIA"    "OVALLE"          "CANELA"          "OVALLE"         
 [56] "VICUÑA"          "MONTE PATRIA"    "RIO HURTADO"     "MONTE PATRIA"    "PAIHUANO"       
 [61] "COMBARBALA"      "COMBARBALA"      "OVALLE"          "COMBARBALA"      "RIO HURTADO"    
 [66] "RIO HURTADO"     "VICUÑA"          "OVALLE"          "RIO HURTADO"     "MONTE PATRIA"   
 [71] "RIO HURTADO"     "ALTO DEL CARMEN" "CANELA"          "CANELA"          "RIO HURTADO"    
 [76] "MONTE PATRIA"    "ANDACOLLO"       "COMBARBALA"      "MONTE PATRIA"    "OVALLE"         
 [81] "CANELA"          "MONTE PATRIA"    "MONTE PATRIA"    "OVALLE"          "RIO HURTADO"    
 [86] "CANELA"          "LA SERENA"       "CANELA"          "VICUÑA"          "OVALLE"         
 [91] "CANELA"          "OVALLE"          "MONTE PATRIA"    "OVALLE"          "COMBARBALA"     
 [96] "COQUIMBO"        "RIO HURTADO"     "CANELA"          "MONTE PATRIA"    "VICUÑA"         
[101] "VICUÑA"          "COMBARBALA"      "MONTE PATRIA"    "OVALLE"          "COMBARBALA"     
[106] "OVALLE"          "OVALLE"          "VICUÑA"          "MONTE PATRIA"    "LOS VILOS"      
[111] "LA HIGUERA"      "MONTE PATRIA"    "MONTE PATRIA"    "RIO HURTADO"     "RIO HURTADO"    
[116] "RIO HURTADO"     "MONTE PATRIA"    "COMBARBALA"      "OVALLE"          "MONTE PATRIA"   
[121] "CANELA"          "OVALLE"          "COQUIMBO"        "COMBARBALA"      "MONTE PATRIA"   
[126] "MONTE PATRIA"    "CANELA"          "CANELA"          "MONTE PATRIA"    "COMBARBALA"     
[131] "LA SERENA"       "OVALLE"          "MONTE PATRIA"    "RIO HURTADO"     "MONTE PATRIA"   
[136] "OVALLE"          "MONTE PATRIA"    "MONTE PATRIA"    "PUNITAQUI"       "MONTE PATRIA"   
[141] "PAIHUANO"        "LA SERENA"       "MONTE PATRIA"    "LA HIGUERA"      "MONTE PATRIA"   
[146] "MONTE PATRIA"    "MONTE PATRIA"    "VICUÑA"          "COQUIMBO"        "MONTE PATRIA"   
[151] "MONTE PATRIA"    "MONTE PATRIA"    "PUNITAQUI"       "MONTE PATRIA"    "OVALLE"         
[156] "OVALLE"          "VICUÑA"          "COMBARBALA"      "OVALLE"          "COPIAPO"        
[161] "COQUIMBO"        "ILLAPEL"         "ILLAPEL"         "VICUÑA"          "MONTE PATRIA"   
[166] "OVALLE"          "VICUÑA"          "VICUÑA"          "COMBARBALA"      "CANELA"         
  [1]   71  180  248   14   40   46   38   37   71   31  130   53   37   88   84  590  727   79  107   24   24
 [22]   48  216   51   14  174  547   10   85   20  117   19   59   19   19  122   76  123   11   21   41   29
 [43]   10  131   11   54   21   76   66   67   79   80   17   25   19   45   54   71  105  386   15  276   50
 [64]  103   51   90   62   41   27  104   15  260  377   37   86   82   28 1712   10   33   39   13  106   20
 [85]   32   18   43   41   17  318   32  100   64  124   54  136   22   22   70   31  136   31   22   88   39
[106]   33   22   29   38   27  202   80   28   17   48   34   60   12   18   26   19  100   24  951   39   73
[127]   75  130  472   30  225   85   21   10   33  145   87   16 1062   12   38  131   35   59   29   26    6
[148]   14   24   27   74   22  173   64   54  148   22   86   28  138  119  130  171   35   41   59   19   21
[169]   38   54
  [1] 0.42253521 0.28333333 0.20967742 0.57142857 0.37500000 0.30434783 0.39473684 0.45945946 0.45070423
 [10] 0.48387097 0.28461538 0.47169811 0.43243243 0.27272727 0.42857143 0.14237288 0.15130674 0.40506329
 [19] 0.33644860 0.50000000 0.66666667 0.43750000 0.21296296 0.25490196 0.64285714 0.41954023 0.29250457
 [28] 0.40000000 0.22352941 0.10000000 0.37606838 0.52631579 0.45762712 0.42105263 0.47368421 0.40983607
 [37] 0.55263158 0.31707317 1.00000000 0.28571429 0.41463415 0.75862069 0.60000000 0.33587786 0.54545455
 [46] 0.40740741 0.61904762 0.38157895 0.30303030 0.35820896 0.43037975 0.31250000 0.82352941 0.44000000
 [55] 0.73684211 0.37777778 0.42592593 0.09859155 0.31428571 0.26943005 0.66666667 0.30434783 0.28000000
 [64] 0.27184466 0.45098039 0.33333333 0.45161290 0.75609756 0.40740741 0.45192308 0.66666667 0.32692308
 [73] 0.23342175 0.35135135 0.25581395 0.41463415 0.57142857 0.10689252 0.80000000 0.66666667 0.41025641
 [82] 0.46153846 0.31132075 0.45000000 0.50000000 0.66666667 0.53488372 0.56097561 0.47058824 0.20125786
 [91] 0.40625000 0.39000000 0.48437500 0.19354839 0.37037037 0.44117647 0.31818182 0.31818182 0.40000000
[100] 0.38709677 0.14705882 0.19354839 0.40909091 0.26136364 0.46153846 0.36363636 0.72727273 0.41379310
[109] 0.47368421 0.29629630 0.59900990 0.40000000 0.50000000 0.41176471 0.35416667 0.26470588 0.38333333
[118] 0.66666667 0.66666667 0.50000000 0.57894737 0.17000000 0.58333333 0.15036803 0.33333333 0.46575342
[127] 0.45333333 0.29230769 0.16949153 0.56666667 0.36000000 0.32941176 0.52380952 0.80000000 0.69696970
[136] 0.25517241 0.27586207 0.68750000 0.15348399 0.91666667 0.42105263 0.41221374 0.42857143 0.57627119
[145] 0.41379310 0.73076923 0.83333333 0.57142857 0.62500000 0.37037037 0.47297297 0.59090909 0.20809249
[154] 0.35937500 0.44444444 0.23648649 0.81818182 0.32558140 0.46428571 0.22463768 0.21848739 0.43076923
[163] 0.36842105 0.68571429 0.46341463 0.44067797 0.47368421 0.66666667 0.68421053 0.53703704
  [1] 0.6619718 0.6777778 0.4395161 0.5714286 0.7250000 0.8043478 0.4473684 0.5675676 0.6760563 0.5161290
 [11] 0.5692308 0.6415094 0.5405405 0.6022727 0.6666667 0.6474576 0.6066025 0.6455696 0.5794393 0.8750000
 [21] 0.7083333 0.5625000 0.5601852 0.5490196 0.6428571 0.5804598 0.5612431 0.4000000 0.5764706 0.4500000
 [31] 0.6068376 0.5789474 0.5254237 0.6315789 0.4736842 0.6475410 0.7500000 0.5853659 0.6363636 0.6190476
 [41] 0.6829268 0.5517241 0.9000000 0.6717557 0.2727273 0.5740741 0.5714286 0.5394737 0.5303030 0.5671642
 [51] 0.6708861 0.6250000 0.4117647 0.4800000 0.5789474 0.6888889 0.5925926 0.5633803 0.6000000 0.6683938
 [61] 0.7333333 0.5036232 0.7200000 0.5339806 0.6274510 0.5888889 0.5645161 0.5853659 0.6666667 0.6057692
 [71] 0.7333333 0.8153846 0.5198939 0.4864865 0.6279070 0.6097561 0.6785714 0.5426402 0.5000000 0.4242424
 [81] 0.7179487 0.6153846 0.5000000 0.7500000 0.5625000 0.6666667 0.5581395 0.6097561 0.7058824 0.5377358
 [91] 0.6562500 0.4500000 0.5312500 0.4838710 0.6666667 0.7132353 0.5909091 0.6818182 0.5285714 0.6774194
[101] 0.5220588 0.6451613 0.3181818 0.5227273 0.5641026 0.5757576 0.5454545 0.5172414 0.5000000 0.5555556
[111] 0.6683168 0.5125000 0.5714286 0.5882353 0.5000000 0.5882353 0.7500000 0.7500000 0.6666667 0.6153846
[121] 0.7368421 0.5200000 0.8750000 0.5499474 0.6666667 0.6438356 0.6266667 0.5923077 0.4936441 0.5333333
[131] 0.7688889 0.5411765 0.7142857 1.0000000 0.6363636 0.6000000 0.4712644 0.6875000 0.5555556 0.8333333
[141] 0.5263158 0.6259542 0.7142857 0.4915254 0.3793103 0.5000000 0.5000000 0.7142857 0.5833333 0.4444444
[151] 0.4729730 0.6363636 0.5549133 0.5625000 0.6296296 0.5405405 0.6818182 0.6395349 0.5714286 0.4855072
[161] 0.4957983 0.7153846 0.6081871 0.7428571 0.5121951 0.5084746 0.6842105 0.8571429 0.5526316 0.7407407
  [1] 4.144869e-02 5.494168e-03 2.962227e-01 0.000000e+00 0.000000e+00 0.000000e+00 3.226121e-01 1.828829e-01
  [9] 0.000000e+00 2.768192e-01 3.401253e-01 2.024014e-01 3.515916e-01 9.959142e-02 2.270210e-02 5.515873e-02
 [17] 1.126470e-01 4.451477e-02 4.900130e-01 0.000000e+00 3.833333e-02 1.998299e-02 2.532922e-01 2.260451e-01
 [25] 0.000000e+00 4.002288e-01 1.046479e-01 0.000000e+00 4.470062e-01 2.385417e-01 1.006776e-01 0.000000e+00
 [33] 6.251737e-02 8.521303e-02 1.148325e-01 2.340984e-02 0.000000e+00 7.991106e-02 4.440892e-16 0.000000e+00
 [41] 8.112965e-02 0.000000e+00 0.000000e+00 7.791460e-02 2.772727e-01 2.588076e-01 4.523810e-02 1.419874e-01
 [49] 6.508749e-02 2.813552e-01 6.634210e-02 2.897182e-01 2.081448e-01 0.000000e+00 4.736842e-02 0.000000e+00
 [57] 5.039138e-01 1.929939e-01 2.666667e-01 1.262208e-02 0.000000e+00 1.343525e-01 3.734033e-01 2.464616e-01
 [65] 1.468587e-01 3.118280e-02 0.000000e+00 1.152439e-01 2.983539e-01 1.206576e-01 0.000000e+00 3.816681e-03
 [73] 1.658951e-01 0.000000e+00 2.240729e-01 1.281260e-01 0.000000e+00 3.755501e-02 0.000000e+00 2.305455e-01
 [81] 2.435897e-02 0.000000e+00 1.312726e-01 4.523810e-02 0.000000e+00 0.000000e+00 9.063804e-02 0.000000e+00
 [89] 5.228758e-02 5.239689e-01 0.000000e+00 3.081592e-01 1.514423e-02 5.996988e-01 1.734007e-01 7.105427e-15
 [97] 4.202552e-01 0.000000e+00 0.000000e+00 0.000000e+00 7.105427e-15 5.669599e-02 3.776224e-01 5.364409e-01
[105] 0.000000e+00 0.000000e+00 4.329004e-02 0.000000e+00 4.736842e-02 0.000000e+00 2.780468e-01 2.282197e-01
[113] 3.325123e-02 2.521008e-01 4.421296e-01 3.587435e-01 3.170412e-01 1.715686e-01 2.733333e-01 2.076923e-01
[121] 0.000000e+00 2.245872e-01 0.000000e+00 2.176690e-01 1.946247e-01 1.196490e-01 0.000000e+00 7.574868e-03
[129] 2.973456e-01 6.428571e-02 1.382029e-01 3.430283e-01 0.000000e+00 0.000000e+00 2.852050e-02 5.364205e-01
[137] 0.000000e+00 0.000000e+00 1.838879e-01 0.000000e+00 0.000000e+00 2.437296e-01 0.000000e+00 0.000000e+00
[145] 2.948276e-01 0.000000e+00 0.000000e+00 3.311688e-01 3.833333e-02 3.485839e-01 2.335304e-01 0.000000e+00
[153] 3.198819e-01 0.000000e+00 2.833481e-01 1.243924e-01 0.000000e+00 5.729896e-02 0.000000e+00 0.000000e+00
[161] 4.009553e-01 5.499901e-02 1.466831e-01 0.000000e+00 9.492419e-02 2.289831e-01 0.000000e+00 0.000000e+00
[169] 4.736842e-02 0.000000e+00
  [1] 0.04225352 0.00000000 0.31048387 0.00000000 0.00000000 0.00000000 0.36842105 0.21621622 0.00000000
 [10] 0.22580645 0.40000000 0.20754717 0.40540541 0.11363636 0.00000000 0.05254237 0.11279230 0.02531646
 [19] 0.59813084 0.00000000 0.00000000 0.00000000 0.17592593 0.13725490 0.00000000 0.20689655 0.11882998
 [28] 0.00000000 0.81176471 0.25000000 0.09401709 0.00000000 0.03389831 0.00000000 0.00000000 0.00000000
 [37] 0.00000000 0.08130081 0.00000000 0.00000000 0.09756098 0.00000000 0.00000000 0.03053435 0.36363636
 [46] 0.31481481 0.09523810 0.15789474 0.00000000 1.00000000 0.05063291 0.31250000 0.35294118 0.00000000
 [55] 0.00000000 0.00000000 0.55555556 0.15492958 0.16190476 0.00000000 0.00000000 0.15579710 0.28000000
 [64] 0.24271845 0.13725490 0.00000000 0.00000000 0.09756098 0.40740741 0.15384615 0.00000000 0.00000000
 [73] 0.14854111 0.00000000 0.20930233 0.09756098 0.00000000 0.02161215 0.00000000 0.33333333 0.00000000
 [82] 0.00000000 0.15094340 0.00000000 0.00000000 0.00000000 0.11627907 0.00000000 0.00000000 0.73270440
 [91] 0.00000000 0.27000000 0.00000000 0.82258065 0.24074074 0.00000000 0.45454545 0.00000000 0.00000000
[100] 0.00000000 0.00000000 0.00000000 0.45454545 0.72727273 0.00000000 0.00000000 0.09090909 0.00000000
[109] 0.00000000 0.00000000 0.24257426 0.23750000 0.00000000 0.29411765 0.52083333 0.44117647 0.01666667
[118] 0.00000000 0.05555556 0.00000000 0.00000000 0.12000000 0.00000000 0.17034700 0.23076923 0.15068493
[127] 0.00000000 0.00000000 0.41101695 0.10000000 0.08444444 0.42352941 0.00000000 0.00000000 0.00000000
[136] 0.82068966 0.00000000 0.00000000 0.19774011 0.00000000 0.00000000 0.29007634 0.00000000 0.00000000
[145] 0.34482759 0.00000000 0.00000000 0.00000000 0.00000000 0.40740741 0.20270270 0.00000000 0.25433526
[154] 0.00000000 0.22222222 0.12162162 0.00000000 0.05813953 0.00000000 0.00000000 0.36974790 0.03846154
[163] 0.14619883 0.00000000 0.12195122 0.23728814 0.00000000 0.00000000 0.00000000 0.00000000
RStudioGD 
        2 

### [Step 8/19] Running: scripts_fv/OBJETIVO_3.1.STR.R ###


> ##########################################################################################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth inheritance and land tenure norms in agropastoralist communities.############
> ##########################################################################################################################################################
> 
> #### OBJETIVO 3 ####
> ### To build a phylogenetic tree showing relationships between communities based on the distributions of genetic microsatellite markers within and between communities.###
> 
> ## Cargar paquetes y librerias
> library(ape)

> library(conflicted)

> library(graph4lg)

> library(phylogram)

> library(phytools)

> ##Conflict preference
> conflict_prefer("as.phylo","ape")
[conflicted] Removing existing preference.
[conflicted] Will prefer ape::as.phylo over any other package.

> #Dps
> DPS<-mat_pw_dps(STR_genind)

 Converting data from a genind to a genpop object... 

...done.


 Finding allelic frequencies from a genpop object... 

...done.


> DPS<-as.dist(DPS)

> #Arbol con UPGMA
> dend.DPS<-as.dendrogram(hclust(DPS,method = "complete"))

> phyDPS <- as.phylo(dend.DPS)

> is.rooted(phyDPS)
[1] TRUE

> plot.phylo(phyDPS)

> write.dendrogram(dend.DPS, file = "Figures/treeDPS.phy", edges = FALSE)

> write.nexus(phyDPS, file = "Figures/treeDPS.nex", translate = TRUE)

### [Step 9/19] Running: scripts_fv/OBJETIVO_3_Correlaciones.R ###


> ##########################################################################################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth inheritance and land tenure norms in agropastoralist communities.############
> ##########################################################################################################################################################
> 
> #### OBJETIVO 3 ####
> ### To build a phylogenetic tree showing relationships between communities based on the distributions of genetic microsatellite markers within and between communities.###
> 
> ###  Correr luego de OBJETIVO_3_STR ###
> 
> ## Cargar paquetes y librerias
> library(Hmisc)

> ## Correlación entre matrices 
> 
> matrices <- list(RST = c(RST), ASD = c(ASD), GST = c(GST), Nei = c(Nei), cs = c(cs), DSW = c(DSW), Dmu2 = c(Dmu2), FST=c(FST),DPS=c(DPS))
❌ Error in script: scripts_fv/OBJETIVO_3_Correlaciones.R

### [Step 10/19] Running: scripts_fv/OBJETIVO_3.2.Manteltest.R ###


> ##########################################################################################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth inheritance and land tenure norms in agropastoralist communities.############
> ##########################################################################################################################################################
> 
> #### OBJETIVO 3 ####
> ### To build a phylogenetic tree showing relationships between communities based on the distributions of genetic microsatellite markers within and between communities.###
> 
> ### Cargar paquetes y librerias ###
> library(dendextend)

> library(dplyr)

> library(geosphere)

> library(vegan)

> library(phangorn)

> ### Cargar DATOS geogr?ficos ###
> coordenadas <- read.csv("scripts_fv/Datos/coordenadas.csv", header = T, fileEncoding = "UTF-8-BOM")

> coordenadas$community <- gsub(" ", "_", coordenadas$community)

> coordenadas$community[grepl("LA_RINCONADA_DE_PUNITAQUI" , coordenadas$community)] <- "RINCONADA_DE_PUNITAQUI"

> #=======
> #TODO: REVISAR. Al igual que en el objetivo_1.2. las lineas 15,16 y 17 arrojan error por un problema de codificación de caracteres.
> # Arreglé manualmente, pero seguro que se va a revertir cuando se abra desde el equipo con el problema.
> # Vamos a tener que resolverlo, o seguirá pasando.
> ## REVISION: Agregué la misma solución que en 1.2
> 
> 
> ##Administraci?n de datos ##
> rownames(coordenadas) <- coordenadas$community

> colnames(coordenadas)<- c("community","lon","lat","org_name")

> my_points_t <- dplyr::select(coordenadas, lon, lat)

> rownames(my_points_t) <- coordenadas$community

> common_communities <- unique(comuneros$community)

> ##Test de Mantel##
> #3. Comunidades muestreadas: ?rbol de consenso #
> #Crear una matriz de distancia con datos de coordenadas de comunidades seleccionadas
> selected_communities <- unique(STR$pop)

> my_points_t <- my_points_t %>% dplyr::filter(row.names(my_points_t) %in% selected_communities)

> my_points_t <- my_points_t %>% dplyr::filter(row.names(my_points_t) %in% selected_communities)

> my_points_t <- my_points_t %>% dplyr::filter(row.names(my_points_t) %in% selected_communities)

> #=======
> #TODO: REVISAR. El paquete conflicted nos obliga a definir cuál proveedor de la función "filter estamos usando.
> # Asumí que es la de dplyr:
> # my_points_t <- my_points_t %>% dplyr::filter(row.names(my_points_t) %in% selected_communities)
> # Hay que revisar si es correcto.
> 
> geo_muestra <- distm (my_points_t, fun = distGeo )

> #TODO: REVISAR. Aquí aparecío el objeto "geo_muestra".
> # ¿Es ese el qie faltaba para correr O1.2?
> # De ser así, habría que incluir este código allá en vez de acá.
> # O bien, correr esto primero y O1.2. después 
> # (e inidicar en alguna parte que deben correrse en ese orden)
> 
> 
> rownames(geo_muestra) <- as.factor(rownames(my_points_t))

> colnames(geo_muestra) <- as.factor(rownames(my_points_t))

> geo_muestra <- as.matrix(geo_muestra)

> geo_muestra
                          BARRAZA CANELA_BAJA CANELILLA_OVALLE CASTILLO_MAL_PASO  EL_ALTAR EL_DIVISADERO
BARRAZA                     0.000    65521.08         38228.26          53790.89 35235.601     37063.117
CANELA_BAJA             65521.082        0.00         84488.19          49389.16 59391.521     55234.211
CANELILLA_OVALLE        38228.258    84488.19             0.00          46883.88 26357.704     31016.046
CASTILLO_MAL_PASO       53790.890    49389.16         46883.88              0.00 22398.300     18367.753
EL_ALTAR                35235.601    59391.52         26357.70          22398.30     0.000      4672.036
EL_DIVISADERO           37063.117    55234.21         31016.05          18367.75  4672.036         0.000
EL_ESPINAL               7950.917    61035.97         34078.02          45876.49 27489.899     29145.854
GUALLIGUAICA           100834.007   154511.60         70085.61         112418.51 95492.103     99947.531
HUENTELAUQUEN           95896.115    32049.85        116503.51          78619.73 91146.788     86856.184
LA_CALERA               13282.972    54264.66         37587.82          41441.09 25591.907     26180.884
LA_POLVADA              97722.954   152234.41         67748.82         110821.43 93414.207     97915.150
MANQUEHUA               42135.670    45613.06         41690.33          12098.17 15334.870     10675.552
MONTE_PATRIA            52801.617    86182.56         17846.56          40977.16 27635.655     31202.228
PUNITAQUI               29167.768    48500.33         36027.97          24825.71 13238.135     11383.060
RINCONADA_DE_PUNITAQUI  20804.767    49822.98         37245.89          33850.09 19993.259     19614.568
                       EL_ESPINAL GUALLIGUAICA HUENTELAUQUEN  LA_CALERA LA_POLVADA MANQUEHUA MONTE_PATRIA
BARRAZA                  7950.917   100834.007      95896.12  13282.972  97722.954  42135.67     52801.62
CANELA_BAJA             61035.974   154511.597      32049.85  54264.662 152234.407  45613.06     86182.56
CANELILLA_OVALLE        34078.025    70085.613     116503.51  37587.821  67748.821  41690.33     17846.56
CASTILLO_MAL_PASO       45876.495   112418.506      78619.73  41441.092 110821.429  12098.17     40977.16
EL_ALTAR                27489.899    95492.103      91146.79  25591.907  93414.207  15334.87     27635.65
EL_DIVISADERO           29145.854    99947.531      86856.18  26180.884  97915.150  10675.55     31202.23
EL_ESPINAL                  0.000   100133.929      92194.92   6822.354  97220.464  34304.58     47002.95
GUALLIGUAICA           100133.929        0.000     186475.77 105399.278   3895.034 110410.77     71500.15
HUENTELAUQUEN           92194.918   186475.765          0.00  85542.739 184236.998  76830.36    117425.71
LA_CALERA                6822.354   105399.278      85542.74      0.000 102597.336  29499.82     48479.74
LA_POLVADA              97220.464     3895.034     184237.00 102597.336      0.000 108441.03     70024.64
MANQUEHUA               34304.580   110410.767      76830.36  29499.821 108441.026      0.00     40627.51
MONTE_PATRIA            47002.947    71500.155     117425.71  48479.740  70024.635  40627.51         0.00
PUNITAQUI               21371.012   106108.210      80542.63  16618.289 103770.019  12974.48     40619.96
RINCONADA_DE_PUNITAQUI  13476.653   106710.690      81636.12   7706.698 104111.755  21846.31     45438.60
                        PUNITAQUI RINCONADA_DE_PUNITAQUI
BARRAZA                 29167.768              20804.767
CANELA_BAJA             48500.333              49822.976
CANELILLA_OVALLE        36027.965              37245.892
CASTILLO_MAL_PASO       24825.710              33850.095
EL_ALTAR                13238.135              19993.259
EL_DIVISADERO           11383.060              19614.568
EL_ESPINAL              21371.012              13476.653
GUALLIGUAICA           106108.210             106710.690
HUENTELAUQUEN           80542.634              81636.119
LA_CALERA               16618.289               7706.698
LA_POLVADA             103770.019             104111.755
MANQUEHUA               12974.476              21846.306
MONTE_PATRIA            40619.960              45438.603
PUNITAQUI                   0.000               9119.051
RINCONADA_DE_PUNITAQUI   9119.051                  0.000

> # como arbol
> 
> Geo_tree <- upgma(as.dist(geo_muestra),method="average")

> Geo_tree <- phangorn::upgma(as.dist(geo_muestra),method="average")

> Geo_tree <- phangorn::upgma(as.dist(geo_muestra),method="average")

> #=======
> #TODO: REVISAR. Ninguna de las librerías cargadas hasta ahora provee la función UPGMA.
> # Podría asumir que es upgma de Phangorn,  upgma de numbat, u otro.
> # Asumí phangorn:
> # library(phangorn)
> # Revisar si es correcto, y si lo es, añadir al preambulo.
> 
> plot.phylo(Geo_tree)

> ##Matriz de Geo_tree##Matriz de distancia con datos de apellidos
> surname_matrix_muestra
                       EL_DIVISADERO  EL_ALTAR MANQUEHUA PUNITAQUI RINCONADA_DE_PUNITAQUI   BARRAZA
EL_DIVISADERO              0.0000000 0.6394561 0.5270033 0.6239492              0.6984764 0.7269915
EL_ALTAR                   0.6394561 0.0000000 0.5211648 0.5200219              0.5435365 0.6921722
MANQUEHUA                  0.5270033 0.5211648 0.0000000 0.4508029              0.5510045 0.6577319
PUNITAQUI                  0.6239492 0.5200219 0.4508029 0.0000000              0.4409524 0.5266810
RINCONADA_DE_PUNITAQUI     0.6984764 0.5435365 0.5510045 0.4409524              0.0000000 0.6679969
BARRAZA                    0.7269915 0.6921722 0.6577319 0.5266810              0.6679969 0.0000000
CANELILLA_OVALLE           0.7949177 0.7112899 0.7149405 0.8315610              0.8129801 0.9246816
CANELA_BAJA                0.7946333 0.3989849 0.6268504 0.6470554              0.7266230 0.6850736
LA_CALERA                  0.7203128 0.7175465 0.5982259 0.5946726              0.6452046 0.6159566
EL_ESPINAL                 0.8122858 0.7850372 0.7292758 0.7147334              0.6617125 0.6773830
GUALLIGUAICA               0.9460301 0.9146856 0.8686474 0.8694248              0.9186818 0.9160002
HUENTELAUQUEN              0.6938979 0.7224691 0.5471690 0.7912974              0.7529813 0.7986905
CASTILLO_MAL_PASO          0.6818260 0.5827190 0.4052663 0.6804279              0.6956697 0.7995306
MONTE_PATRIA               0.8266250 0.7259555 0.6704053 0.7427140              0.8264483 0.8206300
LA_POLVADA                 0.9549146 0.9597871 0.9302839 0.9199888              0.8905126 0.9208244
                       CANELILLA_OVALLE CANELA_BAJA LA_CALERA EL_ESPINAL GUALLIGUAICA HUENTELAUQUEN
EL_DIVISADERO                 0.7949177   0.7946333 0.7203128  0.8122858    0.9460301     0.6938979
EL_ALTAR                      0.7112899   0.3989849 0.7175465  0.7850372    0.9146856     0.7224691
MANQUEHUA                     0.7149405   0.6268504 0.5982259  0.7292758    0.8686474     0.5471690
PUNITAQUI                     0.8315610   0.6470554 0.5946726  0.7147334    0.8694248     0.7912974
RINCONADA_DE_PUNITAQUI        0.8129801   0.7266230 0.6452046  0.6617125    0.9186818     0.7529813
BARRAZA                       0.9246816   0.6850736 0.6159566  0.6773830    0.9160002     0.7986905
CANELILLA_OVALLE              0.0000000   0.9037869 0.6893568  0.8227061    0.9289556     0.7211099
CANELA_BAJA                   0.9037869   0.0000000 0.7788822  0.8305944    0.7948131     0.8495283
LA_CALERA                     0.6893568   0.7788822 0.0000000  0.5010996    0.9551568     0.6479454
EL_ESPINAL                    0.8227061   0.8305944 0.5010996  0.0000000    0.9034592     0.6867261
GUALLIGUAICA                  0.9289556   0.7948131 0.9551568  0.9034592    0.0000000     0.8174901
HUENTELAUQUEN                 0.7211099   0.8495283 0.6479454  0.6867261    0.8174901     0.0000000
CASTILLO_MAL_PASO             0.6246591   0.6009669 0.6735648  0.7621643    0.8091610     0.6485945
MONTE_PATRIA                  0.7238130   0.7023125 0.7889567  0.9117430    0.8159288     0.8773425
LA_POLVADA                    0.9277754   0.9766940 0.8225314  0.7818016    0.8554056     0.9106425
                       CASTILLO_MAL_PASO MONTE_PATRIA LA_POLVADA
EL_DIVISADERO                  0.6818260    0.8266250  0.9549146
EL_ALTAR                       0.5827190    0.7259555  0.9597871
MANQUEHUA                      0.4052663    0.6704053  0.9302839
PUNITAQUI                      0.6804279    0.7427140  0.9199888
RINCONADA_DE_PUNITAQUI         0.6956697    0.8264483  0.8905126
BARRAZA                        0.7995306    0.8206300  0.9208244
CANELILLA_OVALLE               0.6246591    0.7238130  0.9277754
CANELA_BAJA                    0.6009669    0.7023125  0.9766940
LA_CALERA                      0.6735648    0.7889567  0.8225314
EL_ESPINAL                     0.7621643    0.9117430  0.7818016
GUALLIGUAICA                   0.8091610    0.8159288  0.8554056
HUENTELAUQUEN                  0.6485945    0.8773425  0.9106425
CASTILLO_MAL_PASO              0.0000000    0.7108045  0.9162819
MONTE_PATRIA                   0.7108045    0.0000000  0.9578333
LA_POLVADA                     0.9162819    0.9578333  0.0000000

> #surname_matrix_muestra2
> 
> #TODO: REVISAR. El objeto surname_matrix_muestra2 no existe.
> # ¿Tal vez se creaba en "Objetivo_1.2.Manteltest.R" que no corrió completamente?
> 
> 
> ###Intersecci?n entre distintas matrices
> ##Mantel function
> mantel_function <- function(t1,t2) {
+   #Conversir en matrix
+   t1 <- as.matrix(t1)
+   t2 <- as.matrix(t2)
+   # Encontrar los row.names en com?n
+   common_rows <- intersect(row.names(t1), row.names(t2))
+   # Filtrar las matrices para que sol# Filtrar las matrices para que sol# Filtrar las matrices para que solo contengan las filas y columnas con row.names en com?n
+   mat1_filtered <- t1[common_rows, common_rows]
+   mat2_filtered <- t2[common_rows, common_rows]
+   # Identificar las filas/columnas que quedaron fuera en mat1
+   rows_outside_mat1 <- setdiff(row.names(t1), common_rows)
+   mat1_outside <- t1[rows_outside_mat1, rows_outside_mat1]
+   # Identificar las filas/columnas que quedaron fuera en mat2
+   rows_outside_mat2 <- setdiff(row.names(t2), common_rows)
+   mat2_outside <- t2[rows_outside_mat2, rows_outside_mat2]
+  
+   #Distancias
+   mat2_filtered<-as.dist(mat2_filtered)
+   mat1_filtered <- as.dist(mat1_filtered)
+   set.seed(152)
+   #Generar mantel
+   mantel.test <- mantel.rtest(
+     mat2_filtered, # La primera de las dos matrices de disimilitud
+     mat1_filtered, # La segunda matriz
+     nrepet = iter
+   )
+   
+   #Visualizar mantel
+   return(print(mantel.test))
+ }

> ##Resultados de mantel tests con geo_muestra
> mantel_DPS<- mantel_function(DPS,geo_muestra)
Monte-Carlo test
Call: mantelnoneuclid(m1 = m1, m2 = m2, nrepet = nrepet)

Observation: 0.3798017 

Based on 1000 replicates
Simulated p-value: 0.05394605 
Alternative hypothesis: greater 

    Std.Obs Expectation    Variance 
 1.68784871  0.01173958  0.04755269 

> ##Resultados de mantel tests con apellidos
> mantel_DPS_Ap<- mantel_function(DPS,surname_matrix_muestra)
Monte-Carlo test
Call: mantelnoneuclid(m1 = m1, m2 = m2, nrepet = nrepet)

Observation: 0.5211502 

Based on 1000 replicates
Simulated p-value: 0.01498501 
Alternative hypothesis: greater 

    Std.Obs Expectation    Variance 
 2.39160421  0.01343688  0.04506699 

### [Step 11/19] Running: scripts_fv/OBJETIVO_4.1.Comparev2.R ###


> ################################################################################
> ################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth#### ##########inheritance and land tenure norms in agropastoralist communities######
> ################################################################################
> ################################################################################
> 
> #### OBJETIVO 4 ################################################################
> ### To compare trees builds with different data and their deviations from the consensus tree #################################################################
> 
> ##########IMPORTANTE: CORRER LOS SCRIPTS DE LOS OBJETIVOS 1 Y 3 #################
> 
> ###LIBRERIAS
> library(ape)

> library(dendextend)

> library(geiger)

> library(phytools)

> library(stringr)

> ################ TANGLEGRAMA:COMPARACION APELLIDOS/STR #########################
> # Etiquetas están en el mismo orden
> hy <- reorder(hy, "postorder")

> plotTree(hy)

> phyDPS <- reorder(phyDPS,"postorder")

> plotTree(phyDPS)

> # Escalonar las ramas en el mismo sentido (izquierda o derecha)
> hy <- ape::ladderize(hy)

> phyDPS <- ape::ladderize(phyDPS)

> ## Tanglegrama
> # Hacer dos árboles en dónde las poblaciones sean números
> hy_num <- hy

> hy_num$tip.label <- seq_along(hy$tip.label)

> phyDPS_num <- phyDPS

> phyDPS_num$tip.label <- seq_along(phyDPS$tip.label)

> # Crear correspondencia entre número y comunidad
> comunidades <- hy$tip.label 

> # Crear leyenda como un vector de caracteres
> leyenda <- paste(seq_along(comunidades), "  ", comunidades)

> #Entanglement
> e <- dendlist(as.dendrogram(hy_num), as.dendrogram(phyDPS_num)) %>%
+   dendextend::untangle(method = "step1side") %>% # Find the best alignment layout
+   entanglement()                     # Alignment

> dendlist(as.dendrogram(hy_num),as.dendrogram(phyDPS_num))%>% dendextend::untangle(method = "step1side") %>% entanglement # lower is better
[1] 0.3182715

> dendlist(as.dendrogram(hy_num),as.dendrogram(phyDPS_num))%>% dendextend::untangle(method = "step1side") %>% 
+   tanglegram(common_subtrees_color_lines = FALSE, highlight_distinct_edges  = FALSE)

> x <- dendlist(as.dendrogram(hy_num),as.dendrogram(phyDPS_num))%>% dendextend::untangle(method = "step2side") 

> #PNG DPS
> png("Figures/Tanglegram_DPS.png",width = 800, height = 400, units = "px", pointsize = 12,bg = "white")

> x %>% plot(main = paste("entanglement =", round(entanglement(x), 2)),common_subtrees_color_branches = T, highlight_distinct_edges  = FALSE,
+   main_left = "Surnames",
+   main_right = "STR",
+   sort = F,
+   edge.lwd = T,
+   color_lines = T,
+   intersecting = T,
+   rank_branches = T,
+ )

> legend(x = 5.8, y = 7.5,legend = leyenda, cex = 0.3, pt.cex = 0.5,inset=c(0.05,0.05),text.width = 0.8,box.lty = 2)

> dev.off()
RStudioGD 
        2 

> ###################### ARBOL DE CONSENSO #######################################
> # Combina los árboles en una lista de clase "multiPhylo"
> combined_trees1 <- as.multiPhylo(hy,phyDPS)

> combined_trees2 <- as.multiPhylo(phyDPS,hy)

> # Genera el árbol de consenso
> consensus_tree1 <- consensus(combined_trees1,p=0.5,check.labels = TRUE, rooted =F)

> consensus_tree1 <- reorder(consensus_tree1, "postorder")

> consensus_tree2 <- consensus(combined_trees2,p=0.5,check.labels = TRUE, rooted =F)

> consensus_tree2 <- reorder(consensus_tree2, "postorder")

> plotTree(consensus_tree1)

> plotTree(consensus_tree2)

> par(mfrow=c(1,2))

> plot(consensus_tree1, main="Apellidos primero")

> plot(consensus_tree2, main="DPS primero")

> par(mfrow=c(1,1))

> dev.off()
null device 
          1 

> png("Figures/Consensus_tree.png",width = 800, height = 800, units = "px", pointsize = 12,bg = "white")

> plot.phylo(consensus_tree2)

> dev.off()
null device 
          1 

> #Preparacion de árbol con largo de ramas (Todavía está por verse)
> is.binary(consensus_tree2)
[1] TRUE

> consensus_tree2$root.edge <- 0

> # Promediar longitudes de ambos árboles (si topologías son compatibles)
> consensus_tree2$edge.length <- (hy$edge.length + phyDPS$edge.length) / 2

> consensus_tree2$edge.length[consensus_tree2$edge.length == 0] <- 1e-6  # Reemplazar ceros para evitar la división por 0

> consensus_tree2 <- nnls.tree(cophenetic(consensus_tree2), consensus_tree2, rooted = TRUE)

> #=======
> #TODO: REVISAR. Muchas "warnings" aquí.
> # Parece ser un  con el cálculo de los largos de las ramas.
> #=======
> # REVISION: Al cambiar el método de cálculo de largo de ramas debería ser ultramétrico. 
> consensus_tree2 <- multi2di(consensus_tree2)

> plot.phylo(consensus_tree2)

> is.rooted(consensus_tree2)
[1] TRUE

> is.ultrametric(consensus_tree2)
[1] TRUE

> consensus_tree<-(consensus_tree2)

> ###################### DENDROPLOT CONSENSO & TRAITS ############################
> ## Generar dendroplot con el ?rbol de consenso y los traits anotados
> # Asegúrate de que la columna 'commune' esté en UTF-8
> comuneros$commune <- iconv(comuneros$commune, from = "latin1", to = "UTF-8")

> comuneros$commune[comuneros$commune == "VICUÑA"] <- "VICUNA"

> ###################### DENDROPLOT CONSENSO & TRAITS ############################
> ## Generar dendroplot con el ?rbol de consenso y los traits anotados
> traits <- function(comuneros, group_by_cols = c("community","commune")) {
+   # Asegurarse de que group_by_cols es un vector
+   if (!is.vector(group_by_cols)) {
+     group_by_cols <- as.vector(group_by_cols)
+   }
+   
+   # Calcular los indices
+   result <- comuneros %>%
+     group_by(across(all_of(group_by_cols))) %>%
+     summarise(
+       N = n(),
+       S = n_distinct(surname_father) / N,
+       R = mean(rights, na.rm = TRUE),
+       G = gini(shares),
+       A = mean(sex == "M", na.rm = TRUE),
+       M = sum(rights < 1, na.rm = TRUE) / N,
+     )
+   
+   return(result)
+ }

> result <-traits(comuneros) 
`summarise()` has grouped output by 'community'. You can override using the `.groups` argument.

> consensus_tree <- as.dendrogram(consensus_tree2)

> #=======
> #TODO: REVISAR.
> #Error in ape::as.hclust.phylo(object) : the tree is not ultrametric
> #=======
> 
> plot(consensus_tree)

> comuneros$commune[comuneros$commune == "VICUÃ‘A"] <-"VICUÑA"

> select_comuneros <- comuneros %>% dplyr::filter(comuneros$community %in% selected_communities)

> dendroplot <- function(consensus_tree, save_as = NULL, group_by_col = "community") {
+   library(ggdendro)
+   library(ggplot2)
+   
+   # Comprobar si el objeto es un dendrograma
+   if (!inherits(consensus_tree, "dendrogram")) {
+     stop("consensus_tree debe ser un objeto de tipo dendrogram")
+   }
+   
+   # Generar los datos del dendrograma
+   hcd <- dendro_data(consensus_tree, type = "rectangle")
+   # Obtener las etiquetas como caracteres
+   hcd$labels$label <- as.character(hcd$labels$label)
+   stringi::stri_enc_mark(hcd$labels$label[which(hcd$labels$label == "VICUÑA")])
+   hcd$labels$label <- gsub("VICUÑA", "VICUNA", hcd$labels$label)
+   # Definir el container
+   container <- if (group_by_col == "community") "commune"
+   else if (group_by_col == "commune") "province"
+   else if (group_by_col == "province") "region"
+   else NULL
+   
+   if (is.null(container)) {
+     stop("Container is NULL")
+   }
+   
+   # Calcular traits
+   tc <- result
+   
+   # Funci?n auxiliar para obtener vectores
+   vector_of <- function(target_col) {
+     if (!target_col %in% colnames(tc)) {
+       stop(paste("Column", target_col, "is not found in traits data"))
+     }
+     v <- tc[[target_col]]
+     if (is.null(v)) {
+       stop(paste("Column", target_col, "is NULL in traits data"))
+     }
+     names(v) <- tc[[group_by_col]]
+     v
+   }
+   
+   location <- if (!is.null(container)) vector_of(container) else NULL
+   N <- vector_of("N")
+   S <- vector_of("S")
+   A <- vector_of("A")
+   G <- vector_of("G")
+   M <- vector_of("M")
+ #  cluster <- vector_of("cluster")
+   
+   # Coordenadas ?tiles
+   lastrow <- nrow(hcd$labels)
+   x0 <- hcd$labels$x[[lastrow]]
+   y0 <- hcd$labels$y[[lastrow]]
+   x1 <- x0 + 1 + 0.5 * lastrow / 170
+   ydiff <- if (is.null(container)) 0.4 else 0
+   
+   # Verificar y crear el directorio si no existe
+   if (!is.null(save_as)) {
+     dir_path <- dirname(save_as)
+     if (!dir.exists(dir_path)) {
+       dir.create(dir_path, recursive = TRUE)
+     }
+     png(filename = save_as, width = 10 + 4 * lastrow / 170, height = 1 + 40 * lastrow / 170, units = "in", res = 300)
+   }
+   
+   size <- function(xs) {
+     xs * 1.3 / max(xs) + (1.7 + lastrow / 170)
+   }
+   #Ajustar tama?o de las ramas
+   scale_factor <- 0.5  # Ajusta este valor para cambiar el tama?o de las ramas
+   hcd$segments$y <- hcd$segments$y * scale_factor
+   hcd$segments$yend <- hcd$segments$yend * scale_factor
+   
+   # Graficar
+   p <- ggplot() +
+     geom_segment(data = segment(hcd), aes(x = x, y = y, xend = xend, yend = yend)) +
+     geom_text(data = label(hcd), aes(x = x, y = y, label = label, hjust = 0), nudge_y = 0.01, nudge_x = 0.05, size = 2) +
+     annotate("text", x = x1, y = y0 - 0.215, label = str_to_title(group_by_col), fontface = "bold", size = 4) +
+     annotate("text", x = x1, y = y0 - 1.84 + ydiff, label = "#", fontface = "bold", size = 4) +
+     annotate("text", x = x1, y = y0 - 2.06 + ydiff, label = "S", fontface = "bold", size = 4) +
+     annotate("text", x = x1, y = y0 - 2.26 + ydiff, label = "A", fontface = "bold", size = 4) +
+     annotate("text", x = x1, y = y0 - 2.46 + ydiff, label = "G", fontface = "bold", size = 4) +
+     annotate("text", x = x1, y = y0 - 2.66 + ydiff, label = "M", fontface = "bold", size = 4) +
+  #   annotate("text", x = x1, y = y0 - 2.90 + ydiff, label = "Cluster", fontface = "bold", size = 4) +
+     scale_size_identity() +
+     coord_flip() +
+     scale_y_reverse(expand = c(0.2, 0)) +
+     theme_dendro()
+   
+   # Agregar condicionalmente el container
+   if (!is.null(container)) {
+     p <- p +
+       annotate("text", x = x1, y = y0 - 1.265, label = str_to_title(container), fontface = "bold", size = 4) +
+       geom_text(data = label(hcd), aes(x = x, y = y, hjust = 0, label = location[label], colour = location[label]), nudge_y = 1.1, size = 3, show.legend = FALSE)
+   }
+   
+   # Agregar el resto de las anotaciones
+   p <- p +
+     geom_text(data = label(hcd), aes(x = x, y = y, label = N[label]), nudge_y = 1.8 - ydiff, hjust = 0, size = 3) +
+     geom_text(data = label(hcd), aes(x = x, y = y, label = formatC(S[label], format = "f", digits = 3)), nudge_y = 2.0 - ydiff, hjust = 0, size = 3) +
+     geom_text(data = label(hcd), aes(x = x, y = y, label = formatC(A[label], format = "f", digits = 3)), nudge_y = 2.2 - ydiff, hjust = 0, size = 3) +
+     geom_text(data = label(hcd), aes(x = x, y = y, label = formatC(G[label], format = "f", digits = 3)), nudge_y = 2.4 - ydiff, hjust = 0, size = 3) +
+     geom_text(data = label(hcd), aes(x = x, y = y, label = formatC(M[label], format = "f", digits = 3)), nudge_y = 2.6 - ydiff, hjust = 0, size = 3)
+   #  geom_text(data = label(hcd), aes(x = x, y = y, label = formatC(cluster[label], format = "f", digits = 0)), nudge_y = 2.85 - ydiff, hjust = 0, size = 3)
+   
+   # Guardar el gr?fico
+   if (!is.null(save_as)) {
+     print(p)
+     dev.off()
+   } else {
+     p
+   }
+ }

> # Llamar a la funci?n consensus_dendrogram
> library(conflicted)

> conflict_prefer("theme_dendro","ggdendro")
[conflicted] Removing existing preference.
[conflicted] Will prefer ggdendro::theme_dendro over any other package.

> conflict_prefer("label", "ggdendro")
[conflicted] Removing existing preference.
[conflicted] Will prefer ggdendro::label over any other package.

> consensus_dendrogram <- function(select_comuneros, save_as=NULL,group_by_col="community") {
+   raised_tree <- raise.dendrogram(as.dendrogram(consensus_tree2), max(consensus_tree2$edge.length))
+   dendroplot(raised_tree, save_as, group_by_col)
+ }

> consensus_dendrogram(select_comuneros, save_as = "Figures/dendrograma_consenso_DPS.png")
RStudioGD 
        2 

> consensus_tree<-(consensus_tree2)

> #TODO: Las últimas 3 líneas con texto arrojan, cada una, esta advertencia:
> # Warning message:
> #   In max(consensus_tree$edge.length) :
> #   no non-missing arguments to max; returning -Inf
> ##REVISION: No debería volver a salir este error y generarse una figura con el arbol de consenso y los traits anotados.

### [Step 12/19] Running: scripts_fv/OBJETIVO_4.2.Manteltest.R ###


> ##########################################################################################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth inheritance and land tenure norms in agropastoralist communities.############
> ##########################################################################################################################################################
> 
> #### OBJETIVO 4 ####
> ### To compare trees builds with different data and their deviations from the consensus tree ###
> 
> ## Cargar paquetes y librerias ##
> library(dendextend)

> library(dplyr)

> library(geosphere)

> library(vegan)

> library(classInt)

> library(units) #este paquete requiere instalar libunits en OSX y Linux

> ### Cargar DATOS geograficos ###
> shape.data <- sf::st_read("scripts_fv/Datos/comunidades_reprojected.shx")
Reading layer `comunidades_reprojected' from data source 
  `C:\Users\nicolas.montalva\Dropbox\Fondecyt iniciacion Montalva 2016\Close it\ccaa-surnames\scripts_fv\Datos\comunidades_reprojected.shx' 
  using driver `ESRI Shapefile'
Simple feature collection with 178 features and 2 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: -7975718 ymin: -3755147 xmax: -7795863 ymax: -3389729
Projected CRS: WGS 84 / World Mercator

> shape.data$Name <-  gsub("\\s*\\(\\d+\\)", "", shape.data$Name)

> shape.data$Name <- toupper(shape.data$Name)

> shape.data$Name <- gsub(" ", "_", shape.data$Name)

> shape.data$Name[grepl("LA_RINCONADA_DE_PUNITAQUI" , shape.data$Name)] <- "RINCONADA_DE_PUNITAQUI"

> rownames(shape.data) <- shape.data$Name

> my_points_v<- dplyr::select(shape.data,Name,geometry)

> rownames(my_points_v)<-shape.data$Name

> shape.data2<-shape.data

> shape.data2$Name[shape.data2$Name %in% c("GUALLIGUAICA")] <- "PUCLARO"

> rownames(shape.data2) <- shape.data2$Name

> my_points_w<- dplyr::select(shape.data2,Name,geometry)

> rownames(my_points_w)<-shape.data2$Name

> ##Test de Mantel##
> #3. Comunidades muestreadas: ?rbol de consenso #
> #Crear una matriz de distancia con datos de coordenadas de comunidades seleccionadas
> my_points_v <- my_points_v %>% dplyr::filter(row.names(shape.data) %in% selected_communities)

> coords <- sf::st_coordinates(my_points_v)# Estraer coordenadas

> geo_muestra <- sf::st_distance(my_points_v)# Calcular matriz de distancias

> rownames(geo_muestra) <- as.factor(rownames(my_points_v))

> colnames(geo_muestra)<- as.factor(rownames(my_points_v))

> geo_muestra
Units: [m]
                       HUENTELAUQUEN EL_DIVISADERO RINCONADA_DE_PUNITAQUI CANELA_BAJA MANQUEHUA   EL_ALTAR
HUENTELAUQUEN                   0.00    101459.276              95355.451    37523.37  89792.75 106447.822
EL_DIVISADERO              101459.28         0.000              22826.378    64427.48  12430.59   5436.219
RINCONADA_DE_PUNITAQUI      95355.45     22826.378                  0.000    58111.88  25436.18  23261.998
CANELA_BAJA                 37523.37     64427.480              58111.885        0.00  53231.53  69261.538
MANQUEHUA                   89792.75     12430.587              25436.181    53231.53      0.00  17851.984
EL_ALTAR                   106447.82      5436.219              23261.998    69261.54  17851.98      0.000
PUNITAQUI                   94093.99     13249.194              10613.354    56578.66  15109.01  15405.025
LA_CALERA                   99894.76     30460.697               8965.951    63277.47  34339.22  29768.942
BARRAZA                    111926.60     43099.492              24191.653    76363.63  49022.49  40965.402
MONTE_PATRIA               137012.41     36272.766              52819.327   100412.91  47253.11  32119.608
EL_ESPINAL                 107628.59     33899.598              15673.728    71150.74  39919.51  31966.582
GUALLIGUAICA               216869.53    115813.182             123642.258   179438.30 128000.29 110626.575
LA_POLVADA                 214274.93    113462.954             120636.023   176801.20 125722.04 108223.905
CANELILLA_OVALLE           135894.03     36045.203              43282.482    98408.21  48474.28  30624.859
                       PUNITAQUI  LA_CALERA    BARRAZA MONTE_PATRIA EL_ESPINAL GUALLIGUAICA LA_POLVADA
HUENTELAUQUEN           94093.99  99894.759 111926.603    137012.41 107628.588    216869.53  214274.93
EL_DIVISADERO           13249.19  30460.697  43099.492     36272.77  33899.598    115813.18  113462.95
RINCONADA_DE_PUNITAQUI  10613.35   8965.951  24191.653     52819.33  15673.728    123642.26  120636.02
CANELA_BAJA             56578.66  63277.472  76363.631    100412.91  71150.744    179438.30  176801.20
MANQUEHUA               15109.01  34339.221  49022.492     47253.11  39919.514    128000.29  125722.04
EL_ALTAR                15405.02  29768.942  40965.402     32119.61  31966.582    110626.58  108223.91
PUNITAQUI                   0.00  19336.887  33921.733     47225.80  24859.222    122964.40  120259.83
LA_CALERA               19336.89      0.000  15441.709     56341.15   7932.716    122094.18  118853.41
BARRAZA                 33921.73  15441.709      0.000     61332.12   9240.166    116745.81  113148.57
MONTE_PATRIA            47225.80  56341.155  61332.119         0.00  54607.605     82757.42   81053.00
EL_ESPINAL              24859.22   7932.716   9240.166     54607.60      0.000    115958.39  112589.23
GUALLIGUAICA           122964.40 122094.185 116745.815     82757.42 115958.393         0.00    4494.01
LA_POLVADA             120259.83 118853.412 113148.571     81053.00 112589.226      4494.01       0.00
CANELILLA_OVALLE        41874.10  43669.532  44390.629     20716.98  39579.334     81095.42   78394.82
                       CANELILLA_OVALLE
HUENTELAUQUEN                 135894.03
EL_DIVISADERO                  36045.20
RINCONADA_DE_PUNITAQUI         43282.48
CANELA_BAJA                    98408.21
MANQUEHUA                      48474.28
EL_ALTAR                       30624.86
PUNITAQUI                      41874.10
LA_CALERA                      43669.53
BARRAZA                        44390.63
MONTE_PATRIA                   20716.98
EL_ESPINAL                     39579.33
GUALLIGUAICA                   81095.42
LA_POLVADA                     78394.82
CANELILLA_OVALLE                   0.00

> my_points_w <- my_points_w %>% dplyr::filter(row.names(shape.data2) %in% selected_communities2)

> coords <- sf::st_coordinates(my_points_w)# Estraer coordenadas

> geo_muestra2 <- sf::st_distance(my_points_w)# Calcular matriz de distancias

> rownames(geo_muestra2) <- as.factor(rownames(my_points_w))

> colnames(geo_muestra2)<- as.factor(rownames(my_points_w))

> geo_muestra2
Units: [m]
                       HUENTELAUQUEN EL_DIVISADERO RINCONADA_DE_PUNITAQUI CANELA_BAJA MANQUEHUA   EL_ALTAR
HUENTELAUQUEN                   0.00    101459.276              95355.451    37523.37  89792.75 106447.822
EL_DIVISADERO              101459.28         0.000              22826.378    64427.48  12430.59   5436.219
RINCONADA_DE_PUNITAQUI      95355.45     22826.378                  0.000    58111.88  25436.18  23261.998
CANELA_BAJA                 37523.37     64427.480              58111.885        0.00  53231.53  69261.538
MANQUEHUA                   89792.75     12430.587              25436.181    53231.53      0.00  17851.984
EL_ALTAR                   106447.82      5436.219              23261.998    69261.54  17851.98      0.000
PUNITAQUI                   94093.99     13249.194              10613.354    56578.66  15109.01  15405.025
LA_CALERA                   99894.76     30460.697               8965.951    63277.47  34339.22  29768.942
BARRAZA                    111926.60     43099.492              24191.653    76363.63  49022.49  40965.402
MONTE_PATRIA               137012.41     36272.766              52819.327   100412.91  47253.11  32119.608
EL_ESPINAL                 107628.59     33899.598              15673.728    71150.74  39919.51  31966.582
PUCLARO                    216869.53    115813.182             123642.258   179438.30 128000.29 110626.575
CANELILLA_OVALLE           135894.03     36045.203              43282.482    98408.21  48474.28  30624.859
                       PUNITAQUI  LA_CALERA    BARRAZA MONTE_PATRIA EL_ESPINAL   PUCLARO CANELILLA_OVALLE
HUENTELAUQUEN           94093.99  99894.759 111926.603    137012.41 107628.588 216869.53        135894.03
EL_DIVISADERO           13249.19  30460.697  43099.492     36272.77  33899.598 115813.18         36045.20
RINCONADA_DE_PUNITAQUI  10613.35   8965.951  24191.653     52819.33  15673.728 123642.26         43282.48
CANELA_BAJA             56578.66  63277.472  76363.631    100412.91  71150.744 179438.30         98408.21
MANQUEHUA               15109.01  34339.221  49022.492     47253.11  39919.514 128000.29         48474.28
EL_ALTAR                15405.02  29768.942  40965.402     32119.61  31966.582 110626.58         30624.86
PUNITAQUI                   0.00  19336.887  33921.733     47225.80  24859.222 122964.40         41874.10
LA_CALERA               19336.89      0.000  15441.709     56341.15   7932.716 122094.18         43669.53
BARRAZA                 33921.73  15441.709      0.000     61332.12   9240.166 116745.81         44390.63
MONTE_PATRIA            47225.80  56341.155  61332.119         0.00  54607.605  82757.42         20716.98
EL_ESPINAL              24859.22   7932.716   9240.166     54607.60      0.000 115958.39         39579.33
PUCLARO                122964.40 122094.185 116745.815     82757.42 115958.393      0.00         81095.42
CANELILLA_OVALLE        41874.10  43669.532  44390.629     20716.98  39579.334  81095.42             0.00

> #Crar una matriz de distancia con arbol de consenso
> con1 <-as.matrix(cophenetic.phylo(consensus_tree1)) #hy primero, s/PUCLARO
⚠️ Warning in script: scripts_fv/OBJETIVO_4.2.Manteltest.R

### [Step 13/19] Running: scripts_fv/OBJETIVO_4_Otras_comparaciones.R ###


> ##########################################################################################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth inheritance and land tenure norms in agropastoralist communities.############
> ##########################################################################################################################################################
> 
> #### OBJETIVO 4 ####
> ### To compare trees builds with different data and their deviations from the consensus tree ###
> 
> #### Otras formas de evaluar similitud entre ?rboles ####
> ##librer?as
> library(dendextend)

> library(TreeDist)

> ##cor.dendlist
> cor.dendlist(dendlist(d1 = sort(dend.DPS), d2 = sort(hd)), method = "FM_index",k=9)
          d1        d2
d1 1.0000000 0.2760262
d2 0.2760262 1.0000000

> ##cor_cophenetic
> cor_cophenetic(dend.DPS,hd,method_coef = "kendall")
[1] 0.4332025

> ##Bk_plot
> Bk(phyNei,hy,k = nleaves(phyCS)-1)
❌ Error in script: scripts_fv/OBJETIVO_4_Otras_comparaciones.R

### [Step 14/19] Running: scripts_fv/OBJETIVO_5.1.Tree&traits.R ###


> ################################################################################
> ################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth####
> ######inheritance and land tenure norms in agropastoralist communities##########
> ################################################################################
> ################################################################################
> 
> #### OBJETIVO 5 ####
> ### Part 1 ###
> ### To plot over tips of the resulting trees the estimated values of each trait, and compute the most likely values for each at the internal nodes ###
> ##IMPORTANTE: CORRER LOS SCRIPTS DE LOS OBJETIVOS 2 y 4 ##
> 
> 
> #### CARGAR E INSTALLAR LIBRERIAS ####
> library(tidyverse)

> library(ape)

> library(car)

> library(caper)

> library(conflicted)

> library(dplyr)

> library(geiger)

> library(nlme)

> library(phytools)

> library(Publish)

> #library(treeio) #No lo puedo instalar
> library(BiocManager) #esto se demora mucho en compilar cosas. No sé si se puede instalar en modo binario ejecutable

> library("treeio") #Ver "packages.R" para instalar este paqute

> library(ggplot2)

> library(gridExtra)

> library(geomorph) #No lo puedo instalar

> #install.packages("geomorph") 
> #library(devtools)
> #install_github("geomorphR/geomorph", ref = "Stable", build_vignettes = TRUE)
> 
> # Resolver conflictos de funciones
> conflict_prefer("select", "dplyr")
[conflicted] Removing existing preference.
[conflicted] Will prefer dplyr::select over any other package.

> conflict_prefer("filter", "dplyr")
[conflicted] Removing existing preference.
[conflicted] Will prefer dplyr::filter over any other package.

> conflict_prefer("treedata", "geiger")
[conflicted] Removing existing preference.
[conflicted] Will prefer geiger::treedata over any other package.

> conflict_prefer("as.phylo", "phylogram")
[conflicted] Removing existing preference.
[conflicted] Will prefer phylogram::as.phylo over any other package.

> #### CREACION DE ARBOLES PARA CADA TRAIT ####
> #Ocuparemos (1) arbol de apellidos(y_total), (2) todas las tablas del objetivo 2, y (3) consenso STR/Apellido(consensus_3)
> 
> ###Explorar los datos
> STR <- read.csv("scripts_fv/Datos/STR.csv", sep = ",")

> STR$pop <- gsub(" ", "_", STR$pop)

> selected_communities <- unique(STR$pop)

> ##y_total
> plotTree(y_total,type="phylogram",ftype="off")

> ##Traits
> select_variable <- function(result, selected_communities = NULL, variable) {
+   df <- as.data.frame(result)
+   row.names(df) <- result$community
+   if (!is.null(selected_communities)) {
+     df <- df[df$community %in% selected_communities, ]
+   }
+   df <- df[, c("community", variable), drop = FALSE]
+   row.names(df) <- df$community
+   return(df)
+ }

> # S
> S_trait <- select_variable(result, selected_communities, "S")

> S_trait2 <- select_variable(result, NULL, "S")

> S_trait$community <- NULL

> S_trait2$community <- NULL

> N_trait2 <- select_variable(result, selected_communities, "N")

> # G
> G_trait <- select_variable(result, selected_communities, "G")

> G_trait2 <- select_variable(result, NULL, "G")

> G_trait$community <- NULL

> G_trait2$community <- NULL

> # A
> A_trait <- select_variable(result, selected_communities, "A")

> A_trait2 <- select_variable(result, NULL, "A")

> A_trait$community <- NULL

> A_trait2$community <- NULL

> # M
> M_trait <- select_variable(result, selected_communities, "M")

> M_trait2 <- select_variable(result, NULL, "M")

> M_trait$community <- NULL

> M_trait2$community <- NULL

> #Cluster
> #C_trait <- select_variable(result_traits, selected_communities, "cluster")
> #C_trait2 <- select_variable(result_traits, NULL, "cluster")
> #C_trait$community <- NULL
> #C_trait2$community <- NULL
> 
> #Final_table
> ft <- result

> ft <- ft %>% column_to_rownames(var = "community")

> ft2 <- result %>% filter(community %in% selected_communities)

> ft2 <- ft2 %>% column_to_rownames(var = "community")

> ##Consensus##
> consensus_tree <-as.phylo(consensus_tree)

> plotTree(consensus_tree,type="phylogram", ftype="i",lwd=1)

> ###Estimar estados ancestrales
> # S
> sv1 <- as.matrix(S_trait)[,1]

> sv2 <- as.matrix(S_trait2)[,1]

> # G
> gv1 <- as.matrix(G_trait)[,1]

> gv2 <- as.matrix(G_trait2)[,1]

> # A
> av1 <- as.matrix(A_trait)[,1]

> av2 <- as.matrix(A_trait2)[,1]

> # M
> mv1 <- as.matrix(M_trait)[,1]

> mv2 <- as.matrix(M_trait2)[,1]

> # Cluster
> #cv1 <- as.matrix(C_trait)[,1]
> #cv2 <- as.matrix(C_trait2)[,1]
> 
> # Funci?n para estimar estados ancestrales y crear el ?rbol
> estimacion_estados_ancestrales <- function(tree, trait_vector, leg_txt) {
+   sorted_trait_vector <- trait_vector[sort(tree$tip.label)]
+   anc <- fastAnc(tree, sorted_trait_vector, vars = TRUE, CI = TRUE)
+   obj <- contMap(tree, sorted_trait_vector, plot = TRUE)
+   plot(obj, type = "phylogram", legend = 0.7 * max(nodeHeights(tree)), ftype = "i", leg.txt = leg_txt)
+   return(list(anc=anc, obj = obj))
+ }

> # ANCESTRAL STATES FOR SAMPLED COMMUNITIES
> png("Figures/S_muestra.png")

> svc <- estimacion_estados_ancestrales(consensus_tree, sv1, "S")

> dev.off()
RStudioGD 
        2 

> #png("Figures/R_muestra.png")
> #rvc <- estimacion_estados_ancestrales(consensus_tree, rv1, "R")
> #dev.off()
> 
> png("Figures/G_muestra.png")

> gvc <- estimacion_estados_ancestrales(consensus_tree, gv1, "G")

> dev.off()
RStudioGD 
        2 

> png("Figures/A_muestra.png")

> avc <- estimacion_estados_ancestrales(consensus_tree, av1, "A")

> dev.off()
RStudioGD 
        2 

> png("Figures/M_muestra.png")

> mvc <- estimacion_estados_ancestrales(consensus_tree, mv1, "M")

> dev.off()
RStudioGD 
        2 

> #png("Figures/C_muestra.png")
> #cvc<- estimacion_estados_ancestrales(consensus_tree,cv1,"C")
> #dev.off()
> 
> # COMO LO QUE VIENE DEPENDE DE LO ANTERIOR, NO LO SEGUÍ PROBANDO##
> 
> writeAncestors(consensus_tree, Anc=svc$anc, file="Figures/S_nodos_muestra.phy", digits=6, format=c("phylip"))

> #writeAncestors(consensus_tree, Anc=rvc$anc, file="Figures/R_nodos_muestra.phy", digits=6, format=c("phylip"))
> writeAncestors(consensus_tree, Anc=gvc$anc, file="Figures/G_nodos_muestra.phy", digits=6, format=c("phylip"))

> writeAncestors(consensus_tree, Anc=avc$anc, file="Figures/A_nodos_muestra.phy", digits=6, format=c("phylip"))

> writeAncestors(consensus_tree, Anc=mvc$anc, file="Figures/M_nodos_muestra.phy", digits=6, format=c("phylip"))

> #Cluster discrete visualization
> #trees<-make.simmap(consensus_tree,cv1,nsim=100)
> #obj<-summary(trees,plot=FALSE)
> #cols<-setNames(palette()[1:400],mapped.states(trees))
> #cols<-cols[1:4]
> #plot(obj,cols,type="phylogram",fsize=0.8,cex=c(0.5,0.3))
> #add.simmap.legend(colors=cols,x=0.9*par()$usr[1],
> #                  y=0.9*par()$usr[4],prompt=FALSE,fsize=0.9)
> 
> 
> estimacion_estados_ancestrales <- function(tree, trait_vector, leg_txt) {
+   sorted_trait_vector <- trait_vector[sort(tree$tip.label)]
+   anc <- fastAnc(tree, sorted_trait_vector, vars = TRUE, CI = TRUE)
+   obj <- contMap(tree, sorted_trait_vector, plot = TRUE)
+   plot(obj, type = "phylogram", legend = 0.5 * max(nodeHeights(tree)), ftype = "off", leg.txt = leg_txt)
+   return(list(anc=anc, obj = obj))
+ }

> # Estimar estados ancestrales para los ?rboles de apellidos totales
> png("Figures/S_total.png")

> svt <- estimacion_estados_ancestrales(y_total, sv2, "S")

> dev.off()
RStudioGD 
        2 

> #png("Figures/R_total.png")
> #rvt <- estimacion_estados_ancestrales(y_total, rv2, "R")
> #dev.off()
> png("Figures/G_total.png")

> gvt <- estimacion_estados_ancestrales(y_total, gv2, "G")

> dev.off()
RStudioGD 
        2 

> png("Figures/A_total.png")

> avt <- estimacion_estados_ancestrales(y_total, av2, "A")

> dev.off()
RStudioGD 
        2 

> png("Figures/M_total.png")

> mvt <- estimacion_estados_ancestrales(y_total, mv2, "M")
❌ Error in script: scripts_fv/OBJETIVO_5.1.Tree&traits.R

### [Step 15/19] Running: scripts_fv/OBJETIVO_5.2.Visualización.R ###


> ##########################################################################################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth inheritance and land tenure norms in agropastoralist communities.############
> ##########################################################################################################################################################
> 
> #### OBJETIVO 5 ####
> ### Part 2 ###
> ### To plot over tips of the resulting trees the estimated values of each trait, and compute the most likely values for each at the internal nodes ###
> 
> ## CARGAR LIBRERIAS ##
> library(cowplot)

> library(GGally)

> library(png)

> library(grid)

> library(magick)

> ## Matriz de graficos ##
> ## Comunidades muestreadas
> # Grafico 1
> annotate_r_squared <- function(data1, mapping, ...) {
+   x <- eval_data_col(data1, mapping$x)
+   y <- eval_data_col(data1, mapping$y)
+   
+   result <- calc_r(x, y)
+   r_squared <- result$r_squared
+   p_value <- result$p_value
+   
+   if (p_value < 0.001) {
+     stars <- "***"
+   } else if (p_value < 0.01) {
+     stars <- "**"
+   } else if (p_value < 0.05) {
+     stars <- "*"
+   } else {
+     stars <- ""
+   }
+   label <- paste("Corr = ", round(r_squared, 4),stars)
+   
+   ggplot() +
+     annotate("text", x = mean(x), y = max(y), label = label, hjust = 0.5, vjust = 0.5, size = 4, color = "black")
+ }

> image_paths1 <- c(
+   "Figures/S_A_muestra.png",
+   "Figures/S_G_muestra.png",
+   "Figures/A_G_muestra.png",
+   "Figures/S_M_muestra.png",
+   "Figures/A_M_muestra.png",
+   "Figures/G_M_muestra.png")

> plot_with_image <- function(image_path) {
+   # Cargar la imagen usando cowplot
+   image <- cowplot::ggdraw() + cowplot::draw_image(image_path, scale = 1)
+   return(image)
+ }

> image_index <- 1

> # Definir la funci?n personalizada para ggally que utilice la imagen correspondiente
> custom_image_plot <- function(data1, mapping) {
+   image_path <- image_paths1[image_index]
+   p <- plot_with_image(image_path)
+   image_index <<- image_index + 1
+   ggplot() + annotation_custom(ggplotGrob(p), xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) + theme_void()
+ }

> png("Figures/Scatterplot_muestra_1.png",width = 3000, height = 3000, res = 300)

> # Ajustar margen y tama?o de texto para evitar colapso
> par(mar = c(1, 1, 0.5, 0.5) + 0.1)

> ggpairs(data1,
+         columnLabels = c("S","A","G","M"), 
+         lower= list(continuous = custom_image_plot, image_path = image_paths1),
+         upper = list(continuous =wrap(annotate_r_squared))
+ )
❌ Error in script: scripts_fv/OBJETIVO_5.2.Visualización.R

### [Step 16/19] Running: scripts_fv/OBJETIVO_5.5.GráficoG_M.R ###


> ##########################################################################################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth inheritance and land tenure norms in agropastoralist communities.############
> ##########################################################################################################################################################
> 
> #### OBJETIVO 5 ####
> ### Part 5 ###
> ### To plot over tips of the resulting trees the estimated values of each trait, and compute the most likely values for each at the internal nodes ###
> ##IMPORTANTE: CORRER LOS SCRIPTS DE LOS OBJETIVOS 2 y 4 ##
> 
> #### Cargar paquetes y librerias ####
> library(ape)

> library(dplyr)

> library(dendextend)

> library(phytools)

> library(ggplot2)

> ################################################################################
> ######################## Comunidades muestreadas ###############################
> ################################################################################
> # Cluster
> df_tree <- as.data.frame(cophenetic.phylo(consensus_tree))

> #=======
> #TODO: REVISAR. Error in compute.brlen(x, 1) : object "phy" is not of class "phylo"
> #In addition: Warning message:
> #  In dist.nodes(x) : the tree has no branch length: fixing them to one.
> # AL PARECER ESTE ES UN PROBLEMA RECURRENTE EN VARIAS PARTES
> #=======
> 
> df_tree <- na.omit(df_tree)

> df_tree <- as.data.frame(lapply(df_tree, as.numeric))

> df_tree_scaled <- scale(df_tree)

> df_tree_scaled_numeric <- as.data.frame(df_tree_scaled)  # Asegúrate de que sea un data frame de valores numéricos

> kmeans_result <-kmeans(df_tree_scaled_numeric, centers = 3, iter.max = 100, nstart = 100)

> Cluster <- as.factor(c(kmeans_result$cluster))

> names(Cluster) <- colnames(kmeans_result$centers)

> # Crear una tabla de clusters
> clusters_table <- data.frame(tip.label = names(Cluster), cluster = Cluster)

> ## Necesito que en el eje x estén los clados promediados ##
> ## En el eje y1 deben estar los valores de G y en ele eje y2 los valores de M ##
> ################################## G ###########################################
> # Cluster
> clusters_table
                                    tip.label cluster
EL_DIVISADERO                   EL_DIVISADERO       3
EL_ALTAR                             EL_ALTAR       3
MANQUEHUA                           MANQUEHUA       1
PUNITAQUI                           PUNITAQUI       2
RINCONADA_DE_PUNITAQUI RINCONADA_DE_PUNITAQUI       3
BARRAZA                               BARRAZA       2
CANELILLA_OVALLE             CANELILLA_OVALLE       1
CANELA_BAJA                       CANELA_BAJA       2
LA_CALERA                           LA_CALERA       2
EL_ESPINAL                         EL_ESPINAL       1
GUALLIGUAICA                     GUALLIGUAICA       3
HUENTELAUQUEN                   HUENTELAUQUEN       2
CASTILLO_MAL_PASO           CASTILLO_MAL_PASO       2
MONTE_PATRIA                     MONTE_PATRIA       2
LA_POLVADA                         LA_POLVADA       3

> # Tree
> G_tree <- read.tree(text = "(((((((GUALLIGUAICA:0.127973,LA_POLVADA:0.127973)[&CI={-0.0521,0.128952},ancstate={0.038426}]:0.123261,EL_DIVISADERO:0.251235)[&CI={-0.000347,0.225242},ancstate={0.112448}]:0.142584,RINCONADA_DE_PUNITAQUI:0.393819)[&CI={0.054363,0.308255},ancstate={0.181309}]:0.077413,EL_ALTAR:0.471233)[&CI={0.057315,0.325597},ancstate={0.191456}]:0.163097,CANELILLA_OVALLE:0.634329)[&CI={0.1019,0.402365},ancstate={0.252132}]:0.084733,MANQUEHUA:0.719062)[&CI={0.092656,0.411103},ancstate={0.251879}]:0.280938,((((((CANELA_BAJA:0.169277,CASTILLO_MAL_PASO:0.169277)[&CI={0.138494,0.305502},ancstate={0.221998}]:0.011386,PUNITAQUI:0.180663)[&CI={0.144077,0.31042},ancstate={0.227248}]:0.02304,MONTE_PATRIA:0.203702)[&CI={0.154424,0.33238},ancstate={0.243402}]:0.125087,BARRAZA:0.328789)[&CI={0.181639,0.41432},ancstate={0.29798}]:0.069566,LA_CALERA:0.398355)[&CI={0.190979,0.44785},ancstate={0.319415}]:0.215934,HUENTELAUQUEN:0.614289)[&CI={0.111258,0.43888},ancstate={0.275069}]:0.385711,EL_ESPINAL:1)[&CI={0.080061,0.448753},ancstate={0.264407}];")

> #TODO: Found more than one class "phylo" in cache; using the first, from namespace 'TreeTools'
> #Also defined by ‘tidytree’
> 
> terminal_nodes <-G_tree$tip.label

> terminal_nodes
 [1] "GUALLIGUAICA"           "LA_POLVADA"             "EL_DIVISADERO"          "RINCONADA_DE_PUNITAQUI"
 [5] "EL_ALTAR"               "CANELILLA_OVALLE"       "MANQUEHUA"              "CANELA_BAJA"           
 [9] "CASTILLO_MAL_PASO"      "PUNITAQUI"              "MONTE_PATRIA"           "BARRAZA"               
[13] "LA_CALERA"              "HUENTELAUQUEN"          "EL_ESPINAL"            

> #Path
> paths <- nodepath(G_tree,1:15)

> paths
[[1]]
[1] 16 17 18 19 20 21 22  1

[[2]]
[1] 16 17 18 19 20 21 22  2

[[3]]
[1] 16 17 18 19 20 21  3

[[4]]
[1] 16 17 18 19 20  4

[[5]]
[1] 16 17 18 19  5

[[6]]
[1] 16 17 18  6

[[7]]
[1] 16 17  7

[[8]]
[1] 16 23 24 25 26 27 28  8

[[9]]
[1] 16 23 24 25 26 27 28  9

[[10]]
[1] 16 23 24 25 26 27 10

[[11]]
[1] 16 23 24 25 26 11

[[12]]
[1] 16 23 24 25 12

[[13]]
[1] 16 23 24 13

[[14]]
[1] 16 23 14

[[15]]
[1] 16 15


> # Extraer los estados ancestrales
> G_anc_states <- gvc$anc$ace

> G_anc_states
        16         17         18         19         20         21         22         23         24         25 
0.26495954 0.26495954 0.25225583 0.25059075 0.18933150 0.17254450 0.14494536 0.04500488 0.30453185 0.30549564 
        26         27         28         29 
0.29733564 0.24138233 0.20384319 0.20384319 

> #Extraer estados actuales
> G_trait_vector <- setNames(G_trait$G, rownames(G_trait))

> print(G_trait_vector)
               BARRAZA            CANELA_BAJA       CANELILLA_OVALLE      CASTILLO_MAL_PASO 
          3.401253e-01           1.126470e-01           4.900130e-01           2.532922e-01 
              EL_ALTAR          EL_DIVISADERO             EL_ESPINAL           GUALLIGUAICA 
          7.791460e-02           1.419874e-01           2.813552e-01           0.000000e+00 
         HUENTELAUQUEN              LA_CALERA             LA_POLVADA              MANQUEHUA 
          1.658951e-01           5.239689e-01           7.105427e-15           2.176690e-01 
          MONTE_PATRIA              PUNITAQUI RINCONADA_DE_PUNITAQUI 
          2.973456e-01           1.838879e-01           3.198819e-01 

> #Crear un data.frame
> result_list <- list() 

> # Iterar sobre cada nodo terminal y su ruta desde la raíz
> for (i in seq_along(paths)) {
+   # Nodo terminal y ruta de nodos desde la raíz hasta el nodo terminal
+   tip <- terminal_nodes[i]
+   path <- paths[[i]]
+   
+   # Obtener el cluster del nodo terminal desde clusters_table
+   cluster <- clusters_table[clusters_table$tip.label == tip, "cluster"]
+   
+   # Obtener el valor de G para el nodo terminal desde G_trait
+   G_value_terminal <- G_trait_vector[tip]
+   
+   # Agregar el nodo terminal al dataframe con su valor de G y su cluster
+   result_list <- append(result_list, list(data.frame(
+     Node = path[length(path)],   # Último nodo en la ruta, que es el terminal
+     Cluster = cluster,
+     G_value = G_value_terminal
+   )))
+   
+   # Agregar cada nodo ancestral en el path (excluyendo el terminal)
+   for (node in head(path, -1)) {  # head(path, -1) excluye el último nodo terminal
+     # Asignar el valor de G para el nodo ancestral
+     G_value <- ifelse(as.character(node) %in% names(G_anc_states), G_anc_states[as.character(node)], NA)
+     
+     # Agregar el nodo ancestral, cluster y valor de G al resultado
+     result_list <- append(result_list, list(data.frame(
+       Node = node,
+       Cluster = cluster,  # Asignamos el mismo cluster del terminal
+       G_value = G_value
+     )))
+   }
+ }

> # Combinar todos los dataframes en uno solo
> result_df_G <- do.call(rbind, result_list)

> # Para nodos ancestrales, asegurarse de asignar clusters
> result_df_G <- result_df_G[!duplicated(result_df_G$Node), ]  # Eliminar filas duplicadas de cada nodo

> # Ver el dataframe resultante
> row.names(result_df_G)<-NULL

> ################################## M ###########################################
> paths
[[1]]
[1] 16 17 18 19 20 21 22  1

[[2]]
[1] 16 17 18 19 20 21 22  2

[[3]]
[1] 16 17 18 19 20 21  3

[[4]]
[1] 16 17 18 19 20  4

[[5]]
[1] 16 17 18 19  5

[[6]]
[1] 16 17 18  6

[[7]]
[1] 16 17  7

[[8]]
[1] 16 23 24 25 26 27 28  8

[[9]]
[1] 16 23 24 25 26 27 28  9

[[10]]
[1] 16 23 24 25 26 27 10

[[11]]
[1] 16 23 24 25 26 11

[[12]]
[1] 16 23 24 25 12

[[13]]
[1] 16 23 24 13

[[14]]
[1] 16 23 14

[[15]]
[1] 16 15


> # Extraer los estados ancestrales
> M_anc_states <- mvc$anc$ace

> M_anc_states
        16         17         18         19         20         21         22         23         24         25 
0.43274181 0.43274181 0.34545397 0.32982700 0.21643444 0.18156637 0.15343631 0.04764128 0.38208029 0.38340490 
        26         27         28         29 
0.36599624 0.27892533 0.20348571 0.20348571 

> #Extraer estados actuales
> M_trait_vector <- setNames(M_trait$M, rownames(M_trait))

> print(M_trait_vector)
               BARRAZA            CANELA_BAJA       CANELILLA_OVALLE      CASTILLO_MAL_PASO 
            0.40000000             0.11279230             0.59813084             0.17592593 
              EL_ALTAR          EL_DIVISADERO             EL_ESPINAL           GUALLIGUAICA 
            0.03053435             0.15789474             1.00000000             0.00000000 
         HUENTELAUQUEN              LA_CALERA             LA_POLVADA              MANQUEHUA 
            0.14854111             0.73270440             0.00000000             0.17034700 
          MONTE_PATRIA              PUNITAQUI RINCONADA_DE_PUNITAQUI 
            0.41101695             0.19774011             0.25433526 

> #Crear un data.frame
> result_list <- list() 

> # Iterar sobre cada nodo terminal y su ruta desde la raíz
> for (i in seq_along(paths)) {
+   # Nodo terminal y ruta de nodos desde la raíz hasta el nodo terminal
+   tip <- terminal_nodes[i]
+   path <- paths[[i]]
+   # Obtener el cluster del nodo terminal desde clusters_table
+   cluster <- clusters_table[clusters_table$tip.label == tip, "cluster"]
+   
+   # Obtener el valor de M para el nodo terminal desde M_trait
+   M_value_terminal <- M_trait_vector[tip]
+   
+   # Agregar el nodo terminal al dataframe con su valor de M y su cluster
+   result_list <- append(result_list, list(data.frame(
+     Node = path[length(path)],   # Último nodo en la ruta, que es el terminal
+     Cluster = cluster,
+     M_value = M_value_terminal
+   )))
+   
+   # Agregar cada nodo ancestral en el path (excluyendo el terminal)
+   for (node in head(path, -1)) {  # head(path, -1) excluye el último nodo terminal
+     # Asignar el valor de M para el nodo ancestral
+     M_value <- ifelse(as.character(node) %in% names(M_anc_states), M_anc_states[as.character(node)], NA)
+     # Agregar el nodo ancestral, cluster y valor de M al resultado
+     result_list <- append(result_list, list(data.frame(
+       Node = node,
+       Cluster = cluster,
+       M_value = M_value
+     )))
+   }
+ }

> # Combinar todos los dataframes en uno solo
> result_df_M <- do.call(rbind, result_list)

> # Para nodos ancestrales, asegurarse de asignar clusters
> result_df_M <- result_df_M[!duplicated(result_df_M$Node), ]  # Eliminar filas duplicadas de cada nodo

> # Ver el dataframe resultante
> row.names(result_df_M)<-NULL

> ################################## G-M #########################################
> #Dataframe de ambos
> result_df_GM<-merge(result_df_G, 
+                     result_df_M,
+                     all.x = T,
+                     by = c("Node", "Cluster"))

> result_df_GM
   Node Cluster      G_value    M_value
1     1       3 0.000000e+00 0.00000000
2    10       2 1.838879e-01 0.19774011
3    11       2 2.973456e-01 0.41101695
4    12       2 3.401253e-01 0.40000000
5    13       2 5.239689e-01 0.73270440
6    14       2 1.658951e-01 0.14854111
7    15       1 2.813552e-01 1.00000000
8    16       3 2.649595e-01 0.43274181
9    17       3 2.649595e-01 0.43274181
10   18       3 2.522558e-01 0.34545397
11   19       3 2.505908e-01 0.32982700
12    2       3 7.105427e-15 0.00000000
13   20       3 1.893315e-01 0.21643444
14   21       3 1.725445e-01 0.18156637
15   22       3 1.449454e-01 0.15343631
16   23       2 4.500488e-02 0.04764128
17   24       2 3.045318e-01 0.38208029
18   25       2 3.054956e-01 0.38340490
19   26       2 2.973356e-01 0.36599624
20   27       2 2.413823e-01 0.27892533
21   28       2 2.038432e-01 0.20348571
22    3       3 1.419874e-01 0.15789474
23    4       3 3.198819e-01 0.25433526
24    5       3 7.791460e-02 0.03053435
25    6       1 4.900130e-01 0.59813084
26    7       1 2.176690e-01 0.17034700
27    8       2 1.126470e-01 0.11279230
28    9       2 2.532922e-01 0.17592593

> max_path_length<-max(sapply(paths,length))

> max_path_length
[1] 8

> extended_paths <- lapply(paths, function(path){
+   if (length(path)<max_path_length){
+     c(path,rep(tail(path,1),max_path_length - length(path)))
+   }else{
+     path
+       }
+ })

> extended_paths
[[1]]
[1] 16 17 18 19 20 21 22  1

[[2]]
[1] 16 17 18 19 20 21 22  2

[[3]]
[1] 16 17 18 19 20 21  3  3

[[4]]
[1] 16 17 18 19 20  4  4  4

[[5]]
[1] 16 17 18 19  5  5  5  5

[[6]]
[1] 16 17 18  6  6  6  6  6

[[7]]
[1] 16 17  7  7  7  7  7  7

[[8]]
[1] 16 23 24 25 26 27 28  8

[[9]]
[1] 16 23 24 25 26 27 28  9

[[10]]
[1] 16 23 24 25 26 27 10 10

[[11]]
[1] 16 23 24 25 26 11 11 11

[[12]]
[1] 16 23 24 25 12 12 12 12

[[13]]
[1] 16 23 24 13 13 13 13 13

[[14]]
[1] 16 23 14 14 14 14 14 14

[[15]]
[1] 16 15 15 15 15 15 15 15


> calc_means<-function(nodos,df) {
+   #Extraer valores de G y M
+   G_values <- df$G_value[df$Node %in% nodos]
+   M_values <- df$M_value[df$Node %in% nodos]
+   #Calcular promedio- NA == 0
+   G_mean<-median(G_values)
+   M_mean<-median(M_values)
+   G_mean<-ifelse(is.na(G_values),0,G_values)
+   M_mean<-ifelse(is.na(M_values),0,M_values)
+   return(data.frame(G_mean=G_mean,M_mean=M_mean))
+ }

> levels_means<-list()

> for(level in 1:max_path_length){
+   nodos_at_level<-sapply(extended_paths, function(path)path[level])
+   mean_2<-calc_means(nodos_at_level,result_df_GM)
+   levels_means[[level]]<-data.frame(Level=level,G_mean=mean_2$G_mean,M_mean=mean_2$M_mean)
+ }

> level_means_df<- do.call(rbind,levels_means)

> print(level_means_df)
   Level       G_mean     M_mean
1      1 2.649595e-01 0.43274181
2      2 2.813552e-01 1.00000000
3      2 2.649595e-01 0.43274181
4      2 4.500488e-02 0.04764128
5      3 1.658951e-01 0.14854111
6      3 2.813552e-01 1.00000000
7      3 2.522558e-01 0.34545397
8      3 3.045318e-01 0.38208029
9      3 2.176690e-01 0.17034700
10     4 5.239689e-01 0.73270440
11     4 1.658951e-01 0.14854111
12     4 2.813552e-01 1.00000000
13     4 2.505908e-01 0.32982700
14     4 3.054956e-01 0.38340490
15     4 4.900130e-01 0.59813084
16     4 2.176690e-01 0.17034700
17     5 3.401253e-01 0.40000000
18     5 5.239689e-01 0.73270440
19     5 1.658951e-01 0.14854111
20     5 2.813552e-01 1.00000000
21     5 1.893315e-01 0.21643444
22     5 2.973356e-01 0.36599624
23     5 7.791460e-02 0.03053435
24     5 4.900130e-01 0.59813084
25     5 2.176690e-01 0.17034700
26     6 2.973456e-01 0.41101695
27     6 3.401253e-01 0.40000000
28     6 5.239689e-01 0.73270440
29     6 1.658951e-01 0.14854111
30     6 2.813552e-01 1.00000000
31     6 1.725445e-01 0.18156637
32     6 2.413823e-01 0.27892533
33     6 3.198819e-01 0.25433526
34     6 7.791460e-02 0.03053435
35     6 4.900130e-01 0.59813084
36     6 2.176690e-01 0.17034700
37     7 1.838879e-01 0.19774011
38     7 2.973456e-01 0.41101695
39     7 3.401253e-01 0.40000000
40     7 5.239689e-01 0.73270440
41     7 1.658951e-01 0.14854111
42     7 2.813552e-01 1.00000000
43     7 1.449454e-01 0.15343631
44     7 2.038432e-01 0.20348571
45     7 1.419874e-01 0.15789474
46     7 3.198819e-01 0.25433526
47     7 7.791460e-02 0.03053435
48     7 4.900130e-01 0.59813084
49     7 2.176690e-01 0.17034700
50     8 0.000000e+00 0.00000000
51     8 1.838879e-01 0.19774011
52     8 2.973456e-01 0.41101695
53     8 3.401253e-01 0.40000000
54     8 5.239689e-01 0.73270440
55     8 1.658951e-01 0.14854111
56     8 2.813552e-01 1.00000000
57     8 7.105427e-15 0.00000000
58     8 1.419874e-01 0.15789474
59     8 3.198819e-01 0.25433526
60     8 7.791460e-02 0.03053435
61     8 4.900130e-01 0.59813084
62     8 2.176690e-01 0.17034700
63     8 1.126470e-01 0.11279230
64     8 2.532922e-01 0.17592593

> averages <- level_means_df %>%
+   group_by(Level) %>%
+   summarise(across(everything(),median))

> averages
# A tibble: 8 × 3
  Level G_mean M_mean
  <int>  <dbl>  <dbl>
1     1  0.265  0.433
2     2  0.265  0.433
3     3  0.252  0.345
4     4  0.281  0.383
5     5  0.281  0.366
6     6  0.281  0.279
7     7  0.218  0.203
8     8  0.218  0.176

> hist_data<-ggplot_build(ggplot(averages, aes(x = Level)) + 
+   geom_histogram(binwidth = 0.5))$data[[1]]

> y_max <-max(hist_data$count)

> # Crear el gráfico
> ggplot(averages, aes(x = Level)) + 
+   geom_point(aes(y=G_mean), color="blue") + # Puntos para G
+   geom_line(aes(y=G_mean), color="blue",linetype="dashed")+ #Línea para G
+   geom_point(aes(y=M_mean), color="red") + # Puntos para M
+   geom_line(aes(y=M_mean), color="red",linetype="dashed")+ #Línea para M
+   scale_y_continuous(
+     name = "G",
+     sec.axis = sec_axis(~.*2,name = "M")
+     ) +
+   annotate("text",x=mean(averages$Level),y=mean(averages$G_mean),label="G trait",hjust=0.2,vjust=-4.2,size=5,color="blue")+
+   annotate("text",x=mean(averages$Level),y=mean(averages$M_mean),label="M trait",hjust=0.1,vjust=-7,size=5,color="red")+
+   labs(
+     x="Number of clades",
+     title = "The G and M traits of the tree of sampled communities",
+   ) +
+   theme_classic() 

> ########################## Líneas por cluster ##################################
> # Filtrar el nodo 16 (raiz)
> #node_16_G <- result_df_G[result_df_G$Node == 16, ]
> #node_16_M <- result_df_M[result_df_M$Node == 16, ]
> # Crear tres copias cambiando el valor del Cluster
> #node_16_cluster_1G <- node_16_G
> #node_16_cluster_1G$Cluster <- 1
> 
> #node_16_cluster_2G <- node_16_G
> #node_16_cluster_2G$Cluster <- 2
> 
> #node_16_cluster_3G <- node_16_G
> #node_16_cluster_3G$Cluster <- 3
> 
> #node_16_cluster_1M <- node_16_M
> #node_16_cluster_1M$Cluster <- 1
> 
> #node_16_cluster_2M <- node_16_M
> #node_16_cluster_2M$Cluster <- 2
> 
> #node_16_cluster_3M <- node_16_M
> #node_16_cluster_3M$Cluster <- 3
> 
> # Unir las filas modificadas al dataframe original
> #result_df_G <- rbind(result_df_G, node_16_cluster_1G, node_16_cluster_2G, node_16_cluster_3G)
> #result_df_G
> #result_df_M <- rbind(result_df_M, node_16_cluster_1M,node_16_cluster_2M, node_16_cluster_3M)
> #result_df_M
> #Eliminar duplicados
> #result_df_G <- result_df_G %>% distinct()
> #result_df_M <- result_df_M %>% distinct()
> 
> #Dataframe de ambos
> #result_df_GM <- merge(result_df_G, 
> #                      result_df_M, 
> #                      all.x = TRUE, 
> #                      by = c("Node", "Cluster"))
> 
> #result_df_GM
> #max_path_length<-max(sapply(paths,length))
> #max_path_length
> #extended_paths <- lapply(paths, function(path){
> #  if (length(path)<max_path_length){
> #    c(path,rep(tail(path,1),max_path_length - length(path)))
> #  }else{
> #    path
> #  }
> #})
> #extended_paths
> 
> #calc_means <- function(nodos, df) {
>   # Filtrar los datos para los nodos en el nivel actual
> #  df_filtered <- df %>% filter(Node %in% nodos)
>   
>   # Calcular promedios por cluster
> #  G_means <- df_filtered %>%
> #    group_by(Cluster) %>%
> #    summarise(G_mean = median(G_value, na.rm = TRUE), .groups = 'drop')
>   
> #  M_means <- df_filtered %>%
> #    group_by(Cluster) %>%
> #    summarise(M_mean = median(M_value, na.rm = TRUE), .groups = 'drop')
>   
>   # Combinar promedios de G y M para cada cluster
> #  cluster_means <- merge(G_means, M_means, by = "Cluster", all = TRUE)
>   
>   # Llenar NAs con 0
> #  cluster_means[is.na(cluster_means)] <- 0
>   
> #  return(cluster_means)
> #}
> 
> #levels_means <- list()
> #for (level in 1:max_path_length) {
>   # Obtener nodos en el nivel actual
> #  nodos_at_level <- sapply(extended_paths, function(path) path[level])
>   
>   # Calcular los promedios para cada cluster en este nivel
> #  mean_data <- calc_means(nodos_at_level, result_df_GM)
>   
>   # Agregar la columna de nivel
> #  mean_data$Level <- level
>   
>   # Almacenar resultados en la lista
> #  levels_means[[level]] <- mean_data
> #}
> 
> # Convertir lista en dataframe
> #level_means_df <- do.call(rbind, levels_means)
> #print(level_means_df)
> 
> # Calcular promedio general por nivel
> #averages_cluster <- level_means_df %>%
> #  group_by(Level, Cluster) %>%
> #  summarise(across(starts_with("G_mean"), median, na.rm = TRUE),
> #            across(starts_with("M_mean"), median, na.rm = TRUE),
> #            .groups = 'drop')
> #averages_cluster
> 
> # Crear el gráfico con ggplot2
> #ggplot(averages_cluster) +
>   # Línea continua para G_mean
> #  geom_line(aes(x = Level, y = G_mean, color = factor(Cluster), linetype = "G_mean", group = Cluster), 
> #            size = 1) +
>   # Línea punteada para M_mean
> #  geom_line(aes(x = Level, y = M_mean, color = factor(Cluster), linetype = "M_mean", group = Cluster), 
> #            size = 1) +
>   # Configuración de colores
> #  scale_color_manual(values = c("blue", "red", "green")) +
>   # Configuración de tipos de línea
> #  scale_linetype_manual(values = c("G_mean" = "solid", "M_mean" = "dotted")) +
> #  labs(
> #    title = "The G and M traits of the tree of sampled communities",
> #    x = "Number of clades",
> #    y = "G mean",
> #    color = "Cluster",
> #    linetype = "Trait"
> #  ) +
>   # Agregar eje secundario para M
> #  scale_y_continuous(
> #    sec.axis = sec_axis(~ ., name = "M mean")
> #  ) +
> #  theme_classic()
>  
> ################################################################################
> ########################## Todas las comunidades ###############################
> ################################################################################
> # Cluster
> #df_tree_total <- as.data.frame(as.matrix(surname_matrix))
> #df_tree_total <- as.data.frame(lapply(df_tree_total, as.numeric))
> #df_tree_scaled_t <- scale(df_tree_total)
> #km <- kmeans(df_tree_scaled_t, centers = 2, iter.max = 100, nstart = 100)
> #Cluster <- as.factor(c(km$cluster))
> #names(Cluster) <- colnames(km$centers)
> 
> # Crear una tabla de clusters
> #clusters_table <- data.frame(tip.label = names(Cluster), cluster = Cluster)
> #clusters_table
> 
> # Tree
> terminal_nodes <-gvt$obj$tree$tip.label

> terminal_nodes
  [1] "AGUA_FRIA_ALTA"                      "AGUA_FRIA_BAJA"                     
  [3] "ALCONES"                             "ALGARROBAL_Y_DESPENSA"              
  [5] "ALGARROBO_DE_HORNILLOS"              "ALHUEMILLA_LAS_PALMAS"              
  [7] "ALVAREZ_DE_VALLE_HERMOSO"            "ANGOSTURA_DE_GALVEZ"                
  [9] "ATELCURA"                            "ATUHUAICO"                          
 [11] "BARRAZA"                             "BLAS_Y_BULRREME"                    
 [13] "BUENOS_AIRES_DE_PUNILLA"             "CABRA_CORRAL"                       
 [15] "CALDERA_Y_DAMAS"                     "CANELA_ALTA"                        
 [17] "CANELA_BAJA"                         "CANELILLA_CANELA"                   
 [19] "CANELILLA_OVALLE"                    "CARCAMO"                            
 [21] "CARRIZAL_Y_LAGUNA_DE_SERON"          "CARRIZO,_MENDOZA_Y_ROMERO"          
 [23] "CASTILLO_MAL_PASO"                   "CERRO_BLANCO"                       
 [25] "CERRO_GIGANTE"                       "CHACARILLAS"                        
 [27] "CHALINGA"                            "CHANCHOQUI"                         
 [29] "CHAPE_Y_CHACAY"                      "CHELLES"                            
 [31] "CHILECITO_Y_CHUAPA"                  "COIPO_Y_CUYUNCAVI"                  
 [33] "COLLIGUAY"                           "CORDILLERA_DE_CARRIZAL"             
 [35] "CUARTO_CAJON"                        "CUESTA_EL_MANZANO"                  
 [37] "CUZCUZ"                              "DAIN_Y_CORTADERA"                   
 [39] "DE_ARAYA"                            "DE_ORREGO"                          
 [41] "DIAZ_Y_OCARANZA"                     "DOS_RIOS"                           
 [43] "EL_ALMENDRO"                         "EL_ALTAR"                           
 [45] "EL_ATAJO"                            "EL_CHACAY"                          
 [47] "EL_CUYANO"                           "EL_DIVISADERO"                      
 [49] "EL_DURAZNO"                          "EL_ESPINAL"                         
 [51] "EL_ESPINO"                           "EL_MACANO"                          
 [53] "EL_OLIVO"                            "EL_PANGUE"                          
 [55] "EL_PERAL_OJO_DE_AGUA"                "EL_POTRERO_ALTO"                    
 [57] "EL_POTRERO_DE_HUATULAME"             "EL_ROMERAL"                         
 [59] "EL_TOME"                             "ESTERO_DERECHO"                     
 [61] "FERNANDEZ_ANGEL_Y_OTROS"             "FERNANDEZ_Y_VELIZ"                  
 [63] "FERNANDO_ALVAREZ"                    "FLORES_Y_SAAVEDRA"                  
 [65] "FUNDIDA_NORTE"                       "FUNDIDA_SUR"                        
 [67] "GUALLIGUAICA"                        "HIGUERITAS_UNIDAS"                  
 [69] "HUAMPULLA"                           "HUANA"                              
 [71] "HUAPILLAS_MOLLAQUITAS"               "HUASCOALTINOS"                      
 [73] "HUENTELAUQUEN"                       "HUINCHIGUALLEGO"                    
 [75] "INGA_PICHASCA"                       "JARA_O_LAJA"                        
 [77] "JARILLA_Y_AZOGUE"                    "JIMENEZ_Y_TAPIA"                    
 [79] "LA_CALERA"                           "LA_CAPILLA"                         
 [81] "LA_CEBADA"                           "LA_CISTERNA"                        
 [83] "LA_COIPA"                            "LA_COLORADA_DE_AGUILERA_Y_SARMIENTO"
 [85] "LA_HERRADURA"                        "LA_HOYADA"                          
 [87] "LA_LEONA"                            "LA_ORTIGA"                          
 [89] "LA_PLATA"                            "LA_POLVADA"                         
 [91] "LA_SAUCERA"                          "LA_TRANQUITA"                       
 [93] "LA_VERDIONA"                         "LAGUNA_VERDE"                       
 [95] "LAGUNILLAS_GALLEGUILLOS_DEL_VALLE"   "LAS_BARRANCAS"                      
 [97] "LAS_BATEAS"                          "LAS_CARDAS"                         
 [99] "LAS_DAMAS"                           "LAS_MINILLAS"                       
[101] "LAS_PAREDES"                         "LAS_ROJAS_DE_CUTUN"                 
[103] "LAS_TAZAS"                           "LAS_TRANCAS_DE_PUCLARO"             
[105] "LITIPAMPA"                           "LORENZO_ARAYA"                      
[107] "LORENZO_PERALTA_DE_PUNILLA"          "LOS_ALGODONES"                      
[109] "LOS_ANGELES"                         "LOS_CERRILLOS"                      
[111] "LOS_CHOROS"                          "LOS_CLONQUIS"                       
[113] "LOS_HOYOS_Y_EL_EMPEDRADO"            "LOS_LAVADEROS"                      
[115] "LOS_MAITENES"                        "LOS_MAITENES_DE_SERON"              
[117] "LOS_MORALES"                         "LOS_MOZOS"                          
[119] "LOS_POZOS"                           "LOS_TAPIAS"                         
[121] "LOS_TOMES"                           "LOS_TRIGOS"                         
[123] "MAJADA_BLANCA"                       "MANQUEHUA"                          
[125] "MAQUI_LOS_PALQUIS"                   "MIALQUI"                            
[127] "MINCHA_NORTE"                        "MINCHA_SUR"                         
[129] "MONTE_PATRIA"                        "MOVILO"                             
[131] "OLLA_DE_CALDERA"                     "ORURO"                              
[133] "PEJERREYES"                          "PIEDRA_LISA"                        
[135] "PIEDRAS_BLANCAS"                     "POTRERILLO_ALTO"                    
[137] "PULPICA_ALTO"                        "PULPICA_BAJO"                       
[139] "PUNITAQUI"                           "QUEBRADA_DE_COLLIGUACITO"           
[141] "QUEBRADA_DE_PAIHUANO_Y_SAN_ANDRES"   "QUEBRADA_DE_TALCA"                  
[143] "QUEBRADA_DE_TULAHUEN"                "QUEBRADA_HONDA"                     
[145] "QUEBRADA_LA_ARENA"                   "QUEBRADA_LAS_MINILLAS"              
[147] "QUEBRADA_LAS_MOLLACAS"               "QUEBRADA_LOS_LOROS"                 
[149] "QUITALLACO"                          "RAMADILLA"                          
[151] "RAPEL"                               "RAPELCILLO"                         
[153] "RINCONADA_DE_PUNITAQUI"              "RIO_COLORADO"                       
[155] "ROMERALCILLO"                        "SALALA"                             
[157] "SAN_ISIDRO"                          "SAN_LORENZO"                        
[159] "SOCOS"                               "TOTORAL"                            
[161] "TOTORALILLO"                         "TUNGA_NORTE"                        
[163] "TUNGA_SUR"                           "UCHUMI-DIAGUITAS"                   
[165] "VADO_HONDO"                          "VALDIVIA_DE_PUNILLA"                
[167] "VALLECITO_Y_RIO_SECO"                "VARILLAR"                           
[169] "VIVANCO"                             "YERBA_LOCA"                         

> #Path
> paths <- nodepath(gvt$obj$tree,1:170)

> paths
[[1]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 249 302 317   1

[[2]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 249 302 317 329   2

[[3]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 241 313   3

[[4]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 291 301
[28] 304   4

[[5]]
[1] 171 172 173 175 177 179 181 182   5

[[6]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 256 268 298 312 332   6

[[7]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 199 207 243 248 269 303 324   7

[[8]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 192 197   8

[[9]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 199 207 243 248 269 303   9

[[10]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 213 279  10

[[11]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 245  11

[[12]]
[1] 171 172 173 175 176 194 216  12

[[13]]
[1] 171 172 173 175 177 178 183  13

[[14]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 250 297 331  14

[[15]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 196 202 218 234  15

[[16]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 223 251 273  16

[[17]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 278 280 290  17

[[18]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 223 251 273  18

[[19]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253  19

[[20]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 306 334  20

[[21]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 271 288 293 327
[28] 336 338  21

[[22]]
[1] 171 172 173 175 176 193 217  22

[[23]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 294 300 315
[28] 319  23

[[24]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 306  24

[[25]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 271 288 293 326
[28]  25

[[26]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264 266 274 283  26

[[27]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 278 280 290  27

[[28]]
[1] 171 172 173 175 176 193 217  28

[[29]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 192 198 238  29

[[30]]
[1] 171 172 173 174 210 237  30

[[31]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 291 301
[28] 305  31

[[32]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 241 313  32

[[33]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267  33

[[34]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 294 300 315
[28] 318  34

[[35]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 256 268  35

[[36]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 196 202 218  36

[[37]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 223  37

[[38]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 252 262 265 285 310 330
[28]  38

[[39]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 235 258 289  39

[[40]]
[1] 171  40

[[41]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 291  41

[[42]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 278  42

[[43]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195  43

[[44]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 291 301
[28] 305 321 328  44

[[45]]
[1] 171 172 173 175 176 193  45

[[46]]
[1] 171 172 173 175 176 194 215  46

[[47]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264 266  47

[[48]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264  48

[[49]]
[1] 171 172 173 175 176 194 216  49

[[50]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 220  50

[[51]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 199 207 243 248 269 303 324  51

[[52]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 235 258  52

[[53]]
[1] 171 172 173 175 177 178 184  53

[[54]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 220 272 295  54

[[55]]
[1] 171 172 173 175 177 179 180  55

[[56]]
[1] 171 172 173 175 177 178 184 222  56

[[57]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 256 268 298 312 333 335  57

[[58]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 306 334 337  58

[[59]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 220 272  59

[[60]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 252 262 265 286  60

[[61]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 199 207  61

[[62]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 278 280  62

[[63]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 307 309 311  63

[[64]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 232  64

[[65]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 252 262 265 285 310  65

[[66]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 252 262 265 285 310 330
[28]  66

[[67]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 249  67

[[68]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264 266 274 284 299  68

[[69]]
[1] 171 172 173 175 176 194 215  69

[[70]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 291 301
[28] 305 321 328  70

[[71]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 271 288 293 326
[28]  71

[[72]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206  72

[[73]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 252 262  73

[[74]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 196 201 244  74

[[75]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 235 257  75

[[76]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 213 279  76

[[77]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 213  77

[[78]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264 266 274 284 299 316
[28] 322  78

[[79]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 252 262 265 285  79

[[80]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 250  80

[[81]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 256 268 298 312 333 335  81

[[82]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 281  82

[[83]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 241  83

[[84]]
[1] 171 172 173 175 177 179 181 182  84

[[85]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 307 308  85

[[86]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208  86

[[87]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 250 297  87

[[88]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 292 296
[28]  88

[[89]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 271  89

[[90]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 199  90

[[91]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 306 334 337  91

[[92]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 239 320 339  92

[[93]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 199 207 243  93

[[94]]
 [1] 171 172 173 175 177 179 180 185 186 225  94

[[95]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 196 202  95

[[96]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 249 302 317 329  96

[[97]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 254  97

[[98]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 307 309  98

[[99]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 220 272 295  99

[[100]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 100

[[101]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 250 297 331 101

[[102]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 192 197 102

[[103]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 103

[[104]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 192 198 238 275 104

[[105]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 271 288 293 327
[28] 336 338 105

[[106]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 256 268 298 106

[[107]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 270 107

[[108]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 291 301
[28] 304 323 108

[[109]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 260 109

[[110]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 254 110

[[111]]
 [1] 171 172 173 175 177 179 180 185 186 111

[[112]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 112

[[113]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 294 300 315
[28] 318 113

[[114]]
[1] 171 172 173 174 210 237 114

[[115]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 270 115

[[116]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 271 288 293 327
[28] 336 116

[[117]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264 266 274 283 117

[[118]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 294 300 314
[28] 325 118

[[119]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 307 309 311 119

[[120]]
[1] 171 172 173 175 177 179 181 120

[[121]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 235 257 121

[[122]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 196 201 122

[[123]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 199 207 243 248 269 123

[[124]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264 266 274 284 299 316
[28] 322 124

[[125]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 291 301
[28] 304 323 125

[[126]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 291 301
[28] 305 321 126

[[127]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 249 302 127

[[128]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 192 198 238 275 128

[[129]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 232 129

[[130]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 130

[[131]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 196 202 218 234 131

[[132]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 260 287 132

[[133]]
 [1] 171 172 173 175 177 179 180 185 187 133

[[134]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 252 134

[[135]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 271 288 135

[[136]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 307 308 136

[[137]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 137

[[138]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 281 138

[[139]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264 266 274 284 299 316
[28] 139

[[140]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 239 140

[[141]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 271 288 293 327
[28] 141

[[142]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 142

[[143]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 235 258 289 143

[[144]]
[1] 171 172 173 174 144

[[145]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 256 268 298 312 332 145

[[146]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 239 320 339 146

[[147]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 252 262 265 286 147

[[148]]
[1] 171 172 173 175 177 178 183 148

[[149]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 260 287 149

[[150]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 239 320 150

[[151]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 294 300 314
[28] 325 151

[[152]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 294 300 315
[28] 319 152

[[153]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264 266 274 284 153

[[154]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 256 268 298 312 333 154

[[155]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 294 300 314
[28] 155

[[156]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 245 156

[[157]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 199 207 243 248 157

[[158]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 294 158

[[159]]
[1] 171 172 159

[[160]]
 [1] 171 172 173 175 177 179 180 185 186 225 160

[[161]]
[1] 171 172 173 174 210 161

[[162]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 162

[[163]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 192 198 163

[[164]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 164

[[165]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 292 165

[[166]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 223 251 166

[[167]]
[1] 171 172 173 175 177 178 184 222 167

[[168]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 196 201 244 168

[[169]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 292 296
[28] 169

[[170]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 256 170


> # Extraer los estados ancestrales
> G_anc_states <- gvt$anc$ace

> G_anc_states
       171        172        173        174        175        176        177        178        179        180 
0.11811683 0.11840475 0.12798707 0.14640683 0.12809278 0.13323442 0.12796359 0.13178576 0.12741943 0.12211043 
       181        182        183        184        185        186        187        188        189        190 
0.12758054 0.11190971 0.21294894 0.12344913 0.12156942 0.11863751 0.12036829 0.11887525 0.11491738 0.11967715 
       191        192        193        194        195        196        197        198        199        200 
0.12128591 0.12090900 0.13070224 0.14455498 0.09866755 0.11372278 0.13149747 0.13892163 0.11975730 0.12427687 
       201        202        203        204        205        206        207        208        209        210 
0.10774328 0.11343693 0.12463498 0.12426975 0.12503983 0.12582687 0.13091769 0.13262767 0.05922463 0.18694861 
       211        212        213        214        215        216        217        218        219        220 
0.12106325 0.12549914 0.12427069 0.12959613 0.22819140 0.14068716 0.07151285 0.10062347 0.13426162 0.14765987 
       221        222        223        224        225        226        227        228        229        230 
0.13459785 0.02523743 0.11436714 0.13291510 0.06129407 0.12897426 0.14051238 0.13998903 0.16380318 0.13977742 
       231        232        233        234        235        236        237        238        239        240 
0.15049419 0.16255854 0.11429204 0.09483607 0.12424065 0.12854936 0.22923714 0.15219777 0.16068433 0.12361268 
       241        242        243        244        245        246        247        248        249        250 
0.25511262 0.15007197 0.13811623 0.03750079 0.19843525 0.17782179 0.11457514 0.11921727 0.03377860 0.04093270 
       251        252        253        254        255        256        257        258        259        260 
0.11615286 0.14395525 0.15434606 0.04112183 0.10661872 0.11088145 0.11943383 0.11920486 0.14212471 0.12355478 
       261        262        263        264        265        266        267        268        269        270 
0.09222958 0.14332286 0.20421792 0.17985962 0.13832621 0.18398801 0.10686240 0.10759141 0.10474438 0.19745436 
       271        272        273        274        275        276        277        278        279        280 
0.10294964 0.13445375 0.08007971 0.19964103 0.13555476 0.11293836 0.08441940 0.09132494 0.15931492 0.09549452 
       281        282        283        284        285        286        287        288        289        290 
0.04689911 0.07964193 0.25727235 0.19714727 0.17865725 0.11933680 0.13403291 0.09894282 0.07294047 0.09965140 
       291        292        293        294        295        296        297        298        299        300 
0.08053305 0.07753199 0.07365116 0.11584445 0.11880741 0.06966775 0.03490652 0.10442168 0.17754859 0.13482291 
       301        302        303        304        305        306        307        308        309        310 
0.08102286 0.02811921 0.11492334 0.07286621 0.09130368 0.16121982 0.20736632 0.23139600 0.20897582 0.13900016 
       311        312        313        314        315        316        317        318        319        320 
0.27074758 0.12733060 0.21405596 0.16368191 0.12909967 0.17116658 0.02739219 0.07095957 0.12820819 0.32455471 
       321        322        323        324        325        326        327        328        329        330 
0.09456258 0.15435940 0.08363104 0.12261595 0.16985193 0.02383111 0.08254139 0.09522466 0.02051712 0.12208424 
       331        332        333        334        335        336        337        338        339 
0.04193772 0.07898161 0.15385044 0.11164899 0.26290762 0.12920354 0.12176076 0.07927356 0.33249386 

> #Extraer estados actuales
> G_trait_vector <- setNames(G_trait2$G, rownames(G_trait2))

> print(G_trait_vector)
                     AGUA_FRIA_ALTA                      AGUA_FRIA_BAJA                             ALCONES 
                       4.144869e-02                        5.494168e-03                        2.962227e-01 
              ALGARROBAL_Y_DESPENSA              ALGARROBO_DE_HORNILLOS               ALHUEMILLA_LAS_PALMAS 
                       0.000000e+00                        0.000000e+00                        0.000000e+00 
           ALVAREZ_DE_VALLE_HERMOSO                 ANGOSTURA_DE_GALVEZ                            ATELCURA 
                       3.226121e-01                        1.828829e-01                        0.000000e+00 
                          ATUHUAICO                             BARRAZA                     BLAS_Y_BULRREME 
                       2.768192e-01                        3.401253e-01                        2.024014e-01 
            BUENOS_AIRES_DE_PUNILLA                        CABRA_CORRAL                     CALDERA_Y_DAMAS 
                       3.515916e-01                        9.959142e-02                        2.270210e-02 
                        CANELA_ALTA                         CANELA_BAJA                    CANELILLA_CANELA 
                       5.515873e-02                        1.126470e-01                        4.451477e-02 
                   CANELILLA_OVALLE                             CARCAMO          CARRIZAL_Y_LAGUNA_DE_SERON 
                       4.900130e-01                        0.000000e+00                        3.833333e-02 
          CARRIZO,_MENDOZA_Y_ROMERO                   CASTILLO_MAL_PASO                        CERRO_BLANCO 
                       1.998299e-02                        2.532922e-01                        2.260451e-01 
                      CERRO_GIGANTE                         CHACARILLAS                            CHALINGA 
                       0.000000e+00                        4.002288e-01                        1.046479e-01 
                         CHANCHOQUI                      CHAPE_Y_CHACAY                             CHELLES 
                       0.000000e+00                        4.470062e-01                        2.385417e-01 
                 CHILECITO_Y_CHUAPA                   COIPO_Y_CUYUNCAVI                           COLLIGUAY 
                       1.006776e-01                        0.000000e+00                        6.251737e-02 
             CORDILLERA_DE_CARRIZAL                        CUARTO_CAJON                   CUESTA_EL_MANZANO 
                       8.521303e-02                        1.148325e-01                        2.340984e-02 
                             CUZCUZ                    DAIN_Y_CORTADERA                            DE_ARAYA 
                       0.000000e+00                        7.991106e-02                        4.440892e-16 
                          DE_ORREGO                     DIAZ_Y_OCARANZA                            DOS_RIOS 
                       0.000000e+00                        8.112965e-02                        0.000000e+00 
                        EL_ALMENDRO                            EL_ALTAR                            EL_ATAJO 
                       0.000000e+00                        7.791460e-02                        2.772727e-01 
                          EL_CHACAY                           EL_CUYANO                       EL_DIVISADERO 
                       2.588076e-01                        4.523810e-02                        1.419874e-01 
                         EL_DURAZNO                          EL_ESPINAL                           EL_ESPINO 
                       6.508749e-02                        2.813552e-01                        6.634210e-02 
                          EL_MACANO                            EL_OLIVO                           EL_PANGUE 
                       2.897182e-01                        2.081448e-01                        0.000000e+00 
               EL_PERAL_OJO_DE_AGUA                     EL_POTRERO_ALTO             EL_POTRERO_DE_HUATULAME 
                       4.736842e-02                        0.000000e+00                        5.039138e-01 
                         EL_ROMERAL                             EL_TOME                      ESTERO_DERECHO 
                       1.929939e-01                        2.666667e-01                        1.262208e-02 
            FERNANDEZ_ANGEL_Y_OTROS                   FERNANDEZ_Y_VELIZ                    FERNANDO_ALVAREZ 
                       0.000000e+00                        1.343525e-01                        3.734033e-01 
                  FLORES_Y_SAAVEDRA                       FUNDIDA_NORTE                         FUNDIDA_SUR 
                       2.464616e-01                        1.468587e-01                        3.118280e-02 
                       GUALLIGUAICA                   HIGUERITAS_UNIDAS                           HUAMPULLA 
                       0.000000e+00                        1.152439e-01                        2.983539e-01 
                              HUANA               HUAPILLAS_MOLLAQUITAS                       HUASCOALTINOS 
                       1.206576e-01                        0.000000e+00                        3.816681e-03 
                      HUENTELAUQUEN                     HUINCHIGUALLEGO                       INGA_PICHASCA 
                       1.658951e-01                        0.000000e+00                        2.240729e-01 
                        JARA_O_LAJA                    JARILLA_Y_AZOGUE                     JIMENEZ_Y_TAPIA 
                       1.281260e-01                        0.000000e+00                        3.755501e-02 
                       LAGUNA_VERDE   LAGUNILLAS_GALLEGUILLOS_DEL_VALLE                       LAS_BARRANCAS 
                       0.000000e+00                        2.305455e-01                        2.435897e-02 
                         LAS_BATEAS                          LAS_CARDAS                           LAS_DAMAS 
                       0.000000e+00                        1.312726e-01                        4.523810e-02 
                       LAS_MINILLAS                         LAS_PAREDES                  LAS_ROJAS_DE_CUTUN 
                       0.000000e+00                        0.000000e+00                        9.063804e-02 
                          LAS_TAZAS              LAS_TRANCAS_DE_PUCLARO                           LA_CALERA 
                       0.000000e+00                        5.228758e-02                        5.239689e-01 
                         LA_CAPILLA                           LA_CEBADA                         LA_CISTERNA 
                       0.000000e+00                        3.081592e-01                        1.514423e-02 
                           LA_COIPA LA_COLORADA_DE_AGUILERA_Y_SARMIENTO                        LA_HERRADURA 
                       5.996988e-01                        1.734007e-01                        7.105427e-15 
                          LA_HOYADA                            LA_LEONA                           LA_ORTIGA 
                       4.202552e-01                        0.000000e+00                        0.000000e+00 
                           LA_PLATA                          LA_POLVADA                          LA_SAUCERA 
                       0.000000e+00                        7.105427e-15                        5.669599e-02 
                       LA_TRANQUITA                         LA_VERDIONA                           LITIPAMPA 
                       3.776224e-01                        5.364409e-01                        0.000000e+00 
                      LORENZO_ARAYA          LORENZO_PERALTA_DE_PUNILLA                       LOS_ALGODONES 
                       0.000000e+00                        4.329004e-02                        0.000000e+00 
                        LOS_ANGELES                       LOS_CERRILLOS                          LOS_CHOROS 
                       4.736842e-02                        0.000000e+00                        2.780468e-01 
                       LOS_CLONQUIS            LOS_HOYOS_Y_EL_EMPEDRADO                       LOS_LAVADEROS 
                       2.282197e-01                        3.325123e-02                        2.521008e-01 
                       LOS_MAITENES               LOS_MAITENES_DE_SERON                         LOS_MORALES 
                       4.421296e-01                        3.587435e-01                        3.170412e-01 
                          LOS_MOZOS                           LOS_POZOS                          LOS_TAPIAS 
                       1.715686e-01                        2.733333e-01                        2.076923e-01 
                          LOS_TOMES                          LOS_TRIGOS                       MAJADA_BLANCA 
                       0.000000e+00                        2.245872e-01                        0.000000e+00 
                          MANQUEHUA                   MAQUI_LOS_PALQUIS                             MIALQUI 
                       2.176690e-01                        1.946247e-01                        1.196490e-01 
                       MINCHA_NORTE                          MINCHA_SUR                        MONTE_PATRIA 
                       0.000000e+00                        7.574868e-03                        2.973456e-01 
                             MOVILO                     OLLA_DE_CALDERA                               ORURO 
                       6.428571e-02                        1.382029e-01                        3.430283e-01 
                         PEJERREYES                     PIEDRAS_BLANCAS                         PIEDRA_LISA 
                       0.000000e+00                        0.000000e+00                        2.852050e-02 
                    POTRERILLO_ALTO                        PULPICA_ALTO                        PULPICA_BAJO 
                       5.364205e-01                        0.000000e+00                        0.000000e+00 
                          PUNITAQUI            QUEBRADA_DE_COLLIGUACITO   QUEBRADA_DE_PAIHUANO_Y_SAN_ANDRES 
                       1.838879e-01                        0.000000e+00                        0.000000e+00 
                  QUEBRADA_DE_TALCA                QUEBRADA_DE_TULAHUEN                      QUEBRADA_HONDA 
                       2.437296e-01                        0.000000e+00                        0.000000e+00 
              QUEBRADA_LAS_MINILLAS               QUEBRADA_LAS_MOLLACAS                   QUEBRADA_LA_ARENA 
                       2.948276e-01                        0.000000e+00                        0.000000e+00 
                 QUEBRADA_LOS_LOROS                          QUITALLACO                           RAMADILLA 
                       3.311688e-01                        3.833333e-02                        3.485839e-01 
                              RAPEL                          RAPELCILLO              RINCONADA_DE_PUNITAQUI 
                       2.335304e-01                        0.000000e+00                        3.198819e-01 
                       RIO_COLORADO                        ROMERALCILLO                              SALALA 
                       0.000000e+00                        2.833481e-01                        1.243924e-01 
                         SAN_ISIDRO                         SAN_LORENZO                               SOCOS 
                       0.000000e+00                        5.729896e-02                        0.000000e+00 
                            TOTORAL                         TOTORALILLO                         TUNGA_NORTE 
                       0.000000e+00                        4.009553e-01                        5.499901e-02 
                          TUNGA_SUR                    UCHUMI-DIAGUITAS                          VADO_HONDO 
                       1.466831e-01                        0.000000e+00                        9.492419e-02 
                VALDIVIA_DE_PUNILLA                VALLECITO_Y_RIO_SECO                            VARILLAR 
                       2.289831e-01                        0.000000e+00                        0.000000e+00 
                            VIVANCO                          YERBA_LOCA 
                       4.736842e-02                        0.000000e+00 

> #Crear un data.frame
> result_list <- list() 

> # Iterar sobre cada nodo terminal y su ruta desde la raíz
> for (i in seq_along(paths)) {
+   # Nodo terminal y ruta de nodos desde la raíz hasta el nodo terminal
+   tip <- terminal_nodes[i]
+   path <- paths[[i]]
+   
+   # Obtener el cluster del nodo terminal desde clusters_table
+   cluster_row <-clusters_table[clusters_table$tip.label==tip,]
+   cluster <- ifelse(nrow(cluster_row)>0,cluster_row$cluster,NA)
+   # Obtener el valor de M para el nodo terminal desde M_trait
+   M_value_terminal <- ifelse(tip %in% names(M_trait_vector),M_trait_vector[tip],NA)
+   if(!is.na(cluster)&&!is.na(G_value_terminal)){
+     result_list[[i]] <- data.frame(
+       Node = path[length(path)],   # Último nodo en la ruta, que es el terminal
+       Cluster = cluster,
+       G_value = G_value_terminal)
+   for(node in head(path,-1)){
+     G_value<-ifelse(as.character(node)%in% names(G_anc_states),
+                     G_anc_states[as.character(node)],NA)
+     if(!is.na(cluster)&&!is.na(G_value)) {
+       result_list[[length(result_list)+1]]<-data.frame(
+         Node =node,
+         Cluster = cluster,
+         G_value = G_value
+         )
+       }
+     }  
+   }
+ }

>   # Agregar cada nodo ancestral en el path (excluyendo el terminal)
>   for (node in head(path, -1)) {  # head(path, -1) excluye el último nodo terminal
+     # Asignar el valor de G para el nodo ancestral
+     G_value <- ifelse(as.character(node) %in% names(G_anc_states), G_anc_states[as.character(node)], NA)
+     
+     # Agregar el nodo ancestral, cluster y valor de G al resultado
+     result_list <- append(result_list, list(data.frame(
+       Node = node,
+       Cluster = cluster,  # Asignamos el mismo cluster del terminal
+       G_value = G_value
+     )))
+   }

> # Combinar todos los dataframes en uno solo
> result_df_G <- do.call(rbind, result_list)

> # Para nodos ancestrales, asegurarse de asignar clusters
> result_df_G <- result_df_G[!duplicated(result_df_G$Node), ]  # Eliminar filas duplicadas de cada nodo

> # Ver el dataframe resultante
> row.names(result_df_G)<-NULL

> print(result_df_G)
   Node Cluster    G_value
1    11       2 0.28135525
2   171       2 0.11811683
3   172       2 0.11840475
4   173       2 0.12798707
5   175       2 0.12809278
6   177       2 0.12796359
7    17       2 0.28135525
8   180       2 0.12211043
9    19       1 0.28135525
10  187       2 0.12036829
11  188       2 0.11887525
12  190       2 0.11967715
13   23       2 0.28135525
14  200       2 0.12427687
15  204       2 0.12426975
16  205       2 0.12503983
17  212       2 0.12549914
18  214       2 0.12959613
19  224       2 0.13291510
20  227       2 0.14051238
21  229       2 0.16380318
22  245       2 0.19843525
23  179       2 0.12741943
24  185       2 0.12156942
25   44       3 0.28135525
26   48       3 0.28135525
27   50       1 0.28135525
28  226       2 0.12897426
29  236       2 0.12854936
30  240       2 0.12361268
31  247       2 0.11457514
32  261       2 0.09222958
33  278       2 0.09132494
34  280       2 0.09549452
35  290       2 0.09965140
36   67       3 0.28135525
37  191       1 0.12128591
38  203       1 0.12463498
39   73       2 0.28135525
40  208       1 0.13262767
41  219       1 0.13426162
42  221       1 0.13459785
43  228       1 0.13998903
44  231       1 0.15049419
45   79       2 0.28135525
46  253       1 0.15434606
47   90       3 0.28135525
48  230       2 0.13977742
49  233       2 0.11429204
50  255       2 0.10661872
51  267       2 0.10686240
52  276       2 0.11293836
53  294       2 0.11584445
54  300       2 0.13482291
55  315       2 0.12909967
56  319       2 0.12820819
57  124       1 0.28135525
58  129       2 0.28135525
59  277       3 0.08441940
60  282       3 0.07964193
61  291       3 0.08053305
62  301       3 0.08102286
63  305       3 0.09130368
64  321       3 0.09456258
65  328       3 0.09522466
66  139       2 0.28135525
67  153       3 0.28135525
68  246       3 0.17782179
69  264       3 0.17985962
70  206       1 0.12582687
71  220       1 0.14765987
72  189       3 0.11491738
73  195       3 0.09866755
74  209       3 0.05922463
75  249       3 0.03377860
76  242       2 0.15007197
77  252       2 0.14395525
78  262       2 0.14332286
79  265       2 0.13832621
80  285       2 0.17865725
81  199       3 0.11975730
82  266       1 0.18398801
83  274       1 0.19964103
84  284       1 0.19714727
85  299       1 0.17754859
86  316       1 0.17116658
87  322       1 0.15435940
88  232       2 0.16255854
89  211      NA 0.12106325
90  256      NA 0.11088145

> ################################## M ###########################################
> paths
[[1]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 249 302 317   1

[[2]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 249 302 317 329   2

[[3]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 241 313   3

[[4]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 291 301
[28] 304   4

[[5]]
[1] 171 172 173 175 177 179 181 182   5

[[6]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 256 268 298 312 332   6

[[7]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 199 207 243 248 269 303 324   7

[[8]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 192 197   8

[[9]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 199 207 243 248 269 303   9

[[10]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 213 279  10

[[11]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 245  11

[[12]]
[1] 171 172 173 175 176 194 216  12

[[13]]
[1] 171 172 173 175 177 178 183  13

[[14]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 250 297 331  14

[[15]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 196 202 218 234  15

[[16]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 223 251 273  16

[[17]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 278 280 290  17

[[18]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 223 251 273  18

[[19]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253  19

[[20]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 306 334  20

[[21]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 271 288 293 327
[28] 336 338  21

[[22]]
[1] 171 172 173 175 176 193 217  22

[[23]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 294 300 315
[28] 319  23

[[24]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 306  24

[[25]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 271 288 293 326
[28]  25

[[26]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264 266 274 283  26

[[27]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 278 280 290  27

[[28]]
[1] 171 172 173 175 176 193 217  28

[[29]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 192 198 238  29

[[30]]
[1] 171 172 173 174 210 237  30

[[31]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 291 301
[28] 305  31

[[32]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 241 313  32

[[33]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267  33

[[34]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 294 300 315
[28] 318  34

[[35]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 256 268  35

[[36]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 196 202 218  36

[[37]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 223  37

[[38]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 252 262 265 285 310 330
[28]  38

[[39]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 235 258 289  39

[[40]]
[1] 171  40

[[41]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 291  41

[[42]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 278  42

[[43]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195  43

[[44]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 291 301
[28] 305 321 328  44

[[45]]
[1] 171 172 173 175 176 193  45

[[46]]
[1] 171 172 173 175 176 194 215  46

[[47]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264 266  47

[[48]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264  48

[[49]]
[1] 171 172 173 175 176 194 216  49

[[50]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 220  50

[[51]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 199 207 243 248 269 303 324  51

[[52]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 235 258  52

[[53]]
[1] 171 172 173 175 177 178 184  53

[[54]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 220 272 295  54

[[55]]
[1] 171 172 173 175 177 179 180  55

[[56]]
[1] 171 172 173 175 177 178 184 222  56

[[57]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 256 268 298 312 333 335  57

[[58]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 306 334 337  58

[[59]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 220 272  59

[[60]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 252 262 265 286  60

[[61]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 199 207  61

[[62]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 278 280  62

[[63]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 307 309 311  63

[[64]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 232  64

[[65]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 252 262 265 285 310  65

[[66]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 252 262 265 285 310 330
[28]  66

[[67]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 249  67

[[68]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264 266 274 284 299  68

[[69]]
[1] 171 172 173 175 176 194 215  69

[[70]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 291 301
[28] 305 321 328  70

[[71]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 271 288 293 326
[28]  71

[[72]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206  72

[[73]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 252 262  73

[[74]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 196 201 244  74

[[75]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 235 257  75

[[76]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 213 279  76

[[77]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 213  77

[[78]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264 266 274 284 299 316
[28] 322  78

[[79]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 252 262 265 285  79

[[80]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 250  80

[[81]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 256 268 298 312 333 335  81

[[82]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 281  82

[[83]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 241  83

[[84]]
[1] 171 172 173 175 177 179 181 182  84

[[85]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 307 308  85

[[86]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208  86

[[87]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 250 297  87

[[88]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 292 296
[28]  88

[[89]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 271  89

[[90]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 199  90

[[91]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 306 334 337  91

[[92]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 239 320 339  92

[[93]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 199 207 243  93

[[94]]
 [1] 171 172 173 175 177 179 180 185 186 225  94

[[95]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 196 202  95

[[96]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 249 302 317 329  96

[[97]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 254  97

[[98]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 307 309  98

[[99]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 220 272 295  99

[[100]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 100

[[101]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 250 297 331 101

[[102]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 192 197 102

[[103]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 103

[[104]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 192 198 238 275 104

[[105]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 271 288 293 327
[28] 336 338 105

[[106]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 256 268 298 106

[[107]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 270 107

[[108]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 291 301
[28] 304 323 108

[[109]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 260 109

[[110]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 254 110

[[111]]
 [1] 171 172 173 175 177 179 180 185 186 111

[[112]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 112

[[113]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 294 300 315
[28] 318 113

[[114]]
[1] 171 172 173 174 210 237 114

[[115]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 270 115

[[116]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 271 288 293 327
[28] 336 116

[[117]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264 266 274 283 117

[[118]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 294 300 314
[28] 325 118

[[119]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 307 309 311 119

[[120]]
[1] 171 172 173 175 177 179 181 120

[[121]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 235 257 121

[[122]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 196 201 122

[[123]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 199 207 243 248 269 123

[[124]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264 266 274 284 299 316
[28] 322 124

[[125]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 291 301
[28] 304 323 125

[[126]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 291 301
[28] 305 321 126

[[127]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 195 209 249 302 127

[[128]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 192 198 238 275 128

[[129]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 232 129

[[130]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 130

[[131]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 196 202 218 234 131

[[132]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 260 287 132

[[133]]
 [1] 171 172 173 175 177 179 180 185 187 133

[[134]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 252 134

[[135]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 271 288 135

[[136]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 263 307 308 136

[[137]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 137

[[138]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 281 138

[[139]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264 266 274 284 299 316
[28] 139

[[140]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 239 140

[[141]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 253 259 271 288 293 327
[28] 141

[[142]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 142

[[143]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 235 258 289 143

[[144]]
[1] 171 172 173 174 144

[[145]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 256 268 298 312 332 145

[[146]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 239 320 339 146

[[147]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 231 242 252 262 265 286 147

[[148]]
[1] 171 172 173 175 177 178 183 148

[[149]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 260 287 149

[[150]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 239 320 150

[[151]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 294 300 314
[28] 325 151

[[152]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 294 300 315
[28] 319 152

[[153]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 246 264 266 274 284 153

[[154]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 256 268 298 312 333 154

[[155]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 294 300 314
[28] 155

[[156]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 229 245 156

[[157]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 199 207 243 248 157

[[158]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 227 230 233 255 267 276 294 158

[[159]]
[1] 171 172 159

[[160]]
 [1] 171 172 173 175 177 179 180 185 186 225 160

[[161]]
[1] 171 172 173 174 210 161

[[162]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 162

[[163]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 192 198 163

[[164]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 203 206 208 219 221 228 164

[[165]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 292 165

[[166]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 223 251 166

[[167]]
[1] 171 172 173 175 177 178 184 222 167

[[168]]
 [1] 171 172 173 175 177 179 180 185 187 188 189 196 201 244 168

[[169]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 212 214 224 226 236 240 247 261 277 282 292 296
[28] 169

[[170]]
 [1] 171 172 173 175 177 179 180 185 187 188 190 191 200 204 205 211 256 170


> # Extraer los estados ancestrales
> M_anc_states <- mvt$anc$ace
❌ Error in script: scripts_fv/OBJETIVO_5.5.GráficoG_M.R

### [Step 17/19] Running: scripts_fv/OBJETIVO_5.6.Clades_vs_Ancv2.R ###


> ##########################################################################################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth inheritance and land tenure norms in agropastoralist communities.############
> ##########################################################################################################################################################
> #### OBJETIVO 5 ####
> ### Part 6 ###
> ### To plot over tips of the resulting trees the estimated values of each trait, and compute the most likely values for each at the internal nodes ###
> 
> 
> ### Extraer valores de estados ancestrales y numero de clados acumulados
> #Librerías
> library(ape)

> library(dplyr)

> library(ggplot2)

> library(phytools)

> ################################################################################
> ######################## Comunidades muestreadas ###############################
> ################################################################################
> 
> # Cluster
> df_tree <- as.data.frame(cophenetic.phylo(consensus_tree))

> df_tree <- na.omit(df_tree)

> df_tree <- as.data.frame(lapply(df_tree, as.numeric))

> df_tree_scaled <- scale(df_tree)

> df_tree_scaled_numeric <- as.data.frame(df_tree_scaled)  # Asegúrate de que sea un data frame de valores numéricos

> kmeans_result <-kmeans(df_tree_scaled_numeric, centers = 3, iter.max = 100, nstart = 100)

> Cluster <- as.factor(c(kmeans_result$cluster))

> names(Cluster) <- colnames(kmeans_result$centers)

> # Crear una tabla de clusters
> clusters_table <- data.frame(tip.label = names(Cluster), cluster = Cluster)

> clusters_table
                                    tip.label cluster
EL_DIVISADERO                   EL_DIVISADERO       3
EL_ALTAR                             EL_ALTAR       3
MANQUEHUA                           MANQUEHUA       1
PUNITAQUI                           PUNITAQUI       2
RINCONADA_DE_PUNITAQUI RINCONADA_DE_PUNITAQUI       3
BARRAZA                               BARRAZA       2
CANELILLA_OVALLE             CANELILLA_OVALLE       1
CANELA_BAJA                       CANELA_BAJA       2
LA_CALERA                           LA_CALERA       2
EL_ESPINAL                         EL_ESPINAL       1
GUALLIGUAICA                     GUALLIGUAICA       3
HUENTELAUQUEN                   HUENTELAUQUEN       2
CASTILLO_MAL_PASO           CASTILLO_MAL_PASO       2
MONTE_PATRIA                     MONTE_PATRIA       2
LA_POLVADA                         LA_POLVADA       3

> ################################## S ###########################################
> # Tree
> S_tree <- read.tree(text = "(((((((GUALLIGUAICA:0.127973,LA_POLVADA:0.127973)[&CI={0.221892,0.387561},ancstate={0.304726}]:0.123261,EL_DIVISADERO:0.251235)[&CI={0.211899,0.418322},ancstate={0.315111}]:0.142584,RINCONADA_DE_PUNITAQUI:0.393819)[&CI={0.173239,0.40556},ancstate={0.289399}]:0.077413,EL_ALTAR:0.471233)[&CI={0.168678,0.414167},ancstate={0.291423}]:0.163097,CANELILLA_OVALLE:0.634329)[&CI={0.142831,0.417768},ancstate={0.280299}]:0.084733,MANQUEHUA:0.719062)[&CI={0.121324,0.412715},ancstate={0.26702}]:0.280938,((((((CANELA_BAJA:0.169277,CASTILLO_MAL_PASO:0.169277)[&CI={0.105892,0.25871},ancstate={0.182301}]:0.011386,PUNITAQUI:0.180663)[&CI={0.106218,0.258429},ancstate={0.182324}]:0.02304,MONTE_PATRIA:0.203702)[&CI={0.104629,0.267465},ancstate={0.186047}]:0.125087,BARRAZA:0.328789)[&CI={0.109971,0.322882},ancstate={0.216427}]:0.069566,LA_CALERA:0.398355)[&CI={0.101371,0.336418},ancstate={0.218895}]:0.215934,HUENTELAUQUEN:0.614289)[&CI={0.086222,0.386008},ancstate={0.236115}]:0.385711,EL_ESPINAL:1)[&CI={0.099883,0.43725},ancstate={0.268567}];")

> #TODO Found more than one class "phylo" in cache; using the first, from namespace 'TreeTools'
> #Also defined by ‘tidytree’
> 
> par(mar=c(1,1,1,1))

> plot(S_tree,font=2); nodelabels(bg="white",cex =0.5)

> terminal_nodes <-S_tree$tip.label

> terminal_nodes
 [1] "GUALLIGUAICA"           "LA_POLVADA"             "EL_DIVISADERO"          "RINCONADA_DE_PUNITAQUI"
 [5] "EL_ALTAR"               "CANELILLA_OVALLE"       "MANQUEHUA"              "CANELA_BAJA"           
 [9] "CASTILLO_MAL_PASO"      "PUNITAQUI"              "MONTE_PATRIA"           "BARRAZA"               
[13] "LA_CALERA"              "HUENTELAUQUEN"          "EL_ESPINAL"            

> #ancestral_nodes <- Ancestors(S_tree,1:15,"all")
> paths <- nodepath(S_tree,1:15)

> paths
[[1]]
[1] 16 17 18 19 20 21 22  1

[[2]]
[1] 16 17 18 19 20 21 22  2

[[3]]
[1] 16 17 18 19 20 21  3

[[4]]
[1] 16 17 18 19 20  4

[[5]]
[1] 16 17 18 19  5

[[6]]
[1] 16 17 18  6

[[7]]
[1] 16 17  7

[[8]]
[1] 16 23 24 25 26 27 28  8

[[9]]
[1] 16 23 24 25 26 27 28  9

[[10]]
[1] 16 23 24 25 26 27 10

[[11]]
[1] 16 23 24 25 26 11

[[12]]
[1] 16 23 24 25 12

[[13]]
[1] 16 23 24 13

[[14]]
[1] 16 23 14

[[15]]
[1] 16 15


> # Extraer los estados ancestrales
> S_anc_states <- svc$anc$ace

> S_anc_states
       16        17        18        19        20        21        22        23        24        25        26 
0.2753403 0.2753403 0.2736035 0.2813082 0.2934981 0.2930672 0.3034678 0.3006188 0.2235413 0.2233478 0.2222362 
       27        28        29 
0.1827274 0.1761747 0.1761747 

> #Extraer estados actuales
> S_trait_vector <- setNames(S_trait$S, rownames(S_trait))

> print(S_trait_vector)
               BARRAZA            CANELA_BAJA       CANELILLA_OVALLE      CASTILLO_MAL_PASO 
             0.2846154              0.1513067              0.3364486              0.2129630 
              EL_ALTAR          EL_DIVISADERO             EL_ESPINAL           GUALLIGUAICA 
             0.3358779              0.3815789              0.3582090              0.4516129 
         HUENTELAUQUEN              LA_CALERA             LA_POLVADA              MANQUEHUA 
             0.2334218              0.2012579              0.1470588              0.1503680 
          MONTE_PATRIA              PUNITAQUI RINCONADA_DE_PUNITAQUI 
             0.1694915              0.1534840              0.2080925 

> #Crear un data.frame
> result_list <- list() 

> # Iterar sobre cada nodo terminal y su ruta desde la raíz
> for (i in seq_along(paths)) {
+   # Nodo terminal y ruta de nodos desde la raíz hasta el nodo terminal
+   tip <- terminal_nodes[i]
+   path <- paths[[i]]
+   
+   # Obtener el cluster del nodo terminal desde clusters_table
+   cluster <- clusters_table[clusters_table$tip.label == tip, "cluster"]
+   
+   # Obtener el valor de S para el nodo terminal desde S_trait
+   S_value_terminal <- S_trait_vector[tip]
+   
+   # Agregar el nodo terminal al dataframe con su valor de S y su cluster
+   result_list <- append(result_list, list(data.frame(
+     Node = path[length(path)],   # Último nodo en la ruta, que es el terminal
+     Cluster = cluster,
+     S_value = S_value_terminal
+   )))
+   
+   # Agregar cada nodo ancestral en el path (excluyendo el terminal)
+   for (node in head(path, -1)) {  # head(path, -1) excluye el último nodo terminal
+     # Asignar el valor de S para el nodo ancestral
+     S_value <- ifelse(as.character(node) %in% names(S_anc_states), S_anc_states[as.character(node)], NA)
+     
+     # Agregar el nodo ancestral, cluster y valor de S al resultado
+     result_list <- append(result_list, list(data.frame(
+       Node = node,
+       Cluster = cluster,  # Asignamos el mismo cluster del terminal
+       S_value = S_value
+     )))
+   }
+ }

> # Combinar todos los dataframes en uno solo
> result_df_S <- do.call(rbind, result_list)

> result_df_S <- result_df_S[!duplicated(result_df_S$Node), ]  # Eliminar filas duplicadas de cada nodo

> row.names(result_df_S)<-NULL

> print(result_df_S)
   Node Cluster   S_value
1     1       3 0.4516129
2    16       3 0.2753403
3    17       3 0.2753403
4    18       3 0.2736035
5    19       3 0.2813082
6    20       3 0.2934981
7    21       3 0.2930672
8    22       3 0.3034678
9     2       3 0.1470588
10    3       3 0.3815789
11    4       3 0.2080925
12    5       3 0.3358779
13    6       1 0.3364486
14    7       1 0.1503680
15    8       2 0.1513067
16   23       2 0.3006188
17   24       2 0.2235413
18   25       2 0.2233478
19   26       2 0.2222362
20   27       2 0.1827274
21   28       2 0.1761747
22    9       2 0.2129630
23   10       2 0.1534840
24   11       2 0.1694915
25   12       2 0.2846154
26   13       2 0.2012579
27   14       2 0.2334218
28   15       1 0.3582090

> # Expansión de result_df_S basado en paths (distancia desde la raíz)
> expanded_df <- do.call(rbind, lapply(1:length(paths), function(i) {
+   path <- paths[[i]]
+   # Obtener el cluster y valores de S para cada nodo en el path
+   cluster <- result_df_S$Cluster[match(path[length(path)], result_df_S$Node)]
+   S_values <- result_df_S$S_value[match(path, result_df_S$Node)]
+   # Crear una columna de pasos desde la raíz (distancia en pasos desde el nodo 16)
+   steps_from_root <- seq(0, length(path)-1)
+   # Crear un dataframe temporal para el path
+   data.frame(Step = steps_from_root, Cluster = cluster, S_value = S_values, Terminal_Node = path[length(path)])
+ }))

> max_steps <- max((expanded_df$Step))

> expanded_df_extended <- do.call(rbind, lapply(split(expanded_df, expanded_df$Terminal_Node), function(df) {
+   # Calcular valores adicionales de S
+   last_step <- max(df$Step)
+   last_value <-tail(df$S_value, 1)
+   cluster <- unique(df$Cluster)
+   
+   # Generar filas adicionales hasta el máximo de pasos deseado
+   additional_steps <- data.frame(
+     Step = seq(last_step, max_steps),
+     Cluster = cluster,
+     S_value = last_value,  # Usamos el último valor
+     Terminal_Node = df$Terminal_Node[1]
+   )
+   
+   # Combinar el dataframe original con los pasos adicionales
+   rbind(df, additional_steps)
+ }))

> # Graficar los valores de S a lo largo del camino de nodos desde la raíz para cada cluster
> ggplot(expanded_df_extended, aes(x = Step, y = S_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
+   geom_line(size = 1) +
+   geom_point(size = 2) +  # Añadir puntos en cada nodo
+   geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
+   labs(
+     title = "Valores de S a lo largo de los nodos",
+     x = "Paso desde la raíz",
+     y = "Valor de S",
+     color = "Cluster"
+   ) +
+   theme_minimal() +
+   scale_color_manual(values = c("blue", "green", "red"))  # Colores para cada cluster
`geom_smooth()` using formula = 'y ~ x'

> png("Figures/S_TRAIT.png",width = 2000, height = 750, res = 300)

> ggplot(expanded_df_extended, aes(x = Step, y = S_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
+   geom_line(size = 1) +
+   geom_point(size = 2) +  # Añadir puntos en cada nodo
+   geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
+   labs(
+     title = "Valores de S a lo largo de los nodos",
+     x = "Paso desde la raíz",
+     y = "Valor de S",
+     color = "Cluster"
+   ) +
+   theme_minimal() +
+   scale_color_manual(values = c("blue", "green", "red"))  # Colores para cada cluster
`geom_smooth()` using formula = 'y ~ x'

> dev.off()
RStudioGD 
        2 

> ################################## R ###########################################
> # Cluster
> #clusters_table
> #Tree
> #R_tree <- read.tree(text = "(((((((GUALLIGUAICA:0.127973,LA_POLVADA:0.127973)[&CI={0.852732,1.124395},ancstate={0.988563}]:0.123261,EL_DIVISADERO:0.251235)[&CI={0.797287,1.135777},ancstate={0.966532}]:0.142584,RINCONADA_DE_PUNITAQUI:0.393819)[&CI={0.798782,1.179741},ancstate={0.989261}]:0.077413,EL_ALTAR:0.471233)[&CI={0.75163,1.15418},ancstate={0.952905}]:0.163097,CANELILLA_OVALLE:0.634329)[&CI={0.618735,1.069575},ancstate={0.844155}]:0.084733,MANQUEHUA:0.719062)[&CI={0.586604,1.064424},ancstate={0.825514}]:0.280938,((((((CANELA_BAJA:0.169277,CASTILLO_MAL_PASO:0.169277)[&CI={0.725941,0.976531},ancstate={0.851236}]:0.011386,PUNITAQUI:0.180663)[&CI={0.713754,0.963348},ancstate={0.838551}]:0.02304,MONTE_PATRIA:0.203702)[&CI={0.676076,0.943093},ancstate={0.809585}]:0.125087,BARRAZA:0.328789)[&CI={0.552073,0.901204},ancstate={0.726638}]:0.069566,LA_CALERA:0.398355)[&CI={0.496686,0.882114},ancstate={0.6894}]:0.215934,HUENTELAUQUEN:0.614289)[&CI={0.491837,0.983424},ancstate={0.73763}]:0.385711,EL_ESPINAL:1)[&CI={0.439061,0.992273},ancstate={0.715667}];")
> #TODO Found more than one class "phylo" in cache; using the first, from namespace 'TreeTools'
> #Also defined by ‘tidytree’ paths
> # Extraer los estados ancestrales
> #R_anc_states <- rvc$anc$ace
> #R_anc_states
> #Extraer estados actuales
> #R_trait_vector <- setNames(R_trait$R, rownames(R_trait))
> #print(R_trait_vector)
> 
> #Crear un data.frame
> #result_list <- list() 
> # Iterar sobre cada nodo terminal y su ruta desde la raíz
> #for (i in seq_along(paths)) {
>   # Nodo terminal y ruta de nodos desde la raíz hasta el nodo terminal
> #  tip <- terminal_nodes[i]
> #  path <- paths[[i]]
>   
>   # Obtener el cluster del nodo terminal desde clusters_table
> #  cluster <- clusters_table[clusters_table$tip.label == tip, "cluster"]
>   
>   # Obtener el valor de R para el nodo terminal desde R_trait
> #  R_value_terminal <- R_trait_vector[tip]
>   
>   # Agregar el nodo terminal al dataframe con su valor de R y su cluster
> #  result_list <- append(result_list, list(data.frame(
> #    Node = path[length(path)],   # Último nodo en la ruta, que es el terminal
> #    Cluster = cluster,
> #    R_value = R_value_terminal
> #  )))
>   
>   # Agregar cada nodo ancestral en el path (excluyendo el terminal)
> #  for (node in head(path, -1)) {  # head(path, -1) excluye el último nodo terminal
>     # Asignar el valor de R para el nodo ancestral
> #    R_value <- ifelse(as.character(node) %in% names(R_anc_states), R_anc_states[as.character(node)], NA)
>     
>     # Agregar el nodo ancestral, cluster y valor de R al resultado
> #    result_list <- append(result_list, list(data.frame(
> #      Node = node,
> #      Cluster = cluster,  # Asignamos el mismo cluster del terminal
> #      R_value = R_value
> #    )))
> #  }
> #}
> 
> # Combinar todos los dataframes en uno solo
> #result_df_R <- do.call(rbind, result_list)
> #result_df_R <- result_df_R[!duplicated(result_df_R$Node), ]  # Eliminar filas duplicadas de cada nodo
> #row.names(result_df_R)<-NULL
> #print(result_df_R)
> 
> # Expansión de result_df_R basado en paths (distancia desde la raíz)
> #expanded_df <- do.call(rbind, lapply(1:length(paths), function(i) {
> #  path <- paths[[i]]
>   # Obtener el cluster y valores de R para cada nodo en el path
> #  cluster <- result_df_R$Cluster[match(path[length(path)], result_df_R$Node)]
> #  R_values <- result_df_R$R_value[match(path, result_df_R$Node)]
>   # Crear una columna de pasos desde la raíz (distancia en pasos desde el nodo 16)
> #  steps_from_root <- seq(0, length(path)-1)
>   # Crear un dataframe temporal para el path
> #  data.frame(Step = steps_from_root, Cluster = cluster, R_value = R_values, Terminal_Node = path[length(path)])
> #}))
> #max_steps <- max((expanded_df$Step))
> #expanded_df_extended <- do.call(rbind, lapply(split(expanded_df, expanded_df$Terminal_Node), function(df) {
>   # Calcular valores adicionales de R
> #  last_step <- max(df$Step)
> #  last_value <-tail(df$R_value, 1)
> #  cluster <- unique(df$Cluster)
>   
>   # Generar filas adicionales hasta el máximo de pasos deseado
> #  additional_steps <- data.frame(
> #    Step = seq(last_step, max_steps),
> #    Cluster = cluster,
> #    R_value = last_value,  # Usamos el último valor
> #    Terminal_Node = df$Terminal_Node[1]
> #  )
>   
>   # Combinar el dataframe original con los pasos adicionales
> #  rbind(df, additional_steps)
> #}))
> 
> # Graficar los valores de M a lo largo del camino de nodos desde la raíz para cada cluster
> #ggplot(expanded_df_extended, aes(x = Step, y = R_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
> #  geom_line(size = 1) +
> #  geom_point(size = 2) +  # Añadir puntos en cada nodo
> #  geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
> #  labs(
> #    title = "Valores de R a lo largo de los nodos",
> #    x = "Paso desde la raíz",
> #    y = "Valor de R",
> #    color = "Cluster"
> #  ) +
> #  theme_minimal() +
> #  scale_color_manual(values = c("blue", "green", "red"))  # Colores para cada cluster
> 
> #png("Figures/R_TRAIT.png",width = 2000, height = 750, res = 300)
> #ggplot(expanded_df_extended, aes(x = Step, y = R_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
> #  geom_line(size = 1) +
> #  geom_point(size = 2) +  # Añadir puntos en cada nodo
> #  geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
> #  labs(
> #    title = "Valores de R a lo largo de los nodos",
> #    x = "Paso desde la raíz",
> #    y = "Valor de R",
> #    color = "Cluster"
> #  ) +
> #  theme_minimal() +
> #  scale_color_manual(values = c("blue", "green", "red"))  # Colores para cada cluster
> 
> #dev.off()
> ################################## A ###########################################
> # Cluster
> clusters_table
                                    tip.label cluster
EL_DIVISADERO                   EL_DIVISADERO       3
EL_ALTAR                             EL_ALTAR       3
MANQUEHUA                           MANQUEHUA       1
PUNITAQUI                           PUNITAQUI       2
RINCONADA_DE_PUNITAQUI RINCONADA_DE_PUNITAQUI       3
BARRAZA                               BARRAZA       2
CANELILLA_OVALLE             CANELILLA_OVALLE       1
CANELA_BAJA                       CANELA_BAJA       2
LA_CALERA                           LA_CALERA       2
EL_ESPINAL                         EL_ESPINAL       1
GUALLIGUAICA                     GUALLIGUAICA       3
HUENTELAUQUEN                   HUENTELAUQUEN       2
CASTILLO_MAL_PASO           CASTILLO_MAL_PASO       2
MONTE_PATRIA                     MONTE_PATRIA       2
LA_POLVADA                         LA_POLVADA       3

> # Tree
> A_tree <- read.tree(text = "(((((((GUALLIGUAICA:0.127973,LA_POLVADA:0.127973)[&CI={0.516337,0.577262},ancstate={0.546799}]:0.123261,EL_DIVISADERO:0.251235)[&CI={0.515608,0.59152},ancstate={0.553564}]:0.142584,RINCONADA_DE_PUNITAQUI:0.393819)[&CI={0.526669,0.612105},ancstate={0.569387}]:0.077413,EL_ALTAR:0.471233)[&CI={0.535683,0.625962},ancstate={0.580822}]:0.163097,CANELILLA_OVALLE:0.634329)[&CI={0.522888,0.623997},ancstate={0.573443}]:0.084733,MANQUEHUA:0.719062)[&CI={0.515228,0.622387},ancstate={0.568808}]:0.280938,((((((CANELA_BAJA:0.169277,CASTILLO_MAL_PASO:0.169277)[&CI={0.531959,0.588158},ancstate={0.560059}]:0.011386,PUNITAQUI:0.180663)[&CI={0.528932,0.584907},ancstate={0.556919}]:0.02304,MONTE_PATRIA:0.203702)[&CI={0.5208,0.580683},ancstate={0.550741}]:0.125087,BARRAZA:0.328789)[&CI={0.513111,0.591409},ancstate={0.55226}]:0.069566,LA_CALERA:0.398355)[&CI={0.506295,0.592733},ancstate={0.549514}]:0.215934,HUENTELAUQUEN:0.614289)[&CI={0.492251,0.602498},ancstate={0.547375}]:0.385711,EL_ESPINAL:1)[&CI={0.498775,0.622842},ancstate={0.560808}];")

> paths
[[1]]
[1] 16 17 18 19 20 21 22  1

[[2]]
[1] 16 17 18 19 20 21 22  2

[[3]]
[1] 16 17 18 19 20 21  3

[[4]]
[1] 16 17 18 19 20  4

[[5]]
[1] 16 17 18 19  5

[[6]]
[1] 16 17 18  6

[[7]]
[1] 16 17  7

[[8]]
[1] 16 23 24 25 26 27 28  8

[[9]]
[1] 16 23 24 25 26 27 28  9

[[10]]
[1] 16 23 24 25 26 27 10

[[11]]
[1] 16 23 24 25 26 11

[[12]]
[1] 16 23 24 25 12

[[13]]
[1] 16 23 24 13

[[14]]
[1] 16 23 14

[[15]]
[1] 16 15


> # Extraer los estados ancestrales
> A_anc_states <- avc$anc$ace

> A_anc_states
       16        17        18        19        20        21        22        23        24        25        26 
0.5643104 0.5643104 0.5688637 0.5715564 0.5784731 0.5653084 0.5594275 0.5482989 0.5439323 0.5440300 0.5467954 
       27        28        29 
0.5449305 0.5637844 0.5637844 

> #Extraer estados actuales
> A_trait_vector <- setNames(A_trait$A, rownames(A_trait))

> print(A_trait_vector)
               BARRAZA            CANELA_BAJA       CANELILLA_OVALLE      CASTILLO_MAL_PASO 
             0.5692308              0.6066025              0.5794393              0.5601852 
              EL_ALTAR          EL_DIVISADERO             EL_ESPINAL           GUALLIGUAICA 
             0.6717557              0.5394737              0.5671642              0.5645161 
         HUENTELAUQUEN              LA_CALERA             LA_POLVADA              MANQUEHUA 
             0.5198939              0.5377358              0.5220588              0.5499474 
          MONTE_PATRIA              PUNITAQUI RINCONADA_DE_PUNITAQUI 
             0.4936441              0.5555556              0.5549133 

> #Crear un data.frame
> result_list <- list() 

> # Iterar sobre cada nodo terminal y su ruta desde la raíz
> for (i in seq_along(paths)) {
+   # Nodo terminal y ruta de nodos desde la raíz hasta el nodo terminal
+   tip <- terminal_nodes[i]
+   path <- paths[[i]]
+   
+   # Obtener el cluster del nodo terminal desde clusters_table
+   cluster <- clusters_table[clusters_table$tip.label == tip, "cluster"]
+   
+   # Obtener el valor de S para el nodo terminal desde S_trait
+   A_value_terminal <- A_trait_vector[tip]
+   
+   # Agregar el nodo terminal al dataframe con su valor de S y su cluster
+   result_list <- append(result_list, list(data.frame(
+     Node = path[length(path)],   # Último nodo en la ruta, que es el terminal
+     Cluster = cluster,
+     A_value = A_value_terminal
+   )))
+   
+   # Agregar cada nodo ancestral en el path (excluyendo el terminal)
+   for (node in head(path, -1)) {  # head(path, -1) excluye el último nodo terminal
+     # Asignar el valor de S para el nodo ancestral
+     A_value <- ifelse(as.character(node) %in% names(A_anc_states), A_anc_states[as.character(node)], NA)
+     
+     # Agregar el nodo ancestral, cluster y valor de S al resultado
+     result_list <- append(result_list, list(data.frame(
+       Node = node,
+       Cluster = cluster,  # Asignamos el mismo cluster del terminal
+       A_value = A_value
+     )))
+   }
+ }

> # Combinar todos los dataframes en uno solo
> result_df_A <- do.call(rbind, result_list)

> # Para nodos ancestrales, asegurarse de asignar clusters
> result_df_A <- result_df_A[!duplicated(result_df_A$Node), ]  # Eliminar filas duplicadas de cada nodo

> # Ver el dataframe resultante
> row.names(result_df_A)<-NULL

> print(result_df_A)
   Node Cluster   A_value
1     1       3 0.5645161
2    16       3 0.5643104
3    17       3 0.5643104
4    18       3 0.5688637
5    19       3 0.5715564
6    20       3 0.5784731
7    21       3 0.5653084
8    22       3 0.5594275
9     2       3 0.5220588
10    3       3 0.5394737
11    4       3 0.5549133
12    5       3 0.6717557
13    6       1 0.5794393
14    7       1 0.5499474
15    8       2 0.6066025
16   23       2 0.5482989
17   24       2 0.5439323
18   25       2 0.5440300
19   26       2 0.5467954
20   27       2 0.5449305
21   28       2 0.5637844
22    9       2 0.5601852
23   10       2 0.5555556
24   11       2 0.4936441
25   12       2 0.5692308
26   13       2 0.5377358
27   14       2 0.5198939
28   15       1 0.5671642

> # Expansión de result_df_A basado en paths (distancia desde la raíz)
> expanded_df <- do.call(rbind, lapply(1:length(paths), function(i) {
+   path <- paths[[i]]
+   # Obtener el cluster y valores de A para cada nodo en el path
+   cluster <- result_df_A$Cluster[match(path[length(path)], result_df_A$Node)]
+   A_values <- result_df_A$A_value[match(path, result_df_A$Node)]
+   # Crear una columna de pasos desde la raíz (distancia en pasos desde el nodo 16)
+   steps_from_root <- seq(0, length(path)-1)
+   # Crear un dataframe temporal para el path
+   data.frame(Step = steps_from_root, Cluster = cluster, A_value = A_values, Terminal_Node = path[length(path)])
+ }))

> max_steps <- max((expanded_df$Step))

> expanded_df_extended <- do.call(rbind, lapply(split(expanded_df, expanded_df$Terminal_Node), function(df) {
+   # Calcular valores adicionales de A
+   last_step <- max(df$Step)
+   last_value <-tail(df$A_value, 1)
+   cluster <- unique(df$Cluster)
+   
+   # Generar filas adicionales hasta el máximo de pasos deseado
+   additional_steps <- data.frame(
+     Step = seq(last_step, max_steps),
+     Cluster = cluster,
+     A_value = last_value,  # Usamos el último valor
+     Terminal_Node = df$Terminal_Node[1]
+   )
+   
+   # Combinar el dataframe original con los pasos adicionales
+   rbind(df, additional_steps)
+ }))

> # Graficar los valores de A a lo largo del camino de nodos desde la raíz para cada cluster
> ggplot(expanded_df_extended, aes(x = Step, y = A_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
+   geom_line(size = 1) +
+   geom_point(size = 2) +  # Añadir puntos en cada nodo
+   geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
+   labs(
+     title = "Valores de A a lo largo de los nodos",
+     x = "Paso desde la raíz",
+     y = "Valor de A",
+     color = "Cluster"
+   ) +
+   theme_minimal() +
+   scale_color_manual(values = c("blue", "green", "red"))  # Colores para cada cluster
`geom_smooth()` using formula = 'y ~ x'

> png("Figures/A_TRAIT.png",width = 2000, height = 750, res = 300)

> ggplot(expanded_df_extended, aes(x = Step, y = A_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
+   geom_line(size = 1) +
+   geom_point(size = 2) +  # Añadir puntos en cada nodo
+   geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
+   labs(
+     title = "Valores de A a lo largo de los nodos",
+     x = "Paso desde la raíz",
+     y = "Valor de A",
+     color = "Cluster"
+   ) +
+   theme_minimal() +
+   scale_color_manual(values = c("blue", "green", "red"))  # Colores para cada cluster
`geom_smooth()` using formula = 'y ~ x'

> dev.off()
RStudioGD 
        2 

> ################################## G ###########################################
> # Cluster
> clusters_table
                                    tip.label cluster
EL_DIVISADERO                   EL_DIVISADERO       3
EL_ALTAR                             EL_ALTAR       3
MANQUEHUA                           MANQUEHUA       1
PUNITAQUI                           PUNITAQUI       2
RINCONADA_DE_PUNITAQUI RINCONADA_DE_PUNITAQUI       3
BARRAZA                               BARRAZA       2
CANELILLA_OVALLE             CANELILLA_OVALLE       1
CANELA_BAJA                       CANELA_BAJA       2
LA_CALERA                           LA_CALERA       2
EL_ESPINAL                         EL_ESPINAL       1
GUALLIGUAICA                     GUALLIGUAICA       3
HUENTELAUQUEN                   HUENTELAUQUEN       2
CASTILLO_MAL_PASO           CASTILLO_MAL_PASO       2
MONTE_PATRIA                     MONTE_PATRIA       2
LA_POLVADA                         LA_POLVADA       3

> # Tree
> G_tree <- read.tree(text = "(((((((GUALLIGUAICA:0.127973,LA_POLVADA:0.127973)[&CI={-0.0521,0.128952},ancstate={0.038426}]:0.123261,EL_DIVISADERO:0.251235)[&CI={-0.000347,0.225242},ancstate={0.112448}]:0.142584,RINCONADA_DE_PUNITAQUI:0.393819)[&CI={0.054363,0.308255},ancstate={0.181309}]:0.077413,EL_ALTAR:0.471233)[&CI={0.057315,0.325597},ancstate={0.191456}]:0.163097,CANELILLA_OVALLE:0.634329)[&CI={0.1019,0.402365},ancstate={0.252132}]:0.084733,MANQUEHUA:0.719062)[&CI={0.092656,0.411103},ancstate={0.251879}]:0.280938,((((((CANELA_BAJA:0.169277,CASTILLO_MAL_PASO:0.169277)[&CI={0.138494,0.305502},ancstate={0.221998}]:0.011386,PUNITAQUI:0.180663)[&CI={0.144077,0.31042},ancstate={0.227248}]:0.02304,MONTE_PATRIA:0.203702)[&CI={0.154424,0.33238},ancstate={0.243402}]:0.125087,BARRAZA:0.328789)[&CI={0.181639,0.41432},ancstate={0.29798}]:0.069566,LA_CALERA:0.398355)[&CI={0.190979,0.44785},ancstate={0.319415}]:0.215934,HUENTELAUQUEN:0.614289)[&CI={0.111258,0.43888},ancstate={0.275069}]:0.385711,EL_ESPINAL:1)[&CI={0.080061,0.448753},ancstate={0.264407}];
+ ")

> paths
[[1]]
[1] 16 17 18 19 20 21 22  1

[[2]]
[1] 16 17 18 19 20 21 22  2

[[3]]
[1] 16 17 18 19 20 21  3

[[4]]
[1] 16 17 18 19 20  4

[[5]]
[1] 16 17 18 19  5

[[6]]
[1] 16 17 18  6

[[7]]
[1] 16 17  7

[[8]]
[1] 16 23 24 25 26 27 28  8

[[9]]
[1] 16 23 24 25 26 27 28  9

[[10]]
[1] 16 23 24 25 26 27 10

[[11]]
[1] 16 23 24 25 26 11

[[12]]
[1] 16 23 24 25 12

[[13]]
[1] 16 23 24 13

[[14]]
[1] 16 23 14

[[15]]
[1] 16 15


> # Extraer los estados ancestrales
> G_anc_states <- gvc$anc$ace

> G_anc_states
        16         17         18         19         20         21         22         23         24         25 
0.26495954 0.26495954 0.25225583 0.25059075 0.18933150 0.17254450 0.14494536 0.04500488 0.30453185 0.30549564 
        26         27         28         29 
0.29733564 0.24138233 0.20384319 0.20384319 

> #Extraer estados actuales
> G_trait_vector <- setNames(G_trait$G, rownames(G_trait))

> print(G_trait_vector)
               BARRAZA            CANELA_BAJA       CANELILLA_OVALLE      CASTILLO_MAL_PASO 
          3.401253e-01           1.126470e-01           4.900130e-01           2.532922e-01 
              EL_ALTAR          EL_DIVISADERO             EL_ESPINAL           GUALLIGUAICA 
          7.791460e-02           1.419874e-01           2.813552e-01           0.000000e+00 
         HUENTELAUQUEN              LA_CALERA             LA_POLVADA              MANQUEHUA 
          1.658951e-01           5.239689e-01           7.105427e-15           2.176690e-01 
          MONTE_PATRIA              PUNITAQUI RINCONADA_DE_PUNITAQUI 
          2.973456e-01           1.838879e-01           3.198819e-01 

> #Crear un data.frame
> result_list <- list() 

> # Iterar sobre cada nodo terminal y su ruta desde la raíz
> for (i in seq_along(paths)) {
+   # Nodo terminal y ruta de nodos desde la raíz hasta el nodo terminal
+   tip <- terminal_nodes[i]
+   path <- paths[[i]]
+   
+   # Obtener el cluster del nodo terminal desde clusters_table
+   cluster <- clusters_table[clusters_table$tip.label == tip, "cluster"]
+   
+   # Obtener el valor de G para el nodo terminal desde G_trait
+   G_value_terminal <- G_trait_vector[tip]
+   
+   # Agregar el nodo terminal al dataframe con su valor de G y su cluster
+   result_list <- append(result_list, list(data.frame(
+     Node = path[length(path)],   # Último nodo en la ruta, que es el terminal
+     Cluster = cluster,
+     G_value = G_value_terminal
+   )))
+   
+   # Agregar cada nodo ancestral en el path (excluyendo el terminal)
+   for (node in head(path, -1)) {  # head(path, -1) excluye el último nodo terminal
+     # Asignar el valor de G para el nodo ancestral
+     G_value <- ifelse(as.character(node) %in% names(G_anc_states), G_anc_states[as.character(node)], NA)
+     
+     # Agregar el nodo ancestral, cluster y valor de G al resultado
+     result_list <- append(result_list, list(data.frame(
+       Node = node,
+       Cluster = cluster,  # Asignamos el mismo cluster del terminal
+       G_value = G_value
+     )))
+   }
+ }

> # Combinar todos los dataframes en uno solo
> result_df_G <- do.call(rbind, result_list)

> # Para nodos ancestrales, asegurarse de asignar clusters
> result_df_G <- result_df_G[!duplicated(result_df_G$Node), ]  # Eliminar filas duplicadas de cada nodo

> # Ver el dataframe resultante
> row.names(result_df_G)<-NULL

> print(result_df_G)
   Node Cluster      G_value
1     1       3 0.000000e+00
2    16       3 2.649595e-01
3    17       3 2.649595e-01
4    18       3 2.522558e-01
5    19       3 2.505908e-01
6    20       3 1.893315e-01
7    21       3 1.725445e-01
8    22       3 1.449454e-01
9     2       3 7.105427e-15
10    3       3 1.419874e-01
11    4       3 3.198819e-01
12    5       3 7.791460e-02
13    6       1 4.900130e-01
14    7       1 2.176690e-01
15    8       2 1.126470e-01
16   23       2 4.500488e-02
17   24       2 3.045318e-01
18   25       2 3.054956e-01
19   26       2 2.973356e-01
20   27       2 2.413823e-01
21   28       2 2.038432e-01
22    9       2 2.532922e-01
23   10       2 1.838879e-01
24   11       2 2.973456e-01
25   12       2 3.401253e-01
26   13       2 5.239689e-01
27   14       2 1.658951e-01
28   15       1 2.813552e-01

> # Expansión de result_df_G basado en paths (distancia desde la raíz)
> expanded_df <- do.call(rbind, lapply(1:length(paths), function(i) {
+   path <- paths[[i]]
+   # Obtener el cluster y valores de G para cada nodo en el path
+   cluster <- result_df_G$Cluster[match(path[length(path)], result_df_G$Node)]
+   G_values <- result_df_G$G_value[match(path, result_df_G$Node)]
+   # Crear una columna de pasos desde la raíz (distancia en pasos desde el nodo 16)
+   steps_from_root <- seq(0, length(path)-1)
+   # Crear un dataframe temporal para el path
+   data.frame(Step = steps_from_root, Cluster = cluster, G_value = G_values, Terminal_Node = path[length(path)])
+ }))

> max_steps <- max((expanded_df$Step))

> expanded_df_extended <- do.call(rbind, lapply(split(expanded_df, expanded_df$Terminal_Node), function(df) {
+   # Calcular valores adicionales de G
+   last_step <- max(df$Step)
+   last_value <-tail(df$G_value, 1)
+   cluster <- unique(df$Cluster)
+   
+   # Generar filas adicionales hasta el máximo de pasos deseado
+   additional_steps <- data.frame(
+     Step = seq(last_step, max_steps),
+     Cluster = cluster,
+     G_value = last_value,  # Usamos el último valor
+     Terminal_Node = df$Terminal_Node[1]
+   )
+   
+   # Combinar el dataframe original con los pasos adicionales
+   rbind(df, additional_steps)
+ }))

> # Graficar los valores de G a lo largo del camino de nodos desde la raíz para cada cluster
> ggplot(expanded_df_extended, aes(x = Step, y = G_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
+   geom_line(size = 1) +
+   geom_point(size = 2) +  # Añadir puntos en cada nodo
+   geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
+   labs(
+     title = "Valores de G a lo largo de los nodos",
+     x = "Paso desde la raíz",
+     y = "Valor de G",
+     color = "Cluster"
+   ) +
+   theme_minimal() +
+   scale_color_manual(values = c("blue", "green", "red"))  # Colores para cada cluster
`geom_smooth()` using formula = 'y ~ x'

> png("Figures/G_TRAIT.png",width = 2000, height = 750, res = 300)

> ggplot(expanded_df_extended, aes(x = Step, y = G_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
+   geom_line(size = 1) +
+   geom_point(size = 2) +  # Añadir puntos en cada nodo
+   geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
+   labs(
+     title = "Valores de G a lo largo de los nodos",
+     x = "Paso desde la raíz",
+     y = "Valor de G",
+     color = "Cluster"
+   ) +
+   theme_minimal() +
+   scale_color_manual(values = c("blue", "green", "red"))  # Colores para cada cluster
`geom_smooth()` using formula = 'y ~ x'

> dev.off()
RStudioGD 
        2 

> ################################## M ###########################################
> # Cluster
> clusters_table
                                    tip.label cluster
EL_DIVISADERO                   EL_DIVISADERO       3
EL_ALTAR                             EL_ALTAR       3
MANQUEHUA                           MANQUEHUA       1
PUNITAQUI                           PUNITAQUI       2
RINCONADA_DE_PUNITAQUI RINCONADA_DE_PUNITAQUI       3
BARRAZA                               BARRAZA       2
CANELILLA_OVALLE             CANELILLA_OVALLE       1
CANELA_BAJA                       CANELA_BAJA       2
LA_CALERA                           LA_CALERA       2
EL_ESPINAL                         EL_ESPINAL       1
GUALLIGUAICA                     GUALLIGUAICA       3
HUENTELAUQUEN                   HUENTELAUQUEN       2
CASTILLO_MAL_PASO           CASTILLO_MAL_PASO       2
MONTE_PATRIA                     MONTE_PATRIA       2
LA_POLVADA                         LA_POLVADA       3

> # Tree
> M_tree <- read.tree(text = "(((((((GUALLIGUAICA:0.127973,LA_POLVADA:0.127973)[&CI={-0.106009,0.185709},ancstate={0.03985}]:0.123261,EL_DIVISADERO:0.251235)[&CI={-0.065124,0.298355},ancstate={0.116616}]:0.142584,RINCONADA_DE_PUNITAQUI:0.393819)[&CI={-0.022553,0.386529},ancstate={0.181988}]:0.077413,EL_ALTAR:0.471233)[&CI={-0.012875,0.419393},ancstate={0.203259}]:0.163097,CANELILLA_OVALLE:0.634329)[&CI={0.065793,0.549916},ancstate={0.307854}]:0.084733,MANQUEHUA:0.719062)[&CI={0.066873,0.579967},ancstate={0.32342}]:0.280938,((((((CANELA_BAJA:0.169277,CASTILLO_MAL_PASO:0.169277)[&CI={0.101203,0.370293},ancstate={0.235748}]:0.011386,PUNITAQUI:0.180663)[&CI={0.114032,0.382052},ancstate={0.248042}]:0.02304,MONTE_PATRIA:0.203702)[&CI={0.135969,0.422699},ancstate={0.279334}]:0.125087,BARRAZA:0.328789)[&CI={0.180911,0.555816},ancstate={0.368363}]:0.069566,LA_CALERA:0.398355)[&CI={0.204241,0.618122},ancstate={0.411182}]:0.215934,HUENTELAUQUEN:0.614289)[&CI={0.105868,0.633746},ancstate={0.369807}]:0.385711,EL_ESPINAL:1)[&CI={0.137808,0.731859},ancstate={0.434834}];")

> paths
[[1]]
[1] 16 17 18 19 20 21 22  1

[[2]]
[1] 16 17 18 19 20 21 22  2

[[3]]
[1] 16 17 18 19 20 21  3

[[4]]
[1] 16 17 18 19 20  4

[[5]]
[1] 16 17 18 19  5

[[6]]
[1] 16 17 18  6

[[7]]
[1] 16 17  7

[[8]]
[1] 16 23 24 25 26 27 28  8

[[9]]
[1] 16 23 24 25 26 27 28  9

[[10]]
[1] 16 23 24 25 26 27 10

[[11]]
[1] 16 23 24 25 26 11

[[12]]
[1] 16 23 24 25 12

[[13]]
[1] 16 23 24 13

[[14]]
[1] 16 23 14

[[15]]
[1] 16 15


> # Extraer los estados ancestrales
> M_anc_states <- mvc$anc$ace

> M_anc_states
        16         17         18         19         20         21         22         23         24         25 
0.43274181 0.43274181 0.34545397 0.32982700 0.21643444 0.18156637 0.15343631 0.04764128 0.38208029 0.38340490 
        26         27         28         29 
0.36599624 0.27892533 0.20348571 0.20348571 

> #Extraer estados actuales
> M_trait_vector <- setNames(M_trait$M, rownames(M_trait))

> print(M_trait_vector)
               BARRAZA            CANELA_BAJA       CANELILLA_OVALLE      CASTILLO_MAL_PASO 
            0.40000000             0.11279230             0.59813084             0.17592593 
              EL_ALTAR          EL_DIVISADERO             EL_ESPINAL           GUALLIGUAICA 
            0.03053435             0.15789474             1.00000000             0.00000000 
         HUENTELAUQUEN              LA_CALERA             LA_POLVADA              MANQUEHUA 
            0.14854111             0.73270440             0.00000000             0.17034700 
          MONTE_PATRIA              PUNITAQUI RINCONADA_DE_PUNITAQUI 
            0.41101695             0.19774011             0.25433526 

> #Crear un data.frame
> result_list <- list() 

> # Iterar sobre cada nodo terminal y su ruta desde la raíz
> for (i in seq_along(paths)) {
+   # Nodo terminal y ruta de nodos desde la raíz hasta el nodo terminal
+   tip <- terminal_nodes[i]
+   path <- paths[[i]]
+   
+   # Obtener el cluster del nodo terminal desde clusters_table
+   cluster <- clusters_table[clusters_table$tip.label == tip, "cluster"]
+   
+   # Obtener el valor de S para el nodo terminal desde M_trait
+   M_value_terminal <- M_trait_vector[tip]
+   
+   # Agregar el nodo terminal al dataframe con su valor de M y su cluster
+   result_list <- append(result_list, list(data.frame(
+     Node = path[length(path)],   # Último nodo en la ruta, que es el terminal
+     Cluster = cluster,
+     M_value = M_value_terminal
+   )))
+   
+   # Agregar cada nodo ancestral en el path (excluyendo el terminal)
+   for (node in head(path, -1)) {  # head(path, -1) excluye el último nodo terminal
+     # Asignar el valor de S para el nodo ancestral
+     M_value <- ifelse(as.character(node) %in% names(M_anc_states), M_anc_states[as.character(node)], NA)
+     
+     # Agregar el nodo ancestral, cluster y valor de S al resultado
+     result_list <- append(result_list, list(data.frame(
+       Node = node,
+       Cluster = cluster,  # Asignamos el mismo cluster del terminal
+       M_value = M_value
+     )))
+   }
+ }

> # Combinar todos los dataframes en uno solo
> result_df_M <- do.call(rbind, result_list)

> # Para nodos ancestrales, asegurarse de asignar clusters
> result_df_M <- result_df_M[!duplicated(result_df_M$Node), ]  # Eliminar filas duplicadas de cada nodo

> # Ver el dataframe resultante
> row.names(result_df_M)<-NULL

> print(result_df_M)
   Node Cluster    M_value
1     1       3 0.00000000
2    16       3 0.43274181
3    17       3 0.43274181
4    18       3 0.34545397
5    19       3 0.32982700
6    20       3 0.21643444
7    21       3 0.18156637
8    22       3 0.15343631
9     2       3 0.00000000
10    3       3 0.15789474
11    4       3 0.25433526
12    5       3 0.03053435
13    6       1 0.59813084
14    7       1 0.17034700
15    8       2 0.11279230
16   23       2 0.04764128
17   24       2 0.38208029
18   25       2 0.38340490
19   26       2 0.36599624
20   27       2 0.27892533
21   28       2 0.20348571
22    9       2 0.17592593
23   10       2 0.19774011
24   11       2 0.41101695
25   12       2 0.40000000
26   13       2 0.73270440
27   14       2 0.14854111
28   15       1 1.00000000

> # Expansión de result_df_M basado en paths (distancia desde la raíz)
> expanded_df <- do.call(rbind, lapply(1:length(paths), function(i) {
+   path <- paths[[i]]
+   # Obtener el cluster y valores de M para cada nodo en el path
+   cluster <- result_df_M$Cluster[match(path[length(path)], result_df_M$Node)]
+   M_values <- result_df_M$M_value[match(path, result_df_M$Node)]
+   # Crear una columna de pasos desde la raíz (distancia en pasos desde el nodo 16)
+   steps_from_root <- seq(0, length(path)-1)
+   # Crear un dataframe temporal para el path
+   data.frame(Step = steps_from_root, Cluster = cluster, M_value = M_values, Terminal_Node = path[length(path)])
+ }))

> max_steps <- max((expanded_df$Step))

> expanded_df_extended <- do.call(rbind, lapply(split(expanded_df, expanded_df$Terminal_Node), function(df) {
+   # Calcular valores adicionales de M
+   last_step <- max(df$Step)
+   last_value <-tail(df$M_value, 1)
+   cluster <- unique(df$Cluster)
+   
+   # Generar filas adicionales hasta el máximo de pasos deseado
+   additional_steps <- data.frame(
+     Step = seq(last_step, max_steps),
+     Cluster = cluster,
+     M_value = last_value,  # Usamos el último valor
+     Terminal_Node = df$Terminal_Node[1]
+   )
+   
+   # Combinar el dataframe original con los pasos adicionales
+   rbind(df, additional_steps)
+ }))

> # Graficar los valores de M a lo largo del camino de nodos desde la raíz para cada cluster
> ggplot(expanded_df_extended, aes(x = Step, y = M_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
+   geom_line(size = 1) +
+   geom_point(size = 2) +  # Añadir puntos en cada nodo
+   geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
+   labs(
+     title = "Valores de M a lo largo de los nodos",
+     x = "Paso desde la raíz",
+     y = "Valor de M",
+     color = "Cluster"
+   ) +
+   theme_minimal() +
+   scale_color_manual(values = c("blue", "green", "red"))  # Colores para cada cluster
`geom_smooth()` using formula = 'y ~ x'

> png("Figures/M_TRAIT.png",width = 2000, height = 750, res = 300)

> ggplot(expanded_df_extended, aes(x = Step, y = M_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
+   geom_line(size = 1) +
+   geom_point(size = 2) +  # Añadir puntos en cada nodo
+   geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
+   labs(
+     title = "Valores de M a lo largo de los nodos",
+     x = "Paso desde la raíz",
+     y = "Valor de M",
+     color = "Cluster"
+   ) +
+   theme_minimal() +
+   scale_color_manual(values = c("blue", "green", "red"))  # Colores para cada cluster
`geom_smooth()` using formula = 'y ~ x'

> dev.off()
RStudioGD 
        2 

> ################################################################################
> ########################## Todas las comunidades ###############################
> ################################################################################
> # Cluster
> df_tree_total <- as.data.frame(as.matrix(surname_matrix))

> df_tree_total <- as.data.frame(lapply(df_tree_total, as.numeric))

> df_tree_scaled_t <- scale(df_tree_total)

> km <- kmeans(df_tree_scaled_t, centers = 2, iter.max = 100, nstart = 100)

> Cluster <- as.factor(c(km$cluster))

> names(Cluster) <- colnames(km$centers)

> # Crear una tabla de clusters
> clusters_table <- data.frame(tip.label = names(Cluster), cluster = Cluster)

> clusters_table
                                                              tip.label cluster
AGUA_FRIA_ALTA                                           AGUA_FRIA_ALTA       1
AGUA_FRIA_BAJA                                           AGUA_FRIA_BAJA       1
ALCONES                                                         ALCONES       1
ALGARROBAL_Y_DESPENSA                             ALGARROBAL_Y_DESPENSA       2
ALGARROBO_DE_HORNILLOS                           ALGARROBO_DE_HORNILLOS       1
ALHUEMILLA_LAS_PALMAS                             ALHUEMILLA_LAS_PALMAS       2
ALVAREZ_DE_VALLE_HERMOSO                       ALVAREZ_DE_VALLE_HERMOSO       1
ANGOSTURA_DE_GALVEZ                                 ANGOSTURA_DE_GALVEZ       1
ATELCURA                                                       ATELCURA       1
ATUHUAICO                                                     ATUHUAICO       1
BARRAZA                                                         BARRAZA       2
BLAS_Y_BULRREME                                         BLAS_Y_BULRREME       1
BUENOS_AIRES_DE_PUNILLA                         BUENOS_AIRES_DE_PUNILLA       1
CABRA_CORRAL                                               CABRA_CORRAL       1
CALDERA_Y_DAMAS                                         CALDERA_Y_DAMAS       1
CANELA_ALTA                                                 CANELA_ALTA       2
CANELA_BAJA                                                 CANELA_BAJA       2
CANELILLA_CANELA                                       CANELILLA_CANELA       2
CANELILLA_OVALLE                                       CANELILLA_OVALLE       1
CARCAMO                                                         CARCAMO       2
CARRIZAL_Y_LAGUNA_DE_SERON                   CARRIZAL_Y_LAGUNA_DE_SERON       1
CARRIZO._MENDOZA_Y_ROMERO                     CARRIZO._MENDOZA_Y_ROMERO       1
CASTILLO_MAL_PASO                                     CASTILLO_MAL_PASO       2
CERRO_BLANCO                                               CERRO_BLANCO       2
CERRO_GIGANTE                                             CERRO_GIGANTE       1
CHACARILLAS                                                 CHACARILLAS       2
CHALINGA                                                       CHALINGA       2
CHANCHOQUI                                                   CHANCHOQUI       1
CHAPE_Y_CHACAY                                           CHAPE_Y_CHACAY       1
CHELLES                                                         CHELLES       1
CHILECITO_Y_CHUAPA                                   CHILECITO_Y_CHUAPA       2
COIPO_Y_CUYUNCAVI                                     COIPO_Y_CUYUNCAVI       1
COLLIGUAY                                                     COLLIGUAY       2
CORDILLERA_DE_CARRIZAL                           CORDILLERA_DE_CARRIZAL       2
CUARTO_CAJON                                               CUARTO_CAJON       1
CUESTA_EL_MANZANO                                     CUESTA_EL_MANZANO       1
CUZCUZ                                                           CUZCUZ       1
DAIN_Y_CORTADERA                                       DAIN_Y_CORTADERA       2
DE_ARAYA                                                       DE_ARAYA       2
DE_ORREGO                                                     DE_ORREGO       1
DIAZ_Y_OCARANZA                                         DIAZ_Y_OCARANZA       2
DOS_RIOS                                                       DOS_RIOS       2
EL_ALMENDRO                                                 EL_ALMENDRO       1
EL_ALTAR                                                       EL_ALTAR       2
EL_ATAJO                                                       EL_ATAJO       1
EL_CHACAY                                                     EL_CHACAY       1
EL_CUYANO                                                     EL_CUYANO       2
EL_DIVISADERO                                             EL_DIVISADERO       2
EL_DURAZNO                                                   EL_DURAZNO       1
EL_ESPINAL                                                   EL_ESPINAL       1
EL_ESPINO                                                     EL_ESPINO       2
EL_MACANO                                                     EL_MACANO       1
EL_OLIVO                                                       EL_OLIVO       1
EL_PANGUE                                                     EL_PANGUE       1
EL_PERAL_OJO_DE_AGUA                               EL_PERAL_OJO_DE_AGUA       1
EL_POTRERO_ALTO                                         EL_POTRERO_ALTO       1
EL_POTRERO_DE_HUATULAME                         EL_POTRERO_DE_HUATULAME       2
EL_ROMERAL                                                   EL_ROMERAL       1
EL_TOME                                                         EL_TOME       2
ESTERO_DERECHO                                           ESTERO_DERECHO       2
FERNANDEZ_ANGEL_Y_OTROS                         FERNANDEZ_ANGEL_Y_OTROS       1
FERNANDEZ_Y_VELIZ                                     FERNANDEZ_Y_VELIZ       2
FERNANDO_ALVAREZ                                       FERNANDO_ALVAREZ       2
FLORES_Y_SAAVEDRA                                     FLORES_Y_SAAVEDRA       2
FUNDIDA_NORTE                                             FUNDIDA_NORTE       1
FUNDIDA_SUR                                                 FUNDIDA_SUR       2
GUALLIGUAICA                                               GUALLIGUAICA       1
HIGUERITAS_UNIDAS                                     HIGUERITAS_UNIDAS       2
HUAMPULLA                                                     HUAMPULLA       1
HUANA                                                             HUANA       2
HUAPILLAS_MOLLAQUITAS                             HUAPILLAS_MOLLAQUITAS       1
HUASCOALTINOS                                             HUASCOALTINOS       1
HUENTELAUQUEN                                             HUENTELAUQUEN       2
HUINCHIGUALLEGO                                         HUINCHIGUALLEGO       1
INGA_PICHASCA                                             INGA_PICHASCA       1
JARA_O_LAJA                                                 JARA_O_LAJA       2
JARILLA_Y_AZOGUE                                       JARILLA_Y_AZOGUE       1
JIMENEZ_Y_TAPIA                                         JIMENEZ_Y_TAPIA       2
LA_CALERA                                                     LA_CALERA       2
LA_CAPILLA                                                   LA_CAPILLA       1
LA_CEBADA                                                     LA_CEBADA       1
LA_CISTERNA                                                 LA_CISTERNA       2
LA_COIPA                                                       LA_COIPA       1
LA_COLORADA_DE_AGUILERA_Y_SARMIENTO LA_COLORADA_DE_AGUILERA_Y_SARMIENTO       1
LA_HERRADURA                                               LA_HERRADURA       2
LA_HOYADA                                                     LA_HOYADA       1
LA_LEONA                                                       LA_LEONA       1
LA_ORTIGA                                                     LA_ORTIGA       2
LA_PLATA                                                       LA_PLATA       1
LA_POLVADA                                                   LA_POLVADA       1
LA_SAUCERA                                                   LA_SAUCERA       1
LA_TRANQUITA                                               LA_TRANQUITA       1
LA_VERDIONA                                                 LA_VERDIONA       1
LAGUNA_VERDE                                               LAGUNA_VERDE       1
LAGUNILLAS_GALLEGUILLOS_DEL_VALLE     LAGUNILLAS_GALLEGUILLOS_DEL_VALLE       1
LAS_BARRANCAS                                             LAS_BARRANCAS       1
LAS_BATEAS                                                   LAS_BATEAS       1
LAS_CARDAS                                                   LAS_CARDAS       2
LAS_DAMAS                                                     LAS_DAMAS       1
LAS_MINILLAS                                               LAS_MINILLAS       1
LAS_PAREDES                                                 LAS_PAREDES       1
LAS_ROJAS_DE_CUTUN                                   LAS_ROJAS_DE_CUTUN       1
LAS_TAZAS                                                     LAS_TAZAS       1
LAS_TRANCAS_DE_PUCLARO                           LAS_TRANCAS_DE_PUCLARO       1
LITIPAMPA                                                     LITIPAMPA       2
LORENZO_ARAYA                                             LORENZO_ARAYA       1
LORENZO_PERALTA_DE_PUNILLA                   LORENZO_PERALTA_DE_PUNILLA       2
LOS_ALGODONES                                             LOS_ALGODONES       2
LOS_ANGELES                                                 LOS_ANGELES       2
LOS_CERRILLOS                                             LOS_CERRILLOS       1
LOS_CHOROS                                                   LOS_CHOROS       1
LOS_CLONQUIS                                               LOS_CLONQUIS       2
LOS_HOYOS_Y_EL_EMPEDRADO                       LOS_HOYOS_Y_EL_EMPEDRADO       2
LOS_LAVADEROS                                             LOS_LAVADEROS       1
LOS_MAITENES                                               LOS_MAITENES       1
LOS_MAITENES_DE_SERON                             LOS_MAITENES_DE_SERON       1
LOS_MORALES                                                 LOS_MORALES       2
LOS_MOZOS                                                     LOS_MOZOS       2
LOS_POZOS                                                     LOS_POZOS       2
LOS_TAPIAS                                                   LOS_TAPIAS       1
LOS_TOMES                                                     LOS_TOMES       2
LOS_TRIGOS                                                   LOS_TRIGOS       1
MAJADA_BLANCA                                             MAJADA_BLANCA       1
MANQUEHUA                                                     MANQUEHUA       2
MAQUI_LOS_PALQUIS                                     MAQUI_LOS_PALQUIS       2
MIALQUI                                                         MIALQUI       2
MINCHA_NORTE                                               MINCHA_NORTE       1
MINCHA_SUR                                                   MINCHA_SUR       1
MONTE_PATRIA                                               MONTE_PATRIA       2
MOVILO                                                           MOVILO       2
OLLA_DE_CALDERA                                         OLLA_DE_CALDERA       2
ORURO                                                             ORURO       2
PEJERREYES                                                   PEJERREYES       1
PIEDRA_LISA                                                 PIEDRA_LISA       1
PIEDRAS_BLANCAS                                         PIEDRAS_BLANCAS       1
POTRERILLO_ALTO                                         POTRERILLO_ALTO       2
PULPICA_ALTO                                               PULPICA_ALTO       1
PULPICA_BAJO                                               PULPICA_BAJO       2
PUNITAQUI                                                     PUNITAQUI       2
QUEBRADA_DE_COLLIGUACITO                       QUEBRADA_DE_COLLIGUACITO       2
QUEBRADA_DE_PAIHUANO_Y_SAN_ANDRES     QUEBRADA_DE_PAIHUANO_Y_SAN_ANDRES       1
QUEBRADA_DE_TALCA                                     QUEBRADA_DE_TALCA       1
QUEBRADA_DE_TULAHUEN                               QUEBRADA_DE_TULAHUEN       2
QUEBRADA_HONDA                                           QUEBRADA_HONDA       1
QUEBRADA_LA_ARENA                                     QUEBRADA_LA_ARENA       2
QUEBRADA_LAS_MINILLAS                             QUEBRADA_LAS_MINILLAS       2
QUEBRADA_LAS_MOLLACAS                             QUEBRADA_LAS_MOLLACAS       1
QUEBRADA_LOS_LOROS                                   QUEBRADA_LOS_LOROS       1
QUITALLACO                                                   QUITALLACO       2
RAMADILLA                                                     RAMADILLA       1
RAPEL                                                             RAPEL       2
RAPELCILLO                                                   RAPELCILLO       2
RINCONADA_DE_PUNITAQUI                           RINCONADA_DE_PUNITAQUI       2
RIO_COLORADO                                               RIO_COLORADO       2
ROMERALCILLO                                               ROMERALCILLO       2
SALALA                                                           SALALA       2
SAN_ISIDRO                                                   SAN_ISIDRO       2
SAN_LORENZO                                                 SAN_LORENZO       2
SOCOS                                                             SOCOS       1
TOTORAL                                                         TOTORAL       1
TOTORALILLO                                                 TOTORALILLO       1
TUNGA_NORTE                                                 TUNGA_NORTE       1
TUNGA_SUR                                                     TUNGA_SUR       1
UCHUMI.DIAGUITAS                                       UCHUMI.DIAGUITAS       1
VADO_HONDO                                                   VADO_HONDO       2
VALDIVIA_DE_PUNILLA                                 VALDIVIA_DE_PUNILLA       1
VALLECITO_Y_RIO_SECO                               VALLECITO_Y_RIO_SECO       1
VARILLAR                                                       VARILLAR       1
VIVANCO                                                         VIVANCO       2
YERBA_LOCA                                                   YERBA_LOCA       2

> ################################## S ###########################################
> # Obtener los nodos terminales
> terminal_nodes <- svt$obj$tree$tip.label

> # Obtener las rutas de nodos desde la raíz
> paths <- nodepath(svt$obj$tree, 1:169)

> # Extraer los estados ancestrales
> S_anc_states <- svt$anc$ace

> # Extraer estados actuales
> S_trait_vector <- setNames(S_trait2$S, rownames(S_trait2))

> print(S_trait_vector)
                     AGUA_FRIA_ALTA                      AGUA_FRIA_BAJA                             ALCONES 
                         0.42253521                          0.28333333                          0.20967742 
              ALGARROBAL_Y_DESPENSA              ALGARROBO_DE_HORNILLOS               ALHUEMILLA_LAS_PALMAS 
                         0.57142857                          0.37500000                          0.30434783 
           ALVAREZ_DE_VALLE_HERMOSO                 ANGOSTURA_DE_GALVEZ                            ATELCURA 
                         0.39473684                          0.45945946                          0.45070423 
                          ATUHUAICO                             BARRAZA                     BLAS_Y_BULRREME 
                         0.48387097                          0.28461538                          0.47169811 
            BUENOS_AIRES_DE_PUNILLA                        CABRA_CORRAL                     CALDERA_Y_DAMAS 
                         0.43243243                          0.27272727                          0.42857143 
                        CANELA_ALTA                         CANELA_BAJA                    CANELILLA_CANELA 
                         0.14237288                          0.15130674                          0.40506329 
                   CANELILLA_OVALLE                             CARCAMO          CARRIZAL_Y_LAGUNA_DE_SERON 
                         0.33644860                          0.50000000                          0.66666667 
          CARRIZO,_MENDOZA_Y_ROMERO                   CASTILLO_MAL_PASO                        CERRO_BLANCO 
                         0.43750000                          0.21296296                          0.25490196 
                      CERRO_GIGANTE                         CHACARILLAS                            CHALINGA 
                         0.64285714                          0.41954023                          0.29250457 
                         CHANCHOQUI                      CHAPE_Y_CHACAY                             CHELLES 
                         0.40000000                          0.22352941                          0.10000000 
                 CHILECITO_Y_CHUAPA                   COIPO_Y_CUYUNCAVI                           COLLIGUAY 
                         0.37606838                          0.52631579                          0.45762712 
             CORDILLERA_DE_CARRIZAL                        CUARTO_CAJON                   CUESTA_EL_MANZANO 
                         0.42105263                          0.47368421                          0.40983607 
                             CUZCUZ                    DAIN_Y_CORTADERA                            DE_ARAYA 
                         0.55263158                          0.31707317                          1.00000000 
                          DE_ORREGO                     DIAZ_Y_OCARANZA                            DOS_RIOS 
                         0.28571429                          0.41463415                          0.75862069 
                        EL_ALMENDRO                            EL_ALTAR                            EL_ATAJO 
                         0.60000000                          0.33587786                          0.54545455 
                          EL_CHACAY                           EL_CUYANO                       EL_DIVISADERO 
                         0.40740741                          0.61904762                          0.38157895 
                         EL_DURAZNO                          EL_ESPINAL                           EL_ESPINO 
                         0.30303030                          0.35820896                          0.43037975 
                          EL_MACANO                            EL_OLIVO                           EL_PANGUE 
                         0.31250000                          0.82352941                          0.44000000 
               EL_PERAL_OJO_DE_AGUA                     EL_POTRERO_ALTO             EL_POTRERO_DE_HUATULAME 
                         0.73684211                          0.37777778                          0.42592593 
                         EL_ROMERAL                             EL_TOME                      ESTERO_DERECHO 
                         0.09859155                          0.31428571                          0.26943005 
            FERNANDEZ_ANGEL_Y_OTROS                   FERNANDEZ_Y_VELIZ                    FERNANDO_ALVAREZ 
                         0.66666667                          0.30434783                          0.28000000 
                  FLORES_Y_SAAVEDRA                       FUNDIDA_NORTE                         FUNDIDA_SUR 
                         0.27184466                          0.45098039                          0.33333333 
                       GUALLIGUAICA                   HIGUERITAS_UNIDAS                           HUAMPULLA 
                         0.45161290                          0.75609756                          0.40740741 
                              HUANA               HUAPILLAS_MOLLAQUITAS                       HUASCOALTINOS 
                         0.45192308                          0.66666667                          0.32692308 
                      HUENTELAUQUEN                     HUINCHIGUALLEGO                       INGA_PICHASCA 
                         0.23342175                          0.35135135                          0.25581395 
                        JARA_O_LAJA                    JARILLA_Y_AZOGUE                     JIMENEZ_Y_TAPIA 
                         0.41463415                          0.57142857                          0.10689252 
                       LAGUNA_VERDE   LAGUNILLAS_GALLEGUILLOS_DEL_VALLE                       LAS_BARRANCAS 
                         0.80000000                          0.66666667                          0.41025641 
                         LAS_BATEAS                          LAS_CARDAS                           LAS_DAMAS 
                         0.46153846                          0.31132075                          0.45000000 
                       LAS_MINILLAS                         LAS_PAREDES                  LAS_ROJAS_DE_CUTUN 
                         0.50000000                          0.66666667                          0.53488372 
                          LAS_TAZAS              LAS_TRANCAS_DE_PUCLARO                           LA_CALERA 
                         0.56097561                          0.47058824                          0.20125786 
                         LA_CAPILLA                           LA_CEBADA                         LA_CISTERNA 
                         0.40625000                          0.39000000                          0.48437500 
                           LA_COIPA LA_COLORADA_DE_AGUILERA_Y_SARMIENTO                        LA_HERRADURA 
                         0.19354839                          0.37037037                          0.44117647 
                          LA_HOYADA                            LA_LEONA                           LA_ORTIGA 
                         0.31818182                          0.31818182                          0.40000000 
                           LA_PLATA                          LA_POLVADA                          LA_SAUCERA 
                         0.38709677                          0.14705882                          0.19354839 
                       LA_TRANQUITA                         LA_VERDIONA                           LITIPAMPA 
                         0.40909091                          0.26136364                          0.46153846 
                      LORENZO_ARAYA          LORENZO_PERALTA_DE_PUNILLA                       LOS_ALGODONES 
                         0.36363636                          0.72727273                          0.41379310 
                        LOS_ANGELES                       LOS_CERRILLOS                          LOS_CHOROS 
                         0.47368421                          0.29629630                          0.59900990 
                       LOS_CLONQUIS            LOS_HOYOS_Y_EL_EMPEDRADO                       LOS_LAVADEROS 
                         0.40000000                          0.50000000                          0.41176471 
                       LOS_MAITENES               LOS_MAITENES_DE_SERON                         LOS_MORALES 
                         0.35416667                          0.26470588                          0.38333333 
                          LOS_MOZOS                           LOS_POZOS                          LOS_TAPIAS 
                         0.66666667                          0.66666667                          0.50000000 
                          LOS_TOMES                          LOS_TRIGOS                       MAJADA_BLANCA 
                         0.57894737                          0.17000000                          0.58333333 
                          MANQUEHUA                   MAQUI_LOS_PALQUIS                             MIALQUI 
                         0.15036803                          0.33333333                          0.46575342 
                       MINCHA_NORTE                          MINCHA_SUR                        MONTE_PATRIA 
                         0.45333333                          0.29230769                          0.16949153 
                             MOVILO                     OLLA_DE_CALDERA                               ORURO 
                         0.56666667                          0.36000000                          0.32941176 
                         PEJERREYES                     PIEDRAS_BLANCAS                         PIEDRA_LISA 
                         0.52380952                          0.80000000                          0.69696970 
                    POTRERILLO_ALTO                        PULPICA_ALTO                        PULPICA_BAJO 
                         0.25517241                          0.27586207                          0.68750000 
                          PUNITAQUI            QUEBRADA_DE_COLLIGUACITO   QUEBRADA_DE_PAIHUANO_Y_SAN_ANDRES 
                         0.15348399                          0.91666667                          0.42105263 
                  QUEBRADA_DE_TALCA                QUEBRADA_DE_TULAHUEN                      QUEBRADA_HONDA 
                         0.41221374                          0.42857143                          0.57627119 
              QUEBRADA_LAS_MINILLAS               QUEBRADA_LAS_MOLLACAS                   QUEBRADA_LA_ARENA 
                         0.41379310                          0.73076923                          0.83333333 
                 QUEBRADA_LOS_LOROS                          QUITALLACO                           RAMADILLA 
                         0.57142857                          0.62500000                          0.37037037 
                              RAPEL                          RAPELCILLO              RINCONADA_DE_PUNITAQUI 
                         0.47297297                          0.59090909                          0.20809249 
                       RIO_COLORADO                        ROMERALCILLO                              SALALA 
                         0.35937500                          0.44444444                          0.23648649 
                         SAN_ISIDRO                         SAN_LORENZO                               SOCOS 
                         0.81818182                          0.32558140                          0.46428571 
                            TOTORAL                         TOTORALILLO                         TUNGA_NORTE 
                         0.22463768                          0.21848739                          0.43076923 
                          TUNGA_SUR                    UCHUMI-DIAGUITAS                          VADO_HONDO 
                         0.36842105                          0.68571429                          0.46341463 
                VALDIVIA_DE_PUNILLA                VALLECITO_Y_RIO_SECO                            VARILLAR 
                         0.44067797                          0.47368421                          0.66666667 
                            VIVANCO                          YERBA_LOCA 
                         0.68421053                          0.53703704 

> # Crear un data.frame para almacenar resultados
> result_list <- list() 

> # Iterar sobre cada nodo terminal y su ruta desde la raíz
> for (i in seq_along(paths)) {
+   # Nodo terminal y ruta de nodos desde la raíz hasta el nodo terminal
+   tip <- terminal_nodes[i]
+   path <- paths[[i]]
+   
+   # Obtener el cluster del nodo terminal desde clusters_table
+   cluster_row <- clusters_table[clusters_table$tip.label == tip, ]
+   cluster <- ifelse(nrow(cluster_row) > 0, cluster_row$cluster, NA)
+   
+   # Obtener el valor de S para el nodo terminal desde S_trait
+   S_value_terminal <- ifelse(tip %in% names(S_trait_vector), S_trait_vector[tip], NA)
+   
+   # Verificar si hay un cluster y un valor de S válido
+   if (!is.na(cluster) && !is.na(S_value_terminal)) {
+     # Agregar el nodo terminal al dataframe con su valor de S y su cluster
+     result_list[[i]] <- data.frame(
+       Node = path[length(path)],   # Último nodo en la ruta, que es el terminal
+       Cluster = cluster,
+       S_value = S_value_terminal
+     )
+     
+     # Agregar cada nodo ancestral en el path (excluyendo el terminal)
+     for (node in head(path, -1)) {  # head(path, -1) excluye el último nodo terminal
+       # Asignar el valor de S para el nodo ancestral
+       S_value <- ifelse(as.character(node) %in% names(S_anc_states), 
+                         S_anc_states[as.character(node)], NA)
+       
+       # Asegurarse de que el nodo ancestral tenga un cluster asignado
+       # Asignar el cluster del terminal (debe estar asignado ya)
+       if (!is.na(cluster) && !is.na(S_value)) {
+         result_list[[length(result_list) + 1]] <- data.frame(
+           Node = node,
+           Cluster = cluster,  # Asignamos el mismo cluster del terminal
+           S_value = S_value
+         )
+       }
+     }
+   }
+ }

> # Combinar todos los dataframes en uno solo
> result_df_S <- do.call(rbind, result_list)

> # Eliminar filas duplicadas de cada nodo (manteniendo el primero)
> result_df_S <- result_df_S[!duplicated(result_df_S$Node), ]

> # Mesetear los nombres de las filas
> row.names(result_df_S) <- NULL

> # Ver el dataframe resultante
> print(result_df_S)
    Node Cluster    S_value
1      1       1 0.42253521
2      2       1 0.28333333
3      3       1 0.20967742
4      4       2 0.57142857
5      5       1 0.37500000
6      6       2 0.30434783
7      7       1 0.39473684
8      8       1 0.45945946
9      9       1 0.45070423
10    10       1 0.48387097
11    11       2 0.28461538
12    12       1 0.47169811
13    13       1 0.43243243
14    14       1 0.27272727
15    15       1 0.42857143
16    16       2 0.14237288
17    17       2 0.15130674
18    18       2 0.40506329
19    19       1 0.33644860
20    20       2 0.50000000
21    21       1 0.66666667
22   177       1 0.44981201
23    23       2 0.21296296
24    24       2 0.25490196
25    25       1 0.64285714
26    26       2 0.41954023
27    27       2 0.29250457
28    28       1 0.40000000
29    29       1 0.22352941
30    30       1 0.10000000
31    31       2 0.37606838
32    32       1 0.52631579
33    33       2 0.45762712
34    34       2 0.42105263
35    35       1 0.47368421
36    36       1 0.40983607
37    37       1 0.55263158
38    38       2 0.31707317
39    39       2 1.00000000
40    40       1 0.28571429
41    41       2 0.41463415
42    42       2 0.75862069
43    43       1 0.60000000
44    44       2 0.33587786
45    45       1 0.54545455
46    46       1 0.40740741
47    47       2 0.61904762
48    48       2 0.38157895
49    49       1 0.30303030
50    50       1 0.35820896
51    51       2 0.43037975
52    52       1 0.31250000
53    53       1 0.82352941
54    54       1 0.44000000
55    55       1 0.73684211
56    56       1 0.37777778
57    57       2 0.42592593
58    58       1 0.09859155
59    59       2 0.31428571
60    60       2 0.26943005
61    61       1 0.66666667
62    62       2 0.30434783
63    63       2 0.28000000
64    64       2 0.27184466
65    65       1 0.45098039
66    66       2 0.33333333
67    67       1 0.45161290
68    68       2 0.75609756
69    69       1 0.40740741
70    70       2 0.45192308
71    71       1 0.66666667
72    72       1 0.32692308
73    73       2 0.23342175
74    74       1 0.35135135
75    75       1 0.25581395
76    76       2 0.41463415
77    77       1 0.57142857
78    78       2 0.10689252
79    79       2 0.20125786
80    80       1 0.40625000
81    81       1 0.39000000
82    82       2 0.48437500
83    83       1 0.19354839
84    84       1 0.37037037
85    85       2 0.44117647
86    86       1 0.31818182
87    87       1 0.31818182
88    88       2 0.40000000
89    89       1 0.38709677
90    90       1 0.14705882
91    91       1 0.19354839
92    92       1 0.40909091
93    93       1 0.26136364
94    94       1 0.80000000
95    95       1 0.66666667
96    96       1 0.41025641
97    97       1 0.46153846
98    98       2 0.31132075
99    99       1 0.45000000
100  100       1 0.50000000
101  101       1 0.66666667
102  102       1 0.53488372
103  103       1 0.56097561
104  104       1 0.47058824
105  105       2 0.46153846
106  106       1 0.36363636
107  107       2 0.72727273
108  108       2 0.41379310
109  109       2 0.47368421
110  110       1 0.29629630
111  111       1 0.59900990
112  112       2 0.40000000
113  113       2 0.50000000
114  114       1 0.41176471
115  115       1 0.35416667
116  116       1 0.26470588
117  117       2 0.38333333
118  118       2 0.66666667
119  119       2 0.66666667
120  120       1 0.50000000
121  121       2 0.57894737
122  122       1 0.17000000
123  123       1 0.58333333
124  124       2 0.15036803
125  125       2 0.33333333
126  126       2 0.46575342
127  127       1 0.45333333
128  128       1 0.29230769
129  129       2 0.16949153
130  130       2 0.56666667
131  131       2 0.36000000
132  132       2 0.32941176
133  133       1 0.52380952
134  134       1 0.69696970
135  135       1 0.80000000
136  136       2 0.25517241
137  137       1 0.27586207
138  138       2 0.68750000
139  139       2 0.15348399
140  140       2 0.91666667
141  141       1 0.42105263
142  142       1 0.41221374
143  143       2 0.42857143
144  144       1 0.57627119
145  145       2 0.83333333
146  146       2 0.41379310
147  147       1 0.73076923
148  148       1 0.57142857
149  149       2 0.62500000
150  150       1 0.37037037
151  151       2 0.47297297
152  152       2 0.59090909
153  153       2 0.20809249
154  154       2 0.35937500
155  155       2 0.44444444
156  156       2 0.23648649
157  157       2 0.81818182
158  158       2 0.32558140
159  159       1 0.46428571
160  160       1 0.22463768
161  161       1 0.21848739
162  162       1 0.43076923
163  163       1 0.36842105
164  171       1 0.44199657
165  165       2 0.46341463
166  166       1 0.44067797
167  167       1 0.47368421
168  168       1 0.66666667
169  169       2 0.68421053
170  170       2 0.53703704
171  185       1 0.45165261
172  187       1 0.45028848
173  188       1 0.44681770
174  190       1 0.44515399
175  191       1 0.43971770
176  200       1 0.43394593
177  204       1 0.43401201
178  205       1 0.43459553
179  212       1 0.43455519
180  213       1 0.46699995
181  279       1 0.45904690
182  172       2 0.44237752
183  173       2 0.44781267
184  175       2 0.44932572
185  179       2 0.44991797
186  180       2 0.45188402
187  214       2 0.42916248
188  224       2 0.42811960
189  227       2 0.41453417
190  229       2 0.39314692
191  245       2 0.32606595
192  176       1 0.44634313
193  194       1 0.43786351
194  216       1 0.41979575
195  178       1 0.45510531
196  183       1 0.47323786
197  189       1 0.44692715
198  195       1 0.44982548
199  209       1 0.43249148
200  250       1 0.42159581
201  297       1 0.41501202
202  331       1 0.44083617
203  196       1 0.44559120
204  202       1 0.44952839
205  218       1 0.43778216
206  234       1 0.42530227
207  223       2 0.42237231
208  251       2 0.40524371
209  273       2 0.33369935
210  226       2 0.44912232
211  236       2 0.45362557
212  240       2 0.45347676
213  247       2 0.45577214
214  261       2 0.45612495
215  278       2 0.45022970
216  280       2 0.41959978
217  290       2 0.35712027
218  203       1 0.43314608
219  206       1 0.43261972
220  208       1 0.43259830
221  219       1 0.43526113
222  221       1 0.44261788
223  228       1 0.44822414
224  231       1 0.44470760
225  242       1 0.45215983
226  253       1 0.45912665
227  246       2 0.38800390
228  263       2 0.36483703
229  306       2 0.31867460
230  334       2 0.31106913
231  259       1 0.47976668
232  271       1 0.50684133
233  288       1 0.51356715
234  293       1 0.52233882
235  327       1 0.48044841
236  336       1 0.45782739
237  338       1 0.50605048
238  230       2 0.41174753
239  233       2 0.42635352
240  255       2 0.44157481
241  267       2 0.44523391
242  276       2 0.45324571
243  294       2 0.45147431
244  300       2 0.46066295
245  315       2 0.45524292
246  319       2 0.43587436
247  326       1 0.61191412
248  264       2 0.38849358
249  266       2 0.38940767
250  274       2 0.37659675
251  283       2 0.38560064
252  193       1 0.44980574
253  217       1 0.43457785
254  192       1 0.44350432
255  198       1 0.40242457
256  238       1 0.37484581
257  174       1 0.42597356
258  210       1 0.38077543
259  237       1 0.29029563
260  277       2 0.46323877
261  282       2 0.46240860
262  291       2 0.45375315
263  301       2 0.45013078
264  305       2 0.43127117
265  241       1 0.35658139
266  313       1 0.36096144
267  318       2 0.45963949
268  211       1 0.44492094
269  256       1 0.45059110
270  268       1 0.44816005
271  252       2 0.44839889
272  262       2 0.43967496
273  265       2 0.42674872
274  285       2 0.37873189
275  310       2 0.37497741
276  330       2 0.36488822
277  235       2 0.46197084
278  258       2 0.49921033
279  289       2 0.58268285
280  321       2 0.42862874
281  328       2 0.42376099
282  215       1 0.41885791
283  220       1 0.41128592
284  199       2 0.43927368
285  207       2 0.48076970
286  243       2 0.48268519
287  248       2 0.50702017
288  269       2 0.49420459
289  303       2 0.46354974
290  324       2 0.45861902
291  184       1 0.48881325
292  272       1 0.40729913
293  295       1 0.41257371
294  222       1 0.43862727
295  298       2 0.44303892
296  312       2 0.45586306
297  333       2 0.44116420
298  335       2 0.42680642
299  337       1 0.18463377
300  286       2 0.43729971
301  307       2 0.36601860
302  309       2 0.36777844
303  311       2 0.42477791
304  232       2 0.37880172
305  249       1 0.42445664
306  284       2 0.35394252
307  299       2 0.34530534
308  201       1 0.41880765
309  244       1 0.47761381
310  257       1 0.44440830
311  316       2 0.29876539
312  322       2 0.23311228
313  281       2 0.52314578
314  181       1 0.44908388
315  182       1 0.41979755
316  308       2 0.35897124
317  292       2 0.46595679
318  296       2 0.47707794
319  239       1 0.56832153
320  320       1 0.41014404
321  339       1 0.41102703
322  186       1 0.47680598
323  225       1 0.49397112
324  302       1 0.41711064
325  317       1 0.40498140
326  329       1 0.37289021
327  254       1 0.39598472
328  197       1 0.47935300
329  275       1 0.37574450
330  270       2 0.51329559
331  304       2 0.45040637
332  323       2 0.41656856
333  260       2 0.46282494
 [ reached 'max' / getOption("max.print") -- omitted 4 rows ]

> expanded_df <- do.call(rbind, lapply(1:length(paths), function(i) {
+   path <- paths[[i]]
+   cluster <- result_df_S$Cluster[match(path[length(path)], result_df_S$Node)]
+   S_values <- result_df_S$S_value[match(path, result_df_S$Node)]
+   # Crear una columna de pasos desde la raíz (distancia en pasos desde el nodo 16)
+   steps_from_root <- seq(0, length(path)-1)
+   data.frame(Step = steps_from_root, 
+              Cluster = cluster, 
+              S_value = S_values, 
+              Terminal_Node = path[length(path)])
+ }))

> max_steps <- max((expanded_df$Step))

> max_steps
[1] 30

> # Eliminar filas donde S_value es NA
> expanded_df <- expanded_df[!is.na(expanded_df$S_value), ]

> # Asegurarse de que el Cluster no tenga NA
> expanded_df <- expanded_df[!is.na(expanded_df$Cluster), ]

> expanded_df_extended <- do.call(rbind, lapply(split(expanded_df, expanded_df$Terminal_Node), function(df) {
+   # Calcular valores adicionales de S
+   last_step <- max(df$Step)
+   last_value <-tail(df$S_value, 1)
+   cluster <- unique(df$Cluster)
+   
+   # Generar filas adicionales hasta el máximo de pasos deseado
+   additional_steps <- data.frame(
+     Step = seq(last_step, max_steps),
+     Cluster = cluster,
+     S_value = last_value,  # Usamos el último valor
+     Terminal_Node = df$Terminal_Node[1]
+   )
+   
+   # Combinar el dataframe original con los pasos adicionales
+   rbind(df, additional_steps)
+ }))

> ggplot(expanded_df_extended, aes(x = Step, y = S_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
+   geom_line(size = 0.1, alpha = 0.6) +
+   geom_point(size = 0.1) +  # Añadir puntos en cada nodo
+   geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
+   labs(
+     title = "Valores de S a lo largo de los nodos",
+     x = "Paso desde la raíz",
+     y = "Valor de S",
+     color = "Cluster"
+   ) +
+   theme_minimal() +
+   scale_color_manual(values = c("blue", "green"))  # Colores para cada cluster
`geom_smooth()` using formula = 'y ~ x'

> # Graficar los valores de S a lo largo del camino de nodos desde la raíz para cada cluster
> png("Figures/S_TRAIT_TOTAL.png", width = 2000, height = 750, res = 300)

> ggplot(expanded_df_extended, aes(x = Step, y = S_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
+   geom_line(size = 0.1, alpha = 0.6) +
+   geom_point(size = 0.1) +  # Añadir puntos en cada nodo
+   geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
+   labs(
+     title = "Valores de S a lo largo de los nodos",
+     x = "Paso desde la raíz",
+     y = "Valor de S",
+     color = "Cluster"
+   ) +
+   theme_minimal() +
+   scale_color_manual(values = c("blue", "green"))  # Colores para cada cluster
`geom_smooth()` using formula = 'y ~ x'

> dev.off()
RStudioGD 
        2 

> ################################## R ###########################################
> # Obtener los nodos terminales
> #terminal_nodes <- rvt$obj$tree$tip.label
> 
> # Obtener las rutas de nodos desde la raíz
> #paths <- nodepath(rvt$obj$tree, 1:169)
> 
> # Extraer los estados ancestrales
> #R_anc_states <- rvt$anc$ace
> 
> # Extraer estados actuales
> #R_trait_vector <- setNames(R_trait2$R, rownames(R_trait2))
> #print(R_trait_vector)
> 
> # Crear un data.frame para almacenar resultados
> #result_list <- list() 
> 
> # Iterar sobre cada nodo terminal y su ruta desde la raíz
> #for (i in seq_along(paths)) {
>   # Nodo terminal y ruta de nodos desde la raíz hasta el nodo terminal
> #  tip <- terminal_nodes[i]
> #  path <- paths[[i]]
>   
>   # Obtener el cluster del nodo terminal desde clusters_table
> #  cluster_row <- clusters_table[clusters_table$tip.label == tip, ]
> #  cluster <- ifelse(nrow(cluster_row) > 0, cluster_row$cluster, NA)
>   
>   # Obtener el valor de R para el nodo terminal desde R_trait
> #  R_value_terminal <- ifelse(tip %in% names(R_trait_vector), R_trait_vector[tip], NA)
>   
>   # Verificar si hay un cluster y un valor de R válido
> #  if (!is.na(cluster) && !is.na(R_value_terminal)) {
>     # Agregar el nodo terminal al dataframe con su valor de R y su cluster
> #    result_list[[i]] <- data.frame(
> #      Node = path[length(path)],   # Último nodo en la ruta, que es el terminal
> #      Cluster = cluster,
> #      R_value = R_value_terminal
> #    )
>     
>     # Agregar cada nodo ancestral en el path (excluyendo el terminal)
> #    for (node in head(path, -1)) {  # head(path, -1) excluye el último nodo terminal
>       # Asignar el valor de R para el nodo ancestral
> #      R_value <- ifelse(as.character(node) %in% names(R_anc_states), 
> #                        R_anc_states[as.character(node)], NA)
>       
>       # Asegurarse de que el nodo ancestral tenga un cluster asignado
>       # Asignar el cluster del terminal (debe estar asignado ya)
> #      if (!is.na(cluster) && !is.na(R_value)) {
> #        result_list[[length(result_list) + 1]] <- data.frame(
> #          Node = node,
> #          Cluster = cluster,  # Asignamos el mismo cluster del terminal
> #          R_value = R_value
> #        )
> #      }
> #    }
> #  }
> #}
> 
> # Combinar todos los dataframes en uno solo
> #result_df_R <- do.call(rbind, result_list)
> 
> # Eliminar filas duplicadas de cada nodo (manteniendo el primero)
> #result_df_R <- result_df_R[!duplicated(result_df_R$Node), ]
> 
> # Resetear los nombres de las filas
> #row.names(result_df_R) <- NULL
> 
> # Ver el dataframe resultante
> #print(result_df_R)
> 
> #expanded_df <- do.call(rbind, lapply(1:length(paths), function(i) {
> #  path <- paths[[i]]
> #  cluster <- result_df_R$Cluster[match(path[length(path)], result_df_R$Node3)]
> #  R_values <- result_df_R$R_value[match(path, result_df_R$Node)]
>   # Crear una columna de pasos desde la raíz (distancia en pasos desde el nodo 16)
> #  steps_from_root <- seq(0, length(path)-1)
> #  data.frame(Step = steps_from_root, 
> #             Cluster = cluster, 
> #             R_value = R_values, 
> #             Terminal_Node = path[length(path)])
> #}))
> #max_steps <- max((expanded_df$Step))
> #max_steps
> # Eliminar filas donde R_value es NA
> #expanded_df <- expanded_df[!is.na(expanded_df$R_value), ]
> 
> # Asegurarse de que el Cluster no tenga NA
> #expanded_df <- expanded_df[!is.na(expanded_df$Cluster), ]
> 
> #expanded_df_extended <- do.call(rbind, lapply(split(expanded_df, expanded_df$Terminal_Node), function(df) {
>   # Calcular valores adicionales de R
> #  last_step <- max(df$Step)
> #  last_value <-tail(df$R_value, 1)
> #  cluster <- unique(df$Cluster)
>   
>   # Generar filas adicionales hasta el máximo de pasos deseado
> #  additional_steps <- data.frame(
> #    Step = seq(last_step, max_steps),
> #    Cluster = cluster,
> #    R_value = last_value,  # Usamos el último valor
> #    Terminal_Node = df$Terminal_Node[1]
> #  )
>   
>   # Combinar el dataframe original con los pasos adicionales
> #  rbind(df, additional_steps)
> #}))
> #ggplot(expanded_df_extended, aes(x = Step, y = R_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
> #  geom_line(size = 0.1, alpha = 0.6) +
> #  geom_point(size = 0.1) +  # Añadir puntos en cada nodo
> #  geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
> #  labs(
> #    title = "Valores de R a lo largo de los nodos",
> #    x = "Paso desde la raíz",
> #    y = "Valor de R",
> #    color = "Cluster"
> #  ) +
> #  theme_minimal() +
> #  scale_color_manual(values = c("blue", "green"))  # Colores para cada cluster
> 
> # Graficar los valores de R a lo largo del camino de nodos desde la raíz para cada cluster
> #png("Figures/R_TRAIT_TOTAL.png", width = 2000, height = 750, res = 300)
> #ggplot(expanded_df_extended, aes(x = Step, y = R_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
> #  geom_line(size = 0.1, alpha = 0.6) +
> #  geom_point(size = 0.1) +  # Añadir puntos en cada nodo
> #  geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
> #  labs(
> #    title = "Valores de R a lo largo de los nodos",
> #    x = "Paso desde la raíz",
> #    y = "Valor de R",
> #    color = "Cluster"
> #  ) +
> #  theme_minimal() +
> #  scale_color_manual(values = c("blue", "green"))  # Colores para cada cluster
> #dev.off()
> 
> ################################## A ###########################################
> # Obtener los nodos terminales
> terminal_nodes <- avt$obj$tree$tip.label

> # Obtener las rutas de nodos desde la raíz
> paths <- nodepath(avt$obj$tree, 1:170)

> # Extraer los estados ancestrales
> A_anc_states <- avt$anc$ace

> # Extraer estados actuales
> A_trait_vector <- setNames(A_trait2$A, rownames(A_trait2))

> print(A_trait_vector)
                     AGUA_FRIA_ALTA                      AGUA_FRIA_BAJA                             ALCONES 
                          0.6619718                           0.6777778                           0.4395161 
              ALGARROBAL_Y_DESPENSA              ALGARROBO_DE_HORNILLOS               ALHUEMILLA_LAS_PALMAS 
                          0.5714286                           0.7250000                           0.8043478 
           ALVAREZ_DE_VALLE_HERMOSO                 ANGOSTURA_DE_GALVEZ                            ATELCURA 
                          0.4473684                           0.5675676                           0.6760563 
                          ATUHUAICO                             BARRAZA                     BLAS_Y_BULRREME 
                          0.5161290                           0.5692308                           0.6415094 
            BUENOS_AIRES_DE_PUNILLA                        CABRA_CORRAL                     CALDERA_Y_DAMAS 
                          0.5405405                           0.6022727                           0.6666667 
                        CANELA_ALTA                         CANELA_BAJA                    CANELILLA_CANELA 
                          0.6474576                           0.6066025                           0.6455696 
                   CANELILLA_OVALLE                             CARCAMO          CARRIZAL_Y_LAGUNA_DE_SERON 
                          0.5794393                           0.8750000                           0.7083333 
          CARRIZO,_MENDOZA_Y_ROMERO                   CASTILLO_MAL_PASO                        CERRO_BLANCO 
                          0.5625000                           0.5601852                           0.5490196 
                      CERRO_GIGANTE                         CHACARILLAS                            CHALINGA 
                          0.6428571                           0.5804598                           0.5612431 
                         CHANCHOQUI                      CHAPE_Y_CHACAY                             CHELLES 
                          0.4000000                           0.5764706                           0.4500000 
                 CHILECITO_Y_CHUAPA                   COIPO_Y_CUYUNCAVI                           COLLIGUAY 
                          0.6068376                           0.5789474                           0.5254237 
             CORDILLERA_DE_CARRIZAL                        CUARTO_CAJON                   CUESTA_EL_MANZANO 
                          0.6315789                           0.4736842                           0.6475410 
                             CUZCUZ                    DAIN_Y_CORTADERA                            DE_ARAYA 
                          0.7500000                           0.5853659                           0.6363636 
                          DE_ORREGO                     DIAZ_Y_OCARANZA                            DOS_RIOS 
                          0.6190476                           0.6829268                           0.5517241 
                        EL_ALMENDRO                            EL_ALTAR                            EL_ATAJO 
                          0.9000000                           0.6717557                           0.2727273 
                          EL_CHACAY                           EL_CUYANO                       EL_DIVISADERO 
                          0.5740741                           0.5714286                           0.5394737 
                         EL_DURAZNO                          EL_ESPINAL                           EL_ESPINO 
                          0.5303030                           0.5671642                           0.6708861 
                          EL_MACANO                            EL_OLIVO                           EL_PANGUE 
                          0.6250000                           0.4117647                           0.4800000 
               EL_PERAL_OJO_DE_AGUA                     EL_POTRERO_ALTO             EL_POTRERO_DE_HUATULAME 
                          0.5789474                           0.6888889                           0.5925926 
                         EL_ROMERAL                             EL_TOME                      ESTERO_DERECHO 
                          0.5633803                           0.6000000                           0.6683938 
            FERNANDEZ_ANGEL_Y_OTROS                   FERNANDEZ_Y_VELIZ                    FERNANDO_ALVAREZ 
                          0.7333333                           0.5036232                           0.7200000 
                  FLORES_Y_SAAVEDRA                       FUNDIDA_NORTE                         FUNDIDA_SUR 
                          0.5339806                           0.6274510                           0.5888889 
                       GUALLIGUAICA                   HIGUERITAS_UNIDAS                           HUAMPULLA 
                          0.5645161                           0.5853659                           0.6666667 
                              HUANA               HUAPILLAS_MOLLAQUITAS                       HUASCOALTINOS 
                          0.6057692                           0.7333333                           0.8153846 
                      HUENTELAUQUEN                     HUINCHIGUALLEGO                       INGA_PICHASCA 
                          0.5198939                           0.4864865                           0.6279070 
                        JARA_O_LAJA                    JARILLA_Y_AZOGUE                     JIMENEZ_Y_TAPIA 
                          0.6097561                           0.6785714                           0.5426402 
                       LAGUNA_VERDE   LAGUNILLAS_GALLEGUILLOS_DEL_VALLE                       LAS_BARRANCAS 
                          0.5000000                           0.4242424                           0.7179487 
                         LAS_BATEAS                          LAS_CARDAS                           LAS_DAMAS 
                          0.6153846                           0.5000000                           0.7500000 
                       LAS_MINILLAS                         LAS_PAREDES                  LAS_ROJAS_DE_CUTUN 
                          0.5625000                           0.6666667                           0.5581395 
                          LAS_TAZAS              LAS_TRANCAS_DE_PUCLARO                           LA_CALERA 
                          0.6097561                           0.7058824                           0.5377358 
                         LA_CAPILLA                           LA_CEBADA                         LA_CISTERNA 
                          0.6562500                           0.4500000                           0.5312500 
                           LA_COIPA LA_COLORADA_DE_AGUILERA_Y_SARMIENTO                        LA_HERRADURA 
                          0.4838710                           0.6666667                           0.7132353 
                          LA_HOYADA                            LA_LEONA                           LA_ORTIGA 
                          0.5909091                           0.6818182                           0.5285714 
                           LA_PLATA                          LA_POLVADA                          LA_SAUCERA 
                          0.6774194                           0.5220588                           0.6451613 
                       LA_TRANQUITA                         LA_VERDIONA                           LITIPAMPA 
                          0.3181818                           0.5227273                           0.5641026 
                      LORENZO_ARAYA          LORENZO_PERALTA_DE_PUNILLA                       LOS_ALGODONES 
                          0.5757576                           0.5454545                           0.5172414 
                        LOS_ANGELES                       LOS_CERRILLOS                          LOS_CHOROS 
                          0.5000000                           0.5555556                           0.6683168 
                       LOS_CLONQUIS            LOS_HOYOS_Y_EL_EMPEDRADO                       LOS_LAVADEROS 
                          0.5125000                           0.5714286                           0.5882353 
                       LOS_MAITENES               LOS_MAITENES_DE_SERON                         LOS_MORALES 
                          0.5000000                           0.5882353                           0.7500000 
                          LOS_MOZOS                           LOS_POZOS                          LOS_TAPIAS 
                          0.7500000                           0.6666667                           0.6153846 
                          LOS_TOMES                          LOS_TRIGOS                       MAJADA_BLANCA 
                          0.7368421                           0.5200000                           0.8750000 
                          MANQUEHUA                   MAQUI_LOS_PALQUIS                             MIALQUI 
                          0.5499474                           0.6666667                           0.6438356 
                       MINCHA_NORTE                          MINCHA_SUR                        MONTE_PATRIA 
                          0.6266667                           0.5923077                           0.4936441 
                             MOVILO                     OLLA_DE_CALDERA                               ORURO 
                          0.5333333                           0.7688889                           0.5411765 
                         PEJERREYES                     PIEDRAS_BLANCAS                         PIEDRA_LISA 
                          0.7142857                           1.0000000                           0.6363636 
                    POTRERILLO_ALTO                        PULPICA_ALTO                        PULPICA_BAJO 
                          0.6000000                           0.4712644                           0.6875000 
                          PUNITAQUI            QUEBRADA_DE_COLLIGUACITO   QUEBRADA_DE_PAIHUANO_Y_SAN_ANDRES 
                          0.5555556                           0.8333333                           0.5263158 
                  QUEBRADA_DE_TALCA                QUEBRADA_DE_TULAHUEN                      QUEBRADA_HONDA 
                          0.6259542                           0.7142857                           0.4915254 
              QUEBRADA_LAS_MINILLAS               QUEBRADA_LAS_MOLLACAS                   QUEBRADA_LA_ARENA 
                          0.3793103                           0.5000000                           0.5000000 
                 QUEBRADA_LOS_LOROS                          QUITALLACO                           RAMADILLA 
                          0.7142857                           0.5833333                           0.4444444 
                              RAPEL                          RAPELCILLO              RINCONADA_DE_PUNITAQUI 
                          0.4729730                           0.6363636                           0.5549133 
                       RIO_COLORADO                        ROMERALCILLO                              SALALA 
                          0.5625000                           0.6296296                           0.5405405 
                         SAN_ISIDRO                         SAN_LORENZO                               SOCOS 
                          0.6818182                           0.6395349                           0.5714286 
                            TOTORAL                         TOTORALILLO                         TUNGA_NORTE 
                          0.4855072                           0.4957983                           0.7153846 
                          TUNGA_SUR                    UCHUMI-DIAGUITAS                          VADO_HONDO 
                          0.6081871                           0.7428571                           0.5121951 
                VALDIVIA_DE_PUNILLA                VALLECITO_Y_RIO_SECO                            VARILLAR 
                          0.5084746                           0.6842105                           0.8571429 
                            VIVANCO                          YERBA_LOCA 
                          0.5526316                           0.7407407 

> # Crear un data.frame para almacenar resultados
> result_list <- list() 

> # Iterar sobre cada nodo terminal y su ruta desde la raíz
> for (i in seq_along(paths)) {
+   # Nodo terminal y ruta de nodos desde la raíz hasta el nodo terminal
+   tip <- terminal_nodes[i]
+   path <- paths[[i]]
+   
+   # Obtener el cluster del nodo terminal desde clusters_table
+   cluster_row <- clusters_table[clusters_table$tip.label == tip, ]
+   cluster <- ifelse(nrow(cluster_row) > 0, cluster_row$cluster, NA)
+   
+   # Obtener el valor de A para el nodo terminal desde A_trait
+   A_value_terminal <- ifelse(tip %in% names(A_trait_vector), A_trait_vector[tip], NA)
+   
+   # Verificar si hay un cluster y un valor de A válido
+   if (!is.na(cluster) && !is.na(A_value_terminal)) {
+     # Agregar el nodo terminal al dataframe con su valor de A y su cluster
+     result_list[[i]] <- data.frame(
+       Node = path[length(path)],   # Último nodo en la ruta, que es el terminal
+       Cluster = cluster,
+       A_value = A_value_terminal
+     )
+     
+     # Agregar cada nodo ancestral en el path (excluyendo el terminal)
+     for (node in head(path, -1)) {  # head(path, -1) excluye el último nodo terminal
+       # Asignar el valor de A para el nodo ancestral
+       A_value <- ifelse(as.character(node) %in% names(A_anc_states), 
+                         A_anc_states[as.character(node)], NA)
+       
+       # Asegurarse de que el nodo ancestral tenga un cluster asignado
+       # Asignar el cluster del terminal (debe estar asignado ya)
+       if (!is.na(cluster) && !is.na(A_value)) {
+         result_list[[length(result_list) + 1]] <- data.frame(
+           Node = node,
+           Cluster = cluster,  # Asignamos el mismo cluster del terminal
+           A_value = A_value
+         )
+       }
+     }
+   }
+ }

> # Combinar todos los dataframes en uno solo
> result_df_A <- do.call(rbind, result_list)

> # Eliminar filas duplicadas de cada nodo (manteniendo el primero)
> result_df_A <- result_df_A[!duplicated(result_df_A$Node), ]

> # Resetear los nombres de las filas
> row.names(result_df_A) <- NULL

> # Ver el dataframe resultante
> print(result_df_A)
    Node Cluster   A_value
1      1       1 0.6619718
2      2       1 0.6777778
3      3       1 0.4395161
4      4       2 0.5714286
5      5       1 0.7250000
6      6       2 0.8043478
7      7       1 0.4473684
8      8       1 0.5675676
9      9       1 0.6760563
10    10       1 0.5161290
11    11       2 0.5692308
12    12       1 0.6415094
13    13       1 0.5405405
14    14       1 0.6022727
15    15       1 0.6666667
16    16       2 0.6474576
17    17       2 0.6066025
18    18       2 0.6455696
19    19       1 0.5794393
20    20       2 0.8750000
21    21       1 0.7083333
22   177       1 0.5939193
23    23       2 0.5601852
24    24       2 0.5490196
25    25       1 0.6428571
26    26       2 0.5804598
27    27       2 0.5612431
28    28       1 0.4000000
29    29       1 0.5764706
30    30       1 0.4500000
31    31       2 0.6068376
32    32       1 0.5789474
33    33       2 0.5254237
34    34       2 0.6315789
35    35       1 0.4736842
36    36       1 0.6475410
37    37       1 0.7500000
38    38       2 0.5853659
39    39       2 0.6363636
40    40       1 0.6190476
41    41       2 0.6829268
42    42       2 0.5517241
43    43       1 0.9000000
44    44       2 0.6717557
45    45       1 0.2727273
46    46       1 0.5740741
47    47       2 0.5714286
48    48       2 0.5394737
49    49       1 0.5303030
50    50       1 0.5671642
51    51       2 0.6708861
52    52       1 0.6250000
53    53       1 0.4117647
54    54       1 0.4800000
55    55       1 0.5789474
56    56       1 0.6888889
57    57       2 0.5925926
58    58       1 0.5633803
59    59       2 0.6000000
60    60       2 0.6683938
61    61       1 0.7333333
62    62       2 0.5036232
63    63       2 0.7200000
64    64       2 0.5339806
65    65       1 0.6274510
66    66       2 0.5888889
67    67       1 0.5645161
68    68       2 0.5853659
69    69       1 0.6666667
70    70       2 0.6057692
71    71       1 0.7333333
72    72       1 0.8153846
73    73       2 0.5198939
74    74       1 0.4864865
75    75       1 0.6279070
76    76       2 0.6097561
77    77       1 0.6785714
78    78       2 0.5426402
79    79       2 0.5377358
80    80       1 0.6562500
81    81       1 0.4500000
82    82       2 0.5312500
83    83       1 0.4838710
84    84       1 0.6666667
85    85       2 0.7132353
86    86       1 0.5909091
87    87       1 0.6818182
88    88       2 0.5285714
89    89       1 0.6774194
90    90       1 0.5220588
91    91       1 0.6451613
92    92       1 0.3181818
93    93       1 0.5227273
94    94       1 0.5000000
95    95       1 0.4242424
96    96       1 0.7179487
97    97       1 0.6153846
98    98       2 0.5000000
99    99       1 0.7500000
100  100       1 0.5625000
101  101       1 0.6666667
102  102       1 0.5581395
103  103       1 0.6097561
104  104       1 0.7058824
105  105       2 0.5641026
106  106       1 0.5757576
107  107       2 0.5454545
108  108       2 0.5172414
109  109       2 0.5000000
110  110       1 0.5555556
111  111       1 0.6683168
112  112       2 0.5125000
113  113       2 0.5714286
114  114       1 0.5882353
115  115       1 0.5000000
116  116       1 0.5882353
117  117       2 0.7500000
118  118       2 0.7500000
119  119       2 0.6666667
120  120       1 0.6153846
121  121       2 0.7368421
122  122       1 0.5200000
123  123       1 0.8750000
124  124       2 0.5499474
125  125       2 0.6666667
126  126       2 0.6438356
127  127       1 0.6266667
128  128       1 0.5923077
129  129       2 0.4936441
130  130       2 0.5333333
131  131       2 0.7688889
132  132       2 0.5411765
133  133       1 0.7142857
134  134       1 0.6363636
135  135       1 1.0000000
136  136       2 0.6000000
137  137       1 0.4712644
138  138       2 0.6875000
139  139       2 0.5555556
140  140       2 0.8333333
141  141       1 0.5263158
142  142       1 0.6259542
143  143       2 0.7142857
144  144       1 0.4915254
145  145       2 0.5000000
146  146       2 0.3793103
147  147       1 0.5000000
148  148       1 0.7142857
149  149       2 0.5833333
150  150       1 0.4444444
151  151       2 0.4729730
152  152       2 0.6363636
153  153       2 0.5549133
154  154       2 0.5625000
155  155       2 0.6296296
156  156       2 0.5405405
157  157       2 0.6818182
158  158       2 0.6395349
159  159       1 0.5714286
160  160       1 0.4855072
161  161       1 0.4957983
162  162       1 0.7153846
163  163       1 0.6081871
164  171       1 0.5926501
165  165       2 0.5121951
166  166       1 0.5084746
167  167       1 0.6842105
168  168       1 0.8571429
169  169       2 0.5526316
170  170       2 0.7407407
171  185       1 0.6009521
172  187       1 0.6030107
173  188       1 0.6063720
174  190       1 0.6066025
175  191       1 0.6085309
176  200       1 0.6090218
177  204       1 0.6090432
178  205       1 0.6079480
179  212       1 0.6074117
180  213       1 0.6078484
181  279       1 0.5877250
182  172       2 0.5925857
183  173       2 0.5923758
184  175       2 0.5932815
185  179       2 0.5947543
186  180       2 0.6002291
187  214       2 0.6027835
188  224       2 0.5995903
189  227       2 0.5944234
190  229       2 0.5931952
191  245       2 0.5738142
192  176       1 0.5801270
193  194       1 0.5837834
194  216       1 0.5845429
195  178       1 0.5938103
196  183       1 0.6068226
197  189       1 0.6099098
198  195       1 0.6264371
199  209       1 0.6347155
200  250       1 0.6436081
201  297       1 0.6489428
202  331       1 0.6421081
203  196       1 0.6098583
204  202       1 0.6099807
205  218       1 0.6294131
206  234       1 0.6547665
207  223       2 0.6154998
208  251       2 0.6101515
209  273       2 0.6299310
210  226       2 0.5996003
211  236       2 0.5962795
212  240       2 0.5864682
213  247       2 0.5812875
214  261       2 0.5795637
215  278       2 0.5767868
216  280       2 0.5732555
217  290       2 0.5766268
218  203       1 0.6090334
219  206       1 0.6097278
220  208       1 0.6085184
221  219       1 0.6074396
222  221       1 0.6066957
223  228       1 0.6075655
224  231       1 0.6033088
225  242       1 0.6064238
226  253       1 0.6113440
227  246       2 0.5963023
228  263       2 0.6253936
229  306       2 0.6436246
230  334       2 0.6875978
231  259       1 0.6226063
232  271       1 0.6599240
233  288       1 0.6654109
234  293       1 0.6443216
235  327       1 0.6135420
236  336       1 0.6160964
237  338       1 0.6252267
238  230       2 0.5919658
239  233       2 0.5903226
240  255       2 0.5895866
241  267       2 0.5882428
242  276       2 0.5924499
243  294       2 0.5952645
244  300       2 0.6006743
245  315       2 0.6005077
246  319       2 0.5996963
247  326       1 0.6739315
248  264       2 0.5946212
249  266       2 0.5942964
250  274       2 0.5951769
251  283       2 0.6205693
252  193       1 0.5526052
253  217       1 0.5176168
254  192       1 0.6063236
255  198       1 0.6112758
256  238       1 0.6157904
257  174       1 0.5717959
258  210       1 0.5565478
259  237       1 0.5294312
260  277       2 0.5821634
261  282       2 0.5835931
262  291       2 0.5928584
263  301       2 0.5950943
264  305       2 0.6105622
265  241       1 0.5395317
266  313       1 0.5279056
267  318       2 0.6013366
268  211       1 0.6095857
269  256       1 0.6089187
270  268       1 0.5846939
271  252       2 0.6021293
272  262       2 0.5986783
273  265       2 0.5932616
274  285       2 0.5877568
275  310       2 0.5937999
276  330       2 0.5924474
277  235       2 0.6179813
278  258       2 0.6323786
279  289       2 0.6490463
280  321       2 0.6170301
281  328       2 0.6200763
282  215       1 0.6066148
283  220       1 0.6021045
284  199       2 0.6107024
285  207       2 0.6333017
286  243       2 0.6343896
287  248       2 0.6469514
288  269       2 0.6654239
289  303       2 0.6358812
290  324       2 0.6284593
291  184       1 0.5866904
292  272       1 0.6046488
293  295       1 0.6060970
294  222       1 0.6661349
295  298       2 0.5839913
296  312       2 0.5850304
297  333       2 0.5745412
298  335       2 0.5515156
299  337       1 0.6237461
300  286       2 0.5919577
301  307       2 0.6257782
302  309       2 0.6253097
303  311       2 0.6620424
304  232       2 0.5784906
305  249       1 0.6344878
306  284       2 0.5852982
307  299       2 0.5770692
308  201       1 0.6089654
309  244       1 0.6499396
310  257       1 0.6433436
311  316       2 0.5709514
312  322       2 0.5614363
313  281       2 0.5954493
314  181       1 0.5968071
315  182       1 0.6347674
316  308       2 0.6379579
317  292       2 0.5799890
318  296       2 0.5742367
319  239       1 0.5977840
320  320       1 0.4095280
321  339       1 0.3681788
322  186       1 0.5907869
323  225       1 0.5434025
324  302       1 0.6446770
325  317       1 0.6565431
326  329       1 0.6793321
327  254       1 0.5872160
328  197       1 0.5772865
329  275       1 0.6203239
330  270       2 0.5676650
331  304       2 0.5909053
332  323       2 0.5913671
333  260       2 0.5669960
 [ reached 'max' / getOption("max.print") -- omitted 4 rows ]

> expanded_df <- do.call(rbind, lapply(1:length(paths), function(i) {
+   path <- paths[[i]]
+   cluster <- result_df_A$Cluster[match(path[length(path)], result_df_A$Node)]
+   A_values <- result_df_A$A_value[match(path, result_df_A$Node)]
+   # Crear una columna de pasos desde la raíz (distancia en pasos desde el nodo 16)
+   steps_from_root <- seq(0, length(path)-1)
+   data.frame(Step = steps_from_root, 
+              Cluster = cluster, 
+              A_value = A_values, 
+              Terminal_Node = path[length(path)])
+ }))

> max_steps <- max((expanded_df$Step))

> max_steps
[1] 30

> # Eliminar filas donde A_value es NA
> expanded_df <- expanded_df[!is.na(expanded_df$A_value), ]

> # Asegurarse de que el Cluster no tenga NA
> expanded_df <- expanded_df[!is.na(expanded_df$Cluster), ]

> expanded_df_extended <- do.call(rbind, lapply(split(expanded_df, expanded_df$Terminal_Node), function(df) {
+   # Calcular valores adicionales de A
+   last_step <- max(df$Step)
+   last_value <-tail(df$A_value, 1)
+   cluster <- unique(df$Cluster)
+   
+   # Generar filas adicionales hasta el máximo de pasos deseado
+   additional_steps <- data.frame(
+     Step = seq(last_step, max_steps),
+     Cluster = cluster,
+     A_value = last_value,  # Usamos el último valor
+     Terminal_Node = df$Terminal_Node[1]
+   )
+   
+   # Combinar el dataframe original con los pasos adicionales
+   rbind(df, additional_steps)
+ }))

> ggplot(expanded_df_extended, aes(x = Step, y = A_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
+   geom_line(size = 0.1, alpha = 0.6) +
+   geom_point(size = 0.1) +  # Añadir puntos en cada nodo
+   geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
+   labs(
+     title = "Valores de A a lo largo de los nodos",
+     x = "Paso desde la raíz",
+     y = "Valor de A",
+     color = "Cluster"
+   ) +
+   theme_minimal() +
+   scale_color_manual(values = c("blue", "green"))  # Colores para cada cluster
`geom_smooth()` using formula = 'y ~ x'

> # Graficar los valores de A a lo largo del camino de nodos desde la raíz para cada cluster
> png("Figures/A_TRAIT_TOTAL.png", width = 2000, height = 750, res = 300)

> ggplot(expanded_df_extended, aes(x = Step, y = A_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
+   geom_line(size = 0.1, alpha = 0.6) +
+   geom_point(size = 0.1) +  # Añadir puntos en cada nodo
+   geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
+   labs(
+     title = "Valores de A a lo largo de los nodos",
+     x = "Paso desde la raíz",
+     y = "Valor de A",
+     color = "Cluster"
+   ) +
+   theme_minimal() +
+   scale_color_manual(values = c("blue", "green"))  # Colores para cada cluster
`geom_smooth()` using formula = 'y ~ x'

> dev.off()
RStudioGD 
        2 

> ################################## G ###########################################
> # Obtener los nodos terminales
> terminal_nodes <- gvt$obj$tree$tip.label

> # Obtener las rutas de nodos desde la raíz
> paths <- nodepath(gvt$obj$tree, 1:170)

> # Extraer los estados ancestrales
> G_anc_states <- gvt$anc$ace

> # Extraer estados actuales
> G_trait_vector <- setNames(G_trait2$G, rownames(G_trait2))

> print(G_trait_vector)
                     AGUA_FRIA_ALTA                      AGUA_FRIA_BAJA                             ALCONES 
                       4.144869e-02                        5.494168e-03                        2.962227e-01 
              ALGARROBAL_Y_DESPENSA              ALGARROBO_DE_HORNILLOS               ALHUEMILLA_LAS_PALMAS 
                       0.000000e+00                        0.000000e+00                        0.000000e+00 
           ALVAREZ_DE_VALLE_HERMOSO                 ANGOSTURA_DE_GALVEZ                            ATELCURA 
                       3.226121e-01                        1.828829e-01                        0.000000e+00 
                          ATUHUAICO                             BARRAZA                     BLAS_Y_BULRREME 
                       2.768192e-01                        3.401253e-01                        2.024014e-01 
            BUENOS_AIRES_DE_PUNILLA                        CABRA_CORRAL                     CALDERA_Y_DAMAS 
                       3.515916e-01                        9.959142e-02                        2.270210e-02 
                        CANELA_ALTA                         CANELA_BAJA                    CANELILLA_CANELA 
                       5.515873e-02                        1.126470e-01                        4.451477e-02 
                   CANELILLA_OVALLE                             CARCAMO          CARRIZAL_Y_LAGUNA_DE_SERON 
                       4.900130e-01                        0.000000e+00                        3.833333e-02 
          CARRIZO,_MENDOZA_Y_ROMERO                   CASTILLO_MAL_PASO                        CERRO_BLANCO 
                       1.998299e-02                        2.532922e-01                        2.260451e-01 
                      CERRO_GIGANTE                         CHACARILLAS                            CHALINGA 
                       0.000000e+00                        4.002288e-01                        1.046479e-01 
                         CHANCHOQUI                      CHAPE_Y_CHACAY                             CHELLES 
                       0.000000e+00                        4.470062e-01                        2.385417e-01 
                 CHILECITO_Y_CHUAPA                   COIPO_Y_CUYUNCAVI                           COLLIGUAY 
                       1.006776e-01                        0.000000e+00                        6.251737e-02 
             CORDILLERA_DE_CARRIZAL                        CUARTO_CAJON                   CUESTA_EL_MANZANO 
                       8.521303e-02                        1.148325e-01                        2.340984e-02 
                             CUZCUZ                    DAIN_Y_CORTADERA                            DE_ARAYA 
                       0.000000e+00                        7.991106e-02                        4.440892e-16 
                          DE_ORREGO                     DIAZ_Y_OCARANZA                            DOS_RIOS 
                       0.000000e+00                        8.112965e-02                        0.000000e+00 
                        EL_ALMENDRO                            EL_ALTAR                            EL_ATAJO 
                       0.000000e+00                        7.791460e-02                        2.772727e-01 
                          EL_CHACAY                           EL_CUYANO                       EL_DIVISADERO 
                       2.588076e-01                        4.523810e-02                        1.419874e-01 
                         EL_DURAZNO                          EL_ESPINAL                           EL_ESPINO 
                       6.508749e-02                        2.813552e-01                        6.634210e-02 
                          EL_MACANO                            EL_OLIVO                           EL_PANGUE 
                       2.897182e-01                        2.081448e-01                        0.000000e+00 
               EL_PERAL_OJO_DE_AGUA                     EL_POTRERO_ALTO             EL_POTRERO_DE_HUATULAME 
                       4.736842e-02                        0.000000e+00                        5.039138e-01 
                         EL_ROMERAL                             EL_TOME                      ESTERO_DERECHO 
                       1.929939e-01                        2.666667e-01                        1.262208e-02 
            FERNANDEZ_ANGEL_Y_OTROS                   FERNANDEZ_Y_VELIZ                    FERNANDO_ALVAREZ 
                       0.000000e+00                        1.343525e-01                        3.734033e-01 
                  FLORES_Y_SAAVEDRA                       FUNDIDA_NORTE                         FUNDIDA_SUR 
                       2.464616e-01                        1.468587e-01                        3.118280e-02 
                       GUALLIGUAICA                   HIGUERITAS_UNIDAS                           HUAMPULLA 
                       0.000000e+00                        1.152439e-01                        2.983539e-01 
                              HUANA               HUAPILLAS_MOLLAQUITAS                       HUASCOALTINOS 
                       1.206576e-01                        0.000000e+00                        3.816681e-03 
                      HUENTELAUQUEN                     HUINCHIGUALLEGO                       INGA_PICHASCA 
                       1.658951e-01                        0.000000e+00                        2.240729e-01 
                        JARA_O_LAJA                    JARILLA_Y_AZOGUE                     JIMENEZ_Y_TAPIA 
                       1.281260e-01                        0.000000e+00                        3.755501e-02 
                       LAGUNA_VERDE   LAGUNILLAS_GALLEGUILLOS_DEL_VALLE                       LAS_BARRANCAS 
                       0.000000e+00                        2.305455e-01                        2.435897e-02 
                         LAS_BATEAS                          LAS_CARDAS                           LAS_DAMAS 
                       0.000000e+00                        1.312726e-01                        4.523810e-02 
                       LAS_MINILLAS                         LAS_PAREDES                  LAS_ROJAS_DE_CUTUN 
                       0.000000e+00                        0.000000e+00                        9.063804e-02 
                          LAS_TAZAS              LAS_TRANCAS_DE_PUCLARO                           LA_CALERA 
                       0.000000e+00                        5.228758e-02                        5.239689e-01 
                         LA_CAPILLA                           LA_CEBADA                         LA_CISTERNA 
                       0.000000e+00                        3.081592e-01                        1.514423e-02 
                           LA_COIPA LA_COLORADA_DE_AGUILERA_Y_SARMIENTO                        LA_HERRADURA 
                       5.996988e-01                        1.734007e-01                        7.105427e-15 
                          LA_HOYADA                            LA_LEONA                           LA_ORTIGA 
                       4.202552e-01                        0.000000e+00                        0.000000e+00 
                           LA_PLATA                          LA_POLVADA                          LA_SAUCERA 
                       0.000000e+00                        7.105427e-15                        5.669599e-02 
                       LA_TRANQUITA                         LA_VERDIONA                           LITIPAMPA 
                       3.776224e-01                        5.364409e-01                        0.000000e+00 
                      LORENZO_ARAYA          LORENZO_PERALTA_DE_PUNILLA                       LOS_ALGODONES 
                       0.000000e+00                        4.329004e-02                        0.000000e+00 
                        LOS_ANGELES                       LOS_CERRILLOS                          LOS_CHOROS 
                       4.736842e-02                        0.000000e+00                        2.780468e-01 
                       LOS_CLONQUIS            LOS_HOYOS_Y_EL_EMPEDRADO                       LOS_LAVADEROS 
                       2.282197e-01                        3.325123e-02                        2.521008e-01 
                       LOS_MAITENES               LOS_MAITENES_DE_SERON                         LOS_MORALES 
                       4.421296e-01                        3.587435e-01                        3.170412e-01 
                          LOS_MOZOS                           LOS_POZOS                          LOS_TAPIAS 
                       1.715686e-01                        2.733333e-01                        2.076923e-01 
                          LOS_TOMES                          LOS_TRIGOS                       MAJADA_BLANCA 
                       0.000000e+00                        2.245872e-01                        0.000000e+00 
                          MANQUEHUA                   MAQUI_LOS_PALQUIS                             MIALQUI 
                       2.176690e-01                        1.946247e-01                        1.196490e-01 
                       MINCHA_NORTE                          MINCHA_SUR                        MONTE_PATRIA 
                       0.000000e+00                        7.574868e-03                        2.973456e-01 
                             MOVILO                     OLLA_DE_CALDERA                               ORURO 
                       6.428571e-02                        1.382029e-01                        3.430283e-01 
                         PEJERREYES                     PIEDRAS_BLANCAS                         PIEDRA_LISA 
                       0.000000e+00                        0.000000e+00                        2.852050e-02 
                    POTRERILLO_ALTO                        PULPICA_ALTO                        PULPICA_BAJO 
                       5.364205e-01                        0.000000e+00                        0.000000e+00 
                          PUNITAQUI            QUEBRADA_DE_COLLIGUACITO   QUEBRADA_DE_PAIHUANO_Y_SAN_ANDRES 
                       1.838879e-01                        0.000000e+00                        0.000000e+00 
                  QUEBRADA_DE_TALCA                QUEBRADA_DE_TULAHUEN                      QUEBRADA_HONDA 
                       2.437296e-01                        0.000000e+00                        0.000000e+00 
              QUEBRADA_LAS_MINILLAS               QUEBRADA_LAS_MOLLACAS                   QUEBRADA_LA_ARENA 
                       2.948276e-01                        0.000000e+00                        0.000000e+00 
                 QUEBRADA_LOS_LOROS                          QUITALLACO                           RAMADILLA 
                       3.311688e-01                        3.833333e-02                        3.485839e-01 
                              RAPEL                          RAPELCILLO              RINCONADA_DE_PUNITAQUI 
                       2.335304e-01                        0.000000e+00                        3.198819e-01 
                       RIO_COLORADO                        ROMERALCILLO                              SALALA 
                       0.000000e+00                        2.833481e-01                        1.243924e-01 
                         SAN_ISIDRO                         SAN_LORENZO                               SOCOS 
                       0.000000e+00                        5.729896e-02                        0.000000e+00 
                            TOTORAL                         TOTORALILLO                         TUNGA_NORTE 
                       0.000000e+00                        4.009553e-01                        5.499901e-02 
                          TUNGA_SUR                    UCHUMI-DIAGUITAS                          VADO_HONDO 
                       1.466831e-01                        0.000000e+00                        9.492419e-02 
                VALDIVIA_DE_PUNILLA                VALLECITO_Y_RIO_SECO                            VARILLAR 
                       2.289831e-01                        0.000000e+00                        0.000000e+00 
                            VIVANCO                          YERBA_LOCA 
                       4.736842e-02                        0.000000e+00 

> # Crear un data.frame para almacenar resultados
> result_list <- list() 

> # Iterar sobre cada nodo terminal y su ruta desde la raíz
> for (i in seq_along(paths)) {
+   # Nodo terminal y ruta de nodos desde la raíz hasta el nodo terminal
+   tip <- terminal_nodes[i]
+   path <- paths[[i]]
+   
+   # Obtener el cluster del nodo terminal desde clusters_table
+   cluster_row <- clusters_table[clusters_table$tip.label == tip, ]
+   cluster <- ifelse(nrow(cluster_row) > 0, cluster_row$cluster, NA)
+   
+   # Obtener el valor de G para el nodo terminal desde G_trait
+   G_value_terminal <- ifelse(tip %in% names(G_trait_vector), G_trait_vector[tip], NA)
+   
+   # Verificar si hay un cluster y un valor de G válido
+   if (!is.na(cluster) && !is.na(G_value_terminal)) {
+     # Agregar el nodo terminal al dataframe con su valor de G y su cluster
+     result_list[[i]] <- data.frame(
+       Node = path[length(path)],   # Último nodo en la ruta, que es el terminal
+       Cluster = cluster,
+       G_value = G_value_terminal
+     )
+     
+     # Agregar cada nodo ancestral en el path (excluyendo el terminal)
+     for (node in head(path, -1)) {  # head(path, -1) excluye el último nodo terminal
+       # Asignar el valor de G para el nodo ancestral
+       G_value <- ifelse(as.character(node) %in% names(G_anc_states), 
+                         G_anc_states[as.character(node)], NA)
+       
+       # Asegurarse de que el nodo ancestral tenga un cluster asignado
+       # Asignar el cluster del terminal (debe estar asignado ya)
+       if (!is.na(cluster) && !is.na(G_value)) {
+         result_list[[length(result_list) + 1]] <- data.frame(
+           Node = node,
+           Cluster = cluster,  # Asignamos el mismo cluster del terminal
+           G_value = G_value
+         )
+       }
+     }
+   }
+ }

> # Combinar todos los dataframes en uno solo
> result_df_G <- do.call(rbind, result_list)

> # Eliminar filas duplicadas de cada nodo (manteniendo el primero)
> result_df_G <- result_df_G[!duplicated(result_df_G$Node), ]

> # Resetear los nombres de las filas
> row.names(result_df_G) <- NULL

> # Ver el dataframe resultante
> print(result_df_G)
    Node Cluster      G_value
1      1       1 4.144869e-02
2      2       1 5.494168e-03
3      3       1 2.962227e-01
4      4       2 0.000000e+00
5      5       1 0.000000e+00
6      6       2 0.000000e+00
7      7       1 3.226121e-01
8      8       1 1.828829e-01
9      9       1 0.000000e+00
10    10       1 2.768192e-01
11    11       2 3.401253e-01
12    12       1 2.024014e-01
13    13       1 3.515916e-01
14    14       1 9.959142e-02
15    15       1 2.270210e-02
16    16       2 5.515873e-02
17    17       2 1.126470e-01
18    18       2 4.451477e-02
19    19       1 4.900130e-01
20    20       2 0.000000e+00
21    21       1 3.833333e-02
22   177       1 1.279636e-01
23    23       2 2.532922e-01
24    24       2 2.260451e-01
25    25       1 0.000000e+00
26    26       2 4.002288e-01
27    27       2 1.046479e-01
28    28       1 0.000000e+00
29    29       1 4.470062e-01
30    30       1 2.385417e-01
31    31       2 1.006776e-01
32    32       1 0.000000e+00
33    33       2 6.251737e-02
34    34       2 8.521303e-02
35    35       1 1.148325e-01
36    36       1 2.340984e-02
37    37       1 0.000000e+00
38    38       2 7.991106e-02
39    39       2 4.440892e-16
40    40       1 0.000000e+00
41    41       2 8.112965e-02
42    42       2 0.000000e+00
43    43       1 0.000000e+00
44    44       2 7.791460e-02
45    45       1 2.772727e-01
46    46       1 2.588076e-01
47    47       2 4.523810e-02
48    48       2 1.419874e-01
49    49       1 6.508749e-02
50    50       1 2.813552e-01
51    51       2 6.634210e-02
52    52       1 2.897182e-01
53    53       1 2.081448e-01
54    54       1 0.000000e+00
55    55       1 4.736842e-02
56    56       1 0.000000e+00
57    57       2 5.039138e-01
58    58       1 1.929939e-01
59    59       2 2.666667e-01
60    60       2 1.262208e-02
61    61       1 0.000000e+00
62    62       2 1.343525e-01
63    63       2 3.734033e-01
64    64       2 2.464616e-01
65    65       1 1.468587e-01
66    66       2 3.118280e-02
67    67       1 0.000000e+00
68    68       2 1.152439e-01
69    69       1 2.983539e-01
70    70       2 1.206576e-01
71    71       1 0.000000e+00
72    72       1 3.816681e-03
73    73       2 1.658951e-01
74    74       1 0.000000e+00
75    75       1 2.240729e-01
76    76       2 1.281260e-01
77    77       1 0.000000e+00
78    78       2 3.755501e-02
79    79       2 5.239689e-01
80    80       1 0.000000e+00
81    81       1 3.081592e-01
82    82       2 1.514423e-02
83    83       1 5.996988e-01
84    84       1 1.734007e-01
85    85       2 7.105427e-15
86    86       1 4.202552e-01
87    87       1 0.000000e+00
88    88       2 0.000000e+00
89    89       1 0.000000e+00
90    90       1 7.105427e-15
91    91       1 5.669599e-02
92    92       1 3.776224e-01
93    93       1 5.364409e-01
94    94       1 0.000000e+00
95    95       1 2.305455e-01
96    96       1 2.435897e-02
97    97       1 0.000000e+00
98    98       2 1.312726e-01
99    99       1 4.523810e-02
100  100       1 0.000000e+00
101  101       1 0.000000e+00
102  102       1 9.063804e-02
103  103       1 0.000000e+00
104  104       1 5.228758e-02
105  105       2 0.000000e+00
106  106       1 0.000000e+00
107  107       2 4.329004e-02
108  108       2 0.000000e+00
109  109       2 4.736842e-02
110  110       1 0.000000e+00
111  111       1 2.780468e-01
112  112       2 2.282197e-01
113  113       2 3.325123e-02
114  114       1 2.521008e-01
115  115       1 4.421296e-01
116  116       1 3.587435e-01
117  117       2 3.170412e-01
118  118       2 1.715686e-01
119  119       2 2.733333e-01
120  120       1 2.076923e-01
121  121       2 0.000000e+00
122  122       1 2.245872e-01
123  123       1 0.000000e+00
124  124       2 2.176690e-01
125  125       2 1.946247e-01
126  126       2 1.196490e-01
127  127       1 0.000000e+00
128  128       1 7.574868e-03
129  129       2 2.973456e-01
130  130       2 6.428571e-02
131  131       2 1.382029e-01
132  132       2 3.430283e-01
133  133       1 0.000000e+00
134  134       1 2.852050e-02
135  135       1 0.000000e+00
136  136       2 5.364205e-01
137  137       1 0.000000e+00
138  138       2 0.000000e+00
139  139       2 1.838879e-01
140  140       2 0.000000e+00
141  141       1 0.000000e+00
142  142       1 2.437296e-01
143  143       2 0.000000e+00
144  144       1 0.000000e+00
145  145       2 0.000000e+00
146  146       2 2.948276e-01
147  147       1 0.000000e+00
148  148       1 3.311688e-01
149  149       2 3.833333e-02
150  150       1 3.485839e-01
151  151       2 2.335304e-01
152  152       2 0.000000e+00
153  153       2 3.198819e-01
154  154       2 0.000000e+00
155  155       2 2.833481e-01
156  156       2 1.243924e-01
157  157       2 0.000000e+00
158  158       2 5.729896e-02
159  159       1 0.000000e+00
160  160       1 0.000000e+00
161  161       1 4.009553e-01
162  162       1 5.499901e-02
163  163       1 1.466831e-01
164  171       1 1.181168e-01
165  165       2 9.492419e-02
166  166       1 2.289831e-01
167  167       1 0.000000e+00
168  168       1 0.000000e+00
169  169       2 4.736842e-02
170  170       2 0.000000e+00
171  185       1 1.215694e-01
172  187       1 1.203683e-01
173  188       1 1.188752e-01
174  190       1 1.196772e-01
175  191       1 1.212859e-01
176  200       1 1.242769e-01
177  204       1 1.242697e-01
178  205       1 1.250398e-01
179  212       1 1.254991e-01
180  213       1 1.242707e-01
181  279       1 1.593149e-01
182  172       2 1.184048e-01
183  173       2 1.279871e-01
184  175       2 1.280928e-01
185  179       2 1.274194e-01
186  180       2 1.221104e-01
187  214       2 1.295961e-01
188  224       2 1.329151e-01
189  227       2 1.405124e-01
190  229       2 1.638032e-01
191  245       2 1.984352e-01
192  176       1 1.332344e-01
193  194       1 1.445550e-01
194  216       1 1.406872e-01
195  178       1 1.317858e-01
196  183       1 2.129489e-01
197  189       1 1.149174e-01
198  195       1 9.866755e-02
199  209       1 5.922463e-02
200  250       1 4.093270e-02
201  297       1 3.490652e-02
202  331       1 4.193772e-02
203  196       1 1.137228e-01
204  202       1 1.134369e-01
205  218       1 1.006235e-01
206  234       1 9.483607e-02
207  223       2 1.143671e-01
208  251       2 1.161529e-01
209  273       2 8.007971e-02
210  226       2 1.289743e-01
211  236       2 1.285494e-01
212  240       2 1.236127e-01
213  247       2 1.145751e-01
214  261       2 9.222958e-02
215  278       2 9.132494e-02
216  280       2 9.549452e-02
217  290       2 9.965140e-02
218  203       1 1.246350e-01
219  206       1 1.258269e-01
220  208       1 1.326277e-01
221  219       1 1.342616e-01
222  221       1 1.345978e-01
223  228       1 1.399890e-01
224  231       1 1.504942e-01
225  242       1 1.500720e-01
226  253       1 1.543461e-01
227  246       2 1.778218e-01
228  263       2 2.042179e-01
229  306       2 1.612198e-01
230  334       2 1.116490e-01
231  259       1 1.421247e-01
232  271       1 1.029496e-01
233  288       1 9.894282e-02
234  293       1 7.365116e-02
235  327       1 8.254139e-02
236  336       1 1.292035e-01
237  338       1 7.927356e-02
238  230       2 1.397774e-01
239  233       2 1.142920e-01
240  255       2 1.066187e-01
241  267       2 1.068624e-01
242  276       2 1.129384e-01
243  294       2 1.158444e-01
244  300       2 1.348229e-01
245  315       2 1.290997e-01
246  319       2 1.282082e-01
247  326       1 2.383111e-02
248  264       2 1.798596e-01
249  266       2 1.839880e-01
250  274       2 1.996410e-01
251  283       2 2.572723e-01
252  193       1 1.307022e-01
253  217       1 7.151285e-02
254  192       1 1.209090e-01
255  198       1 1.389216e-01
256  238       1 1.521978e-01
257  174       1 1.464068e-01
258  210       1 1.869486e-01
259  237       1 2.292371e-01
260  277       2 8.441940e-02
261  282       2 7.964193e-02
262  291       2 8.053305e-02
263  301       2 8.102286e-02
264  305       2 9.130368e-02
265  241       1 2.551126e-01
266  313       1 2.140560e-01
267  318       2 7.095957e-02
268  211       1 1.210632e-01
269  256       1 1.108814e-01
270  268       1 1.075914e-01
271  252       2 1.439552e-01
272  262       2 1.433229e-01
273  265       2 1.383262e-01
274  285       2 1.786572e-01
275  310       2 1.390002e-01
276  330       2 1.220842e-01
277  235       2 1.242406e-01
278  258       2 1.192049e-01
279  289       2 7.294047e-02
280  321       2 9.456258e-02
281  328       2 9.522466e-02
282  215       1 2.281914e-01
283  220       1 1.476599e-01
284  199       2 1.197573e-01
285  207       2 1.309177e-01
286  243       2 1.381162e-01
287  248       2 1.192173e-01
288  269       2 1.047444e-01
289  303       2 1.149233e-01
290  324       2 1.226159e-01
291  184       1 1.234491e-01
292  272       1 1.344538e-01
293  295       1 1.188074e-01
294  222       1 2.523743e-02
295  298       2 1.044217e-01
296  312       2 1.273306e-01
297  333       2 1.538504e-01
298  335       2 2.629076e-01
299  337       1 1.217608e-01
300  286       2 1.193368e-01
301  307       2 2.073663e-01
302  309       2 2.089758e-01
303  311       2 2.707476e-01
304  232       2 1.625585e-01
305  249       1 3.377860e-02
306  284       2 1.971473e-01
307  299       2 1.775486e-01
308  201       1 1.077433e-01
309  244       1 3.750079e-02
310  257       1 1.194338e-01
311  316       2 1.711666e-01
312  322       2 1.543594e-01
313  281       2 4.689911e-02
314  181       1 1.275805e-01
315  182       1 1.119097e-01
316  308       2 2.313960e-01
317  292       2 7.753199e-02
318  296       2 6.966775e-02
319  239       1 1.606843e-01
320  320       1 3.245547e-01
321  339       1 3.324939e-01
322  186       1 1.186375e-01
323  225       1 6.129407e-02
324  302       1 2.811921e-02
325  317       1 2.739219e-02
326  329       1 2.051712e-02
327  254       1 4.112183e-02
328  197       1 1.314975e-01
329  275       1 1.355548e-01
330  270       2 1.974544e-01
331  304       2 7.286621e-02
332  323       2 8.363104e-02
333  260       2 1.235548e-01
 [ reached 'max' / getOption("max.print") -- omitted 4 rows ]

> expanded_df <- do.call(rbind, lapply(1:length(paths), function(i) {
+   path <- paths[[i]]
+   cluster <- result_df_G$Cluster[match(path[length(path)], result_df_G$Node)]
+   G_values <- result_df_G$G_value[match(path, result_df_G$Node)]
+   # Crear una columna de pasos desde la raíz (distancia en pasos desde el nodo 16)
+   steps_from_root <- seq(0, length(path)-1)
+   data.frame(Step = steps_from_root, 
+              Cluster = cluster, 
+              G_value = G_values, 
+              Terminal_Node = path[length(path)])
+ }))

> max_steps <- max((expanded_df$Step))

> max_steps
[1] 30

> # Eliminar filas donde G_value es NA
> expanded_df <- expanded_df[!is.na(expanded_df$G_value), ]

> # Asegurarse de que el Cluster no tenga NA
> expanded_df <- expanded_df[!is.na(expanded_df$Cluster), ]

> expanded_df_extended <- do.call(rbind, lapply(split(expanded_df, expanded_df$Terminal_Node), function(df) {
+   # Calcular valores adicionales de G
+   last_step <- max(df$Step)
+   last_value <-tail(df$G_value, 1)
+   cluster <- unique(df$Cluster)
+   
+   # Generar filas adicionales hasta el máximo de pasos deseado
+   additional_steps <- data.frame(
+     Step = seq(last_step, max_steps),
+     Cluster = cluster,
+     G_value = last_value,  # Usamos el último valor
+     Terminal_Node = df$Terminal_Node[1]
+   )
+   
+   # Combinar el dataframe original con los pasos adicionales
+   rbind(df, additional_steps)
+ }))

> ggplot(expanded_df_extended, aes(x = Step, y = G_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
+   geom_line(size = 0.1, alpha = 0.6) +
+   geom_point(size = 0.1) +  # Añadir puntos en cada nodo
+   geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
+   labs(
+     title = "Valores de G a lo largo de los nodos",
+     x = "Paso desde la raíz",
+     y = "Valor de G",
+     color = "Cluster"
+   ) +
+   theme_minimal() +
+   scale_color_manual(values = c("blue", "green"))  # Colores para cada cluster
`geom_smooth()` using formula = 'y ~ x'

> # Graficar los valores de G a lo largo del camino de nodos desde la raíz para cada cluster
> png("Figures/G_TRAIT_TOTAL.png", width = 2000, height = 750, res = 300)

> ggplot(expanded_df_extended, aes(x = Step, y = G_value, color = as.factor(Cluster), group = interaction(Cluster, Terminal_Node))) +
+   geom_line(size = 0.1, alpha = 0.6) +
+   geom_point(size = 0.1) +  # Añadir puntos en cada nodo
+   geom_smooth(aes(group = Cluster), method = "lm", se = FALSE, size = 1.2, linetype = "dashed") +  # Línea de tendencia
+   labs(
+     title = "Valores de G a lo largo de los nodos",
+     x = "Paso desde la raíz",
+     y = "Valor de G",
+     color = "Cluster"
+   ) +
+   theme_minimal() +
+   scale_color_manual(values = c("blue", "green"))  # Colores para cada cluster
`geom_smooth()` using formula = 'y ~ x'

> dev.off()
RStudioGD 
        2 

> ################################## M ###########################################
> # Obtener los nodos terminales
> terminal_nodes <- mvt$obj$tree$tip.label
❌ Error in script: scripts_fv/OBJETIVO_5.6.Clades_vs_Ancv2.R

### [Step 18/19] Running: scripts_fv/OBJETIVO_5.7.HIP_1.R ###


> ##########################################################################################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth inheritance and land tenure norms in agropastoralist communities.############
> ##########################################################################################################################################################
> 
> #### HIPOTESIS 1 ####
> #### OBJETIVO 5 ####
> ### Part 7 ###
> ### To plot over tips of the resulting trees the estimated values of each trait, and compute the most likely values for each at the internal nodes ###
> 
> ###There was a change in wealth inheritance cultural norms, transiting from agnatic primogeniture
> ###(Spanish majorat) to non partible multigeniture originating the common tenure norm of property of right.
> ###Predictions of this hypothesis are high values of S and A, and low values for R at the basal internal
> ###nodes of the tree if agnatic primogeniture is the ancestral state. If that is followed by an early stage of
> ###non-partible multigeniture, R and S should be both low at the following internal nodes of the tree.
> 
> ### Estados basales sampled communities###
> 
> crear_grafico <- function(vc,v1, label,filename) {
+   png(filename,width = 1400, height = 1000, res = 200)
+   # Ajustar margen y tama?o de texto para evitar colapso
+   par(mar = c(1, 1, 4, 1) + 0.1)
+   
+   # Ajustar la separacion entre nodos y otros parametros
+   plot(vc$obj, type = "phylogram",offset = 3, legend = 0.7 * max(nodeHeights(vc$obj$tree)), ftype = "reg", leg.txt = label, no.margin = F)
+   title(main = paste(label, "ancestral tree"), line = 2)
+   nodelabels(text = round(vc$anc$ace, 4), cex = 0.5, bg = "lightblue")
+   tip_values <- v1[consensus_tree$tip.label] 
+   tiplabels(text = round(tip_values, 4), cex = 0.6, bg = "lightpink", offset = 0.06)
+   dev.off()
+ }

> # Llamar a la funci?n para cada comunidad muestreada
> crear_grafico(svc,sv1, "S", "Figures/S_ancestral_tree_muestra.png")
RStudioGD 
        2 

> crear_grafico(gvc,gv1,"G", "Figures/G_ancestral_tree_muestra.png")
RStudioGD 
        2 

> crear_grafico(avc,av1, "A", "Figures/A_ancestral_tree_muestra.png")
RStudioGD 
        2 

> #crear_grafico(rvc,rv1, "R", "Figures/R_ancestral_tree_muestra.png") #TODO rror in h(simpleError(msg, call)) : error in evaluating the argument 'x' in selecting a method for function 'plot': object 'rvc' not found
> crear_grafico(mvc,mv1, "M", "Figures/M_ancestral_tree_muestra.png")
RStudioGD 
        2 

> ### Estados basales total communities###
> crear_grafico2 <- function(vt,v2, label,filename) {
+   pdf(filename,
+       width=200,
+       height=250)
+   # Ajustar margen y tama?o de texto para evitar colapso
+   par(mar = c(4, 4, 2, 2) + 0.1)
+   plot(vt$obj, type = "phylogram",offset = 20, legend = 0.7 * max(nodeHeights(vt$obj$tree)), ftype = "reg",cex=8, leg.txt = label, no.margin = F)
+   title(main = paste(label, "ancestral tree"), line = 2)
+   nodelabels(text = round(vt$anc$ace, 4), cex = 5, bg = "lightblue")
+   tip_values <- v2[y_total$tip.label] 
+   tiplabels(text = round(tip_values, 4), cex = 5, bg = "lightpink", offset = 0.005)
+   # Cerrar el dispositivo gr?fico PDF
+   dev.off()
+ }

> # Llamar a la funcion para el total de comunidades
> crear_grafico2(svt, sv2, "S", "Figures/S_ancestral_tree_total.pdf")
RStudioGD 
        2 

> crear_grafico2(gvt, gv2, "G", "Figures/G_ancestral_tree_total.pdf")
RStudioGD 
        2 

> crear_grafico2(avt, av2, "A", "Figures/A_ancestral_tree_total.pdf")
RStudioGD 
        2 

> #crear_grafico2(rvt, rv2, "R", "Figures/R_ancestral_tree_total.pdf") #TODO Error in h(simpleError(msg, call)) : error in evaluating the argument 'x' in selecting a method for function 'plot': object 'rvt' not found
> crear_grafico2(mvt, mv2, "M", "Figures/M_ancestral_tree_total.pdf")
❌ Error in script: scripts_fv/OBJETIVO_5.7.HIP_1.R

### [Step 19/19] Running: scripts_fv/OBJETIVO_5.8.I_de_Moran.R ###


> ##########################################################################################################################################################
> #########Project 111160402: Cultural phylogenetics and coevolution of wealth inheritance and land tenure norms in agropastoralist communities.############
> ##########################################################################################################################################################
> #### OBJETIVO 5 ####
> ### Part 8 ###
> ### To plot over tips of the resulting trees the estimated values of each trait, and compute the most likely values for each at the internal nodes ###
> 
> #### LIBRERÍAS
> library(spdep)

> library(dplyr)

> library(geosphere)

> library(SDPDmod)

> #Datos geográficos
> coordenadas <- read.csv("scripts_fv/Datos/coordenadas.csv", header = T, fileEncoding = "UTF-8-BOM")

> coordenadas$community <- gsub(" ", "_", coordenadas$community)

> coordenadas$community[grepl("LA_RINCONADA_DE_PUNITAQUI" , coordenadas$community)] <- "RINCONADA_DE_PUNITAQUI"

> rownames(coordenadas) <- coordenadas$community

> colnames(coordenadas)<- c("community","lon","lat","org_name")

> coordenadas<-select(coordenadas,community,lon,lat)

> #Data community
> #View(GM_df)
> # Ajustar el modelo de regresión de G ~ M
> modelo <- lm(G ~ M, data = GM_df)

> G.reg.M <- predict(modelo)

> #Crear df
> # Combinar tablas por una clave común (por ejemplo, "community")
> GM_df$community <- row.names(GM_df)

> community_data <- GM_df %>%
+   left_join(coordenadas, by = "community" ) %>%
+   mutate(
+     G.reg.M = predict(lm(M ~ G, data = .))  # Calcular valores ajustados (G~M)
+   ) %>%
+   select(community, G, M, lon, lat, G.reg.M)

> community_data <- na.omit(community_data)

> # Verificar el resultado
> colnames(community_data)
[1] "community" "G"         "M"         "lon"       "lat"       "G.reg.M"  

> head(community_data)
               community           G          M       lon       lat     G.reg.M
1         AGUA_FRIA_ALTA 0.041448692 0.04225352 -71.37628 -31.50133  0.03043674
2         AGUA_FRIA_BAJA 0.005494168 0.00000000 -71.38273 -31.54779 -0.01154834
3                ALCONES 0.296222710 0.31048387 -71.54502 -30.79524  0.32794326
4  ALGARROBAL_Y_DESPENSA 0.000000000 0.00000000 -70.60645 -29.96384 -0.01796402
5 ALGARROBO_DE_HORNILLOS 0.000000000 0.00000000 -71.50581 -31.15801 -0.01796402
6  ALHUEMILLA_LAS_PALMAS 0.000000000 0.00000000 -71.52314 -31.22566 -0.01796402

> # Create spatial points from coordinates
> community_data$G.reg.M
            1             2             3             4             5             6             7             8 
 0.0304367368 -0.0115483355  0.3279432645 -0.0179640246 -0.0179640246 -0.0179640246  0.3587588535  0.1955932754 
            9            10            11            12            13            14            15            16 
-0.0179640246  0.3052852650  0.3792095367  0.2183855446  0.3925990081  0.0983315761  0.0085458378  0.0464463226 
           17            18            19            20            21            22            23            24 
 0.1135769453  0.0340170766  0.5542374161 -0.0179640246  0.0267988479  0.0053706582  0.2778121216  0.2459950074 
           25            26            27            28            29            30            31            32 
-0.0179640246  0.4493939896  0.1042362141 -0.0179640246  0.5040172841  0.2605875461  0.0995999389 -0.0179640246 
           33            34            35            36            37            38            39            40 
 0.0550391983  0.0815415435  0.1161290405  0.0093722756 -0.0179640246  0.0753502812 -0.0179640246 -0.0179640246 
           41            42            43            44            45            46            47            48 
 0.0767732710 -0.0179640246 -0.0179640246  0.0730189664  0.3058148555  0.2842526119  0.0348617255  0.1478385480 
           49            50            51            52            53            54            55            56 
 0.0580404073  0.3105821240  0.0595054402  0.3203477620  0.2250922967 -0.0179640246  0.0373493647 -0.0179640246 
           57            58            59            60            61            62            63            64 
 0.5704698315  0.2074001382  0.2934298710 -0.0032248800 -0.0179640246  0.1389230775  0.4180691294  0.2698358371 
           65            66            67            68            69            70            71            73 
 0.1535269113  0.0184489712 -0.0179640246  0.1166094044  0.3304319235  0.1229310887 -0.0179640246  0.1757562295 
           74            75            76            77            78            79            80            81 
-0.0179640246  0.2436919869  0.1316521378 -0.0179640246  0.0258899731 -0.0179640246  0.2512501524  0.0104806101 
           82            83            84            85            86            87            88            89 
-0.0179640246  0.1353265272  0.0348617255 -0.0179640246 -0.0179640246  0.0878764766 -0.0179640246  0.0430936020 
           90            91            92            93            94            95            96            97 
 0.5938886349 -0.0179640246  0.3418818317 -0.0002796958  0.6823204836  0.1845206424 -0.0179640246  0.4727793456 
           98            99           100           101           102           103           104           105 
-0.0179640246 -0.0179640246 -0.0179640246 -0.0179640246  0.0482414224  0.4229958626  0.6084525867 -0.0179640246 
          106           107           108           109           110           111           112           113 
-0.0179640246  0.0325869325 -0.0179640246  0.0373493647 -0.0179640246  0.3067187667  0.2485343023  0.0208643398 
          114           115           116           117           118           119           120           121 
 0.2764209608  0.4983227295  0.4009504824  0.3522535775  0.1823813127  0.3012147184  0.2245639133 -0.0179640246 
          122           123           124           125           126           127           128           129 
 0.2442924857 -0.0179640246  0.2362140160  0.2093044581  0.1217533242 -0.0179640246 -0.0091186461  0.3292545478 
          130           131           132           133           134           135           136           137 
 0.0571041467  0.1434192465  0.3825994466 -0.0179640246 -0.0179640246  0.0153401353  0.6084287908 -0.0179640246 
          138           139           140           141           142           143           144           145 
-0.0179640246  0.1967669046 -0.0179640246 -0.0179640246  0.2666455815 -0.0179640246 -0.0179640246  0.3263141402 
          146           147           148           149           150           151           152           153 
-0.0179640246 -0.0179640246  0.3687507971  0.0267988479  0.3890868194  0.2547357605 -0.0179640246  0.3555707090 
          154           155           156           157           158           159           161           162 
-0.0179640246  0.3129092892  0.1272923273 -0.0179640246  0.0489455281 -0.0179640246  0.4502423477  0.0462598058 
          163           164           165           166           167           168           169           170 
 0.1533217561 -0.0179640246  0.0928815282  0.2494256913 -0.0179640246 -0.0179640246  0.0373493647 -0.0179640246 

> coords <- community_data[, c("lon", "lat")]

> # Generate distance-based neighbors (e.g., within a distance of 1.5 units)
> # Units are somewhat arbitrary, ew may need to find a number by trial an error
> neighbors <- dnearneigh(coords, 0, 1.5)

> # Convert to spatial weights
> weights <- nb2listw(neighbors, style = "W") 

> # K-neighbours
> 
> # Generate k-nearest neighbors (determining k is also a bit trial an error)
> n <- nrow(community_data)

> k_est <- sqrt(n)/2

> k_est_2 <- n^(1/2)

> #neighbors_knn <- knn2nb(knearneigh(coords, k = k_est_2)) #Or k_est_2 ## NO FUNCIONA
> # Convert to spatial weights
> #weights_knn <- nb2listw(neighbors_knn, style = "W")
> #TODO Warning message:
> #In matrix(z$nn, np, k, byrow = TRUE) :
> #  data length [2177] is not a sub-multiple or multiple of the number of rows [168]
> 
> 
> 
> # Moran's I for G,M
> moran_G <- moran.test(community_data$G, weights)

> print(moran_G)

	Moran I test under randomisation

data:  community_data$G  
weights: weights    

Moran I statistic standard deviate = -3.7758, p-value = 0.9999
alternative hypothesis: greater
sample estimates:
Moran I statistic       Expectation          Variance 
    -1.419118e-02     -5.988024e-03      4.720147e-06 


> # I>0, Positive autocorrelation (similar values cluster).
> # I=0, Random distribution.
> # I<0, Negative autocorrelation (dissimilar values cluster). *** ESTE ES EL CASO
> 
> moran_M <- moran.test(community_data$M, weights)

> print(moran_M)

	Moran I test under randomisation

data:  community_data$M  
weights: weights    

Moran I statistic standard deviate = -2.8454, p-value = 0.9978
alternative hypothesis: greater
sample estimates:
Moran I statistic       Expectation          Variance 
    -1.210217e-02     -5.988024e-03      4.617416e-06 


> # I>0, Positive autocorrelation (similar values cluster).
> # I=0, Random distribution.
> # I<0, Negative autocorrelation (dissimilar values cluster). *** ESTE ES EL CASO
> 
> moran_GM <- moran.test(community_data$G.reg.M, weights)

> print(moran_GM)

	Moran I test under randomisation

data:  community_data$G.reg.M  
weights: weights    

Moran I statistic standard deviate = -3.7758, p-value = 0.9999
alternative hypothesis: greater
sample estimates:
Moran I statistic       Expectation          Variance 
    -1.419118e-02     -5.988024e-03      4.720147e-06 


> # I>0, Positive autocorrelation (similar values cluster).
> # I=0, Random distribution.
> # I<0, Negative autocorrelation (dissimilar values cluster). *** ESTE ES EL CASO
> 
